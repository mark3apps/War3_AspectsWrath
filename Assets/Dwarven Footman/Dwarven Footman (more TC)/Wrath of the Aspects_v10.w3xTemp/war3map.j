//===========================================================================
// 
// Death
// 
//   Warcraft III map script
//   Generated by the Warcraft III World Editor
//   Map Author: Mark
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    // User-defined
    integer                 udg_INTcreepLevel          = 0
    force                   udg_PLAYERGRPallied        = null
    force                   udg_PLAYERGRPfederation    = null
    timer                   udg_CreepUpgrade           = null
    timer                   udg_TIMERCreepSpawn        = null
    timerdialog             udg_TIMEWINcreepLevelUpgrade = null
    group                   udg_RevivableHeros         = null
    real                    udg_TempReal               = 0
    timer array             udg_ReviveTimers
    timerdialog array       udg_ReviveTimerWindows
    player array            udg_PLAYERcomputers
    location                udg_DM_CasterLoc           = null
    group                   udg_DM_TempGroup           = null
    group                   udg_AT_Units               = null
    group                   udg_AT_Units_Picked        = null
    player                  udg_TC_Player              = null
    camerasetup array       udg_StartCameras
    force                   udg_PLAYERGRPalliedUsers   = null
    force                   udg_PLAYERGRPfederationUsers = null
    unit array              udg_UNIT_pickedHero
    group array             udg_UNIT_Bases
    group array             udg_UNIT_Healing
    boolean array           udg_BOOL_AIHealing
    integer array           udg_INT_TeamNumber
    unit array              udg_UNIT_AI_PickedDest
    unit                    udg_UNIT_AI_CurHero        = null
    real                    udg_REAL_AI_Distance       = 0
    boolean array           udg_BOOL_AI_Alive
    integer                 udg_INT_RandTemp           = 0
    boolean array           udg_BOOL_AI_Casting
    real array              udg_REAL_AI_PreviousLife
    real array              udg_REAL_AI_DamageTaken
    boolean array           udg_BOOL_AI_Fleeing
    real array              udg_REAL_AI_PreviousLife2
    real array              udg_REAL_AI_DamageTakenAverage
    group                   udg_GRP_AI_HeroesAroundHero = null
    boolean array           udg_BOOL_AI_AttackingHero
    location array          udg_POINT_AI_PursueStart
    integer                 udg_INT_AI_Player          = 0
    location                udg_TEMP_Pos_Hero          = null
    location                udg_TEMP_Pos2              = null
    location array          udg_POINT_AI_Destination
    integer array           udg_SPAWN_NumberOfUnits
    integer array           udg_SPAWN_UnitType
    integer array           udg_SPAWN_LevelStart
    integer array           udg_SPAWN_OVER_UnitTypes
    rect array              udg_SPAWN_OVER_RegionStart
    rect array              udg_SPAWN_OVER_RegionEnd
    integer array           udg_SPAWN_LevelEnd
    integer                 udg_SPAWN_LoopBases        = 0
    integer                 udg_SPAWN_LoopPlayer       = 0
    integer                 udg_SPAWN_LoopUnitTypes    = 0
    location                udg_SPAWN_TMP_posSTART     = null
    player                  udg_SPAWN_TMP_Player       = null
    location                udg_SPAWN_TMP_posEND       = null
    integer                 udg_SPAWN_LoopNumberOfUnits = 0
    integer                 udg_SPAWN_TMP_TeamNumber   = 0
    integer                 udg_SPAWN_TMP_NumOfUnitsREAL = 0
    integer array           udg_SPAWN_OVER_WavesStart
    integer                 udg_SPAWN_LoopWaves        = 0
    integer array           udg_SPAWN_OVER_WavesEnd
    integer                 udg_TEMP_IntLoop1          = 0
    integer                 udg_TMP_INT_SpawnRegion    = 0
    integer                 udg_TMP_INT_SpawnUnitTypes = 0
    unit array              udg_SPAWN_OVER_UnitCondition
    force                   udg_ALL_PLAYERS            = null
    timer                   udg_TIMER_Attack           = null
    unit                    udg_Doom_Warden            = null
    boolean                 udg_Doom_WardenPickedSides = false
    group                   udg_BloodlustGroup         = null
    real array              udg_Bloodlust_AttackSpeed
    group                   udg_UnleashRage_Group      = null
    real array              udg_BrawlerMana
    group                   udg_DrainLifeCasters       = null
    group                   udg_DrainLifeTargets       = null
    unit                    udg_TEMP_Unit              = null
    integer                 udg_TEMP_Int               = 0
    integer array           udg_drainTime
    group                   udg_TEMP_UnitGroup         = null
    location                udg_TEMP_Pos_Spell         = null
    group                   udg_GRP_AI_Creeps          = null
    boolean array           udg_BOOL_AI_UpdateDest
    force                   udg_UserPlayers            = null
    unit array              udg_AI_PursueHero
    location array          udg_AI_TargetHeroPoint
    timer                   udg_EventTimer             = null
    integer                 udg_DL_Index               = 0
    unit array              udg_DL_Caster
    real array              udg_DL_Counter
    integer                 udg_DL_Loop                = 0
    integer                 udg_UR_Loop                = 0
    real array              udg_UR_Counter
    integer                 udg_UR_Index               = 0
    unit array              udg_UR_Caster
    integer                 udg_MO_Index               = 0
    real array              udg_MO_Counter
    integer                 udg_MO_Loop                = 0
    unit array              udg_MO_Caster
    real array              udg_MO_UnitCount
    integer array           udg_MO_AbilityLevel
    real array              udg_MO_Pushback
    rect array              udg_EndRegionsSpawn
    integer array           udg_Mana_Overload_Researched
    boolean array           udg_Frost_Attack_Researched
    integer array           udg_AI_Strategy
    integer                 udg_AI_Index               = 0
    integer                 udg_AI_Loop                = 0
    unit array              udg_AI_Hero
    real array              udg_AI_Snaps_Health
    group                   udg_AI_T_Units             = null
    unit array              udg_AI_Destination
    boolean array           udg_AI_B_Alive
    boolean array           udg_AI_B_Cast_Spell
    boolean array           udg_AI_B_Low_Health
    boolean array           udg_AI_B_Chasing
    boolean array           udg_AI_B_Defending
    boolean array           udg_AI_B_Taking_Heavy_Damage
    real array              udg_AI_Strat_Heal_HealthFactor
    real array              udg_AI_Strat_Heal_ManaFactor
    real array              udg_AI_Strat_HighDamageSingle
    real                    udg_AI_T_HealthLost2       = 0
    location                udg_AI_T_HeroPosition      = null
    real                    udg_AI_T_DestinationUnit   = 0
    real array              udg_AI_Strat_HighDamageAverage
    integer                 udg_AI_T_CloseCountFriendly = 0
    integer                 udg_AI_T_CloseCountEnemy   = 0
    group                   udg_AI_T_HeroesOnMapFriendly = null
    group                   udg_AI_T_HeroesOnMapEnemy  = null
    group                   udg_AI_T_HeroesInRangeFriendly = null
    group                   udg_AI_T_HeroesInRangeEnemy = null
    boolean array           udg_AI_Strat_CAN_Agressive
    boolean array           udg_AI_Strat_CAN_Defence
    boolean array           udg_AI_Strat_CAN_Assasin
    boolean array           udg_AI_Strat_CAN_Support
    boolean array           udg_AI_Strat_CAN_Creep
    real                    udg_AI_T_SnapLifeCurrent   = 0
    real                    udg_AI_T_SnapLifeMax       = 0
    real                    udg_AI_T_HealthLost1       = 0
    string                  udg_AI_T_String
    location                udg_AI_T_DestinationPosition = null
    real                    udg_AI_T_HealthCurrent     = 0
    real                    udg_AI_T_ManaCurrent       = 0
    boolean array           udg_AI_B_Fleeing
    real array              udg_AI_Strat_Heal_LowPercent
    real array              udg_AI_Strat_Heal_LowNumber
    real                    udg_AI_T_SnapLifePercent   = 0
    real array              udg_AI_Strat_Heal_HighPercent
    real                    udg_AI_T_HealthLostAll     = 0
    unit array              udg_AI_ChaseHero
    unit array              udg_AI_HealDestination
    integer                 udg_AI_T_PowerCount        = 0
    integer                 udg_AI_T_PowerFriendly     = 0
    integer                 udg_AI_T_PowerEnemy        = 0
    real array              udg_AI_Strat_Power_LevelFactor
    real array              udg_AI_Strat_Power_Base
    boolean array           udg_AI_B_Update_Dest
    real                    udg_TEMP_Real              = 0
    real array              udg_AI_Counter
    integer array           udg_Creep_Team
    unit array              udg_Creep_Unit
    rect array              udg_Creep_Start
    integer                 udg_Creep_Index            = 0
    real array              udg_Creep_Timer
    integer array           udg_Creep_Unit_Type
    integer array           udg_Event_Count
    integer                 udg_Event_Counter          = 0
    integer                 udg_Event_Unit_Type        = 0
    integer                 udg_FA_Index               = 0
    integer                 udg_FA_Loop                = 0
    unit array              udg_FA_Caster
    location array          udg_FA_StartPoint
    real array              udg_FA_Facing
    real array              udg_FA_Counter
    real array              udg_FA_Distance
    real array              udg_FA_Duration
    integer array           udg_JD_Integers
    location array          udg_JD_TempPoint
    unit                    udg_JDA_Unit               = null
    real array              udg_JD_Distances
    location                udg_JDA_TargetPoint        = null
    real array              udg_JD_ReachedDistance
    real array              udg_JD_SpeedUnits
    real                    udg_JDA_Speed              = 0
    unit array              udg_JD_Unit
    real array              udg_JD_Angle
    string array            udg_JD_Effect
    string                  udg_JDA_SpecialEffect
    string array            udg_JD_Animations
    string                  udg_JDA_Animation
    boolean array           udg_JD_TreesDestroy
    boolean                 udg_JDA_DestroyTrees_Dash  = false
    real array              udg_JD_HighSettings
    real                    udg_JDA_JumpHigh_Distance  = 0
    real                    udg_JDA_AnimationSpeed     = 0
    group                   udg_JD_Group               = null
    real array              udg_JD_RealTimer
    real array              udg_JD_JumpHigh
    boolean                 udg_JDA_Collusion          = false
    real                    udg_TEMP_Real_2            = 0
    player                  udg_TEMP_Player            = null
    group                   udg_TEMP_UnitGroup2        = null
    integer                 udg_TEMP_Int2              = 0
    unit                    udg_SB_Caster              = null
    hashtable               udg_FN_Hash                = null
    group                   udg_FN_Group               = null
    location                udg_Spell_LOC_Spell        = null
    location                udg_Spell_LOC_Cast         = null
    real                    udg_Spell_Counter          = 0
    real                    udg_Spell_Duration         = 0
    integer                 udg_Spell_Level            = 0
    real                    udg_Spell_Distance         = 0
    real                    udg_Spell_Speed            = 0
    real                    udg_FN_Interval            = 0
    integer                 udg_Spell_Phase            = 0
    hashtable               udg_Ordered_Unit_Queue     = null
    group                   udg_Ordered_Unit_Group     = null
    hashtable               udg_Attack_Hash            = null
    group                   udg_Attack_Unit_Group      = null
    unit                    udg_Spell_Unit_Target      = null
    player                  udg_Spell_Player           = null
    real                    udg_Attack_Interval        = 0
    integer array           udg_Hero_Levels
    string array            udg_AI_CurrentOrder
    group                   udg_AI_T_IllusionsNearby   = null
    integer                 udg_FA_Level               = 0
    unit array              udg_Alters
    location                udg_TEMP_Pos_Move          = null
    group                   udg_Gates_Open             = null
    group                   udg_Gates_Closed           = null
    rect                    udg_TEMP_Region            = null
    integer                 udg_TEMP_Int3              = 0
    integer array           udg_Villiger_UnitTypes
    hashtable               udg_Inspired_Hash          = null
    group                   udg_Inspired_UnitGroup     = null
    real                    udg_Inspired_Interval      = 0
    real                    udg_CALC_Level_Factor      = 0
    real                    udg_CALC_Base              = 0
    real                    udg_CALC_Constant          = 0
    real                    udg_CALC_Previous_Value    = 0
    integer                 udg_CALC_LOOP              = 0
    integer                 udg_CALC_ITERATIONS        = 0
    real                    udg_CALC_RESULT            = 0
    unit                    udg_Spell_Caster           = null
    hashtable               udg_Paradox_HASH           = null
    real                    udg_Paradox_INTERVAL       = 0
    group                   udg_Paradox_GROUP          = null
    hashtable               udg_TimeTravel_HASH        = null
    group                   udg_TimeTravel_GROUP       = null
    real                    udg_TimeTravel_INTERVAL    = 0
    real                    udg_Spell_Damage           = 0
    boolean array           udg_AI_B_Cast_ULT
    unit                    udg_FUNC_Base_Unit         = null
    real                    udg_FUNC_Base_REAL_Distance = 0
    location                udg_FUNC_Base_Point_TEMP   = null
    real array              udg_AI_B_Cast_Spell_Counter
    group array             udg_UNIT_Bases_Teleport
    real array              udg_TEMP_A_REAL
    integer array           udg_TEMP_A_INT
    unit array              udg_TEMP_A_UNIT
    boolean array           udg_AI_Strat_CalculateClumpEnemy
    boolean array           udg_AI_Strat_CalculateClumpAlly
    boolean array           udg_AI_Strat_CalculateClumpComb
    unit                    udg_AI_T_ClumpAllyUnit     = null
    unit                    udg_AI_T_ClumpEnemyUnit    = null
    unit                    udg_AI_T_ClumpCombinedUnit = null
    unit                    udg_AI_T_PowerfulUnitCombined = null
    unit                    udg_AI_T_PowerfulUnitEnemy = null
    unit                    udg_AI_T_PowerfulUnitAlly  = null
    integer                 udg_AI_T_PowerHero         = 0
    real array              udg_AI_Strat_CalculateClumpRange
    real                    udg_AI_T_ClumpAllyScore    = 0
    real                    udg_AI_T_ClumpCombinedScore = 0
    real                    udg_AI_T_ClumpEnemyScore   = 0
    rect array              udg_EndRegionsNormal
    group                   udg_AI_Heroes              = null

    // Generated
    rect                    gg_rct_Left_Start          = null
    rect                    gg_rct_Left_Hero           = null
    rect                    gg_rct_Left_Forward_Camp   = null
    rect                    gg_rct_Camp_Top            = null
    rect                    gg_rct_Left_Tree           = null
    rect                    gg_rct_Left_Workshop       = null
    rect                    gg_rct_Left_Arcane         = null
    rect                    gg_rct_Right_Hero          = null
    rect                    gg_rct_Right_Start         = null
    rect                    gg_rct_Right_Tree          = null
    rect                    gg_rct_Right_Arcane        = null
    rect                    gg_rct_Right_Workshop      = null
    rect                    gg_rct_Camp_Bottom         = null
    rect                    gg_rct_Right_Forward       = null
    rect                    gg_rct_Left_Orc            = null
    rect                    gg_rct_Right_Orc           = null
    rect                    gg_rct_Center_Events       = null
    rect                    gg_rct_Furbolg_Left        = null
    rect                    gg_rct_Furbolg_Right       = null
    rect                    gg_rct_Left_Start_Bottom   = null
    rect                    gg_rct_Left_Start_Top      = null
    rect                    gg_rct_Right_Start_Top     = null
    rect                    gg_rct_Big_Bottom_Left     = null
    rect                    gg_rct_Big_Middle_Left     = null
    rect                    gg_rct_Big_Top_Left        = null
    rect                    gg_rct_Left_Castle         = null
    rect                    gg_rct_Left_City           = null
    rect                    gg_rct_Right_City          = null
    rect                    gg_rct_Right_Castle        = null
    rect                    gg_rct_Left_High_Elves     = null
    rect                    gg_rct_Left_Shipyard       = null
    rect                    gg_rct_Right_Shipyard      = null
    rect                    gg_rct_Right_Start_Bottom  = null
    rect                    gg_rct_Right_High_Elves    = null
    rect                    gg_rct_Naga_Right          = null
    rect                    gg_rct_Naga_Left           = null
    rect                    gg_rct_Murloc_Left         = null
    rect                    gg_rct_Murloc_Right        = null
    rect                    gg_rct_Left_Elemental_Start = null
    rect                    gg_rct_Front_Town_Left     = null
    rect                    gg_rct_City_Elves_Left     = null
    rect                    gg_rct_Blacksmith_Left     = null
    rect                    gg_rct_Front_City_Right    = null
    rect                    gg_rct_City_Elves_Right    = null
    rect                    gg_rct_Blacksmith_Right    = null
    rect                    gg_rct_Shipyard_End_Right  = null
    rect                    gg_rct_Shipyard_End_Left   = null
    rect                    gg_rct_Arcane_Hero_Right   = null
    rect                    gg_rct_Arcane_Hero_Left    = null
    rect                    gg_rct_Right_Elemental_Start = null
    rect                    gg_rct_Arcane_Creep_Gate_Left = null
    rect                    gg_rct_Arcane_Creep_Gate_Right = null
    rect                    gg_rct_Murloc_Gate_Left    = null
    rect                    gg_rct_Murloc_Gate_Right   = null
    rect                    gg_rct_Big_Top_Right       = null
    rect                    gg_rct_Big_Middle_Right    = null
    rect                    gg_rct_Big_Bottom_Right    = null
    rect                    gg_rct_Big_Bottom_Left_Center = null
    rect                    gg_rct_Big_Bottom_Right_Center = null
    rect                    gg_rct_Big_Top_Right_Center = null
    rect                    gg_rct_Big_Top_Left_Center = null
    rect                    gg_rct_Big_Middle_Right_Center = null
    rect                    gg_rct_Big_Middle_Left_Center = null
    rect                    gg_rct_Aspect_of_Forest_Left = null
    rect                    gg_rct_Aspect_of_Forest_Left_Gate = null
    rect                    gg_rct_Aspect_of_Forest_Right = null
    rect                    gg_rct_Aspect_of_Forest_Right_Gate = null
    rect                    gg_rct_Arcane_Left_Top     = null
    rect                    gg_rct_Arcane_Left_Bottom  = null
    rect                    gg_rct_Arcane_Right_Top    = null
    rect                    gg_rct_Arcane_Right_Bottom = null
    rect                    gg_rct_Zombie_End_Left     = null
    rect                    gg_rct_Zombie_End_Right    = null
    rect                    gg_rct_Death_Gate_Left     = null
    rect                    gg_rct_Death_Gate_Right    = null
    rect                    gg_rct_Region_079          = null
    rect                    gg_rct_Region_079_Copy     = null
    rect                    gg_rct_Elf_Base_Right      = null
    rect                    gg_rct_Elf_Base_Left       = null
    rect                    gg_rct_Undead_Right        = null
    rect                    gg_rct_Undead_Left         = null
    rect                    gg_rct_Human_Shipyard_Left = null
    rect                    gg_rct_Human_Shipyard_Right = null
    rect                    gg_rct_Right_Everything    = null
    rect                    gg_rct_Left_Everything     = null
    camerasetup             gg_cam_Castle_1            = null
    camerasetup             gg_cam_Castle_2            = null
    camerasetup             gg_cam_Castle_3            = null
    camerasetup             gg_cam_Castle_4            = null
    camerasetup             gg_cam_Camera_005          = null
    camerasetup             gg_cam_Camera_006          = null
    camerasetup             gg_cam_Camera_007          = null
    sound                   gg_snd_PurgeTarget1        = null
    trigger                 gg_trg_FUNC_Calculate_Level_Factor = null
    trigger                 gg_trg_testing             = null
    trigger                 gg_trg_Open_Gate_Right_Murloc = null
    trigger                 gg_trg_Open_Gate_Left_Murloc = null
    trigger                 gg_trg_Open_Gate_Right_Aspect_of_Death = null
    trigger                 gg_trg_Open_Gate_Left_Aspect_of_Death = null
    trigger                 gg_trg_Open_Gate_Right_Aspect_of_Air = null
    trigger                 gg_trg_Open_Gate_Left_Aspect_of_Forest = null
    trigger                 gg_trg_Open_Gate_Right_Aspect_of_Forest = null
    trigger                 gg_trg_Creep_Dies_Init     = null
    trigger                 gg_trg_Creep_Revive_Count  = null
    trigger                 gg_trg_Shade_Strength_Copy = null
    trigger                 gg_trg_Mana_Overload_Research = null
    trigger                 gg_trg_Frost_Attack_Research = null
    trigger                 gg_trg_Feedback            = null
    trigger                 gg_trg_Shade_Strength      = null
    trigger                 gg_trg_Swift_Moves         = null
    trigger                 gg_trg_Attribute_Upgrade   = null
    trigger                 gg_trg_INIT_Gates          = null
    trigger                 gg_trg_Toggle_Gate         = null
    trigger                 gg_trg_Gate_Dies           = null
    trigger                 gg_trg_Start_Event         = null
    trigger                 gg_trg_Event_Count         = null
    trigger                 gg_trg_DW_Ancient_Chaos    = null
    trigger                 gg_trg_DW_Fire_Hounds      = null
    trigger                 gg_trg_Doom_Warden_End     = null
    trigger                 gg_trg_testing_LUA         = null
    trigger                 gg_trg_AI_INIT             = null
    trigger                 gg_trg_AI_INIT_Brawler     = null
    trigger                 gg_trg_AI_INIT_Tactition   = null
    trigger                 gg_trg_AI_INIT_Mana_Addict = null
    trigger                 gg_trg_AI_INIT_Time_Mage   = null
    trigger                 gg_trg_AI_INIT_Shifter     = null
    trigger                 gg_trg_AI_MAIN_OLD         = null
    trigger                 gg_trg_AI_Hero_STATES      = null
    trigger                 gg_trg_AI_MAIN_Snapshot    = null
    trigger                 gg_trg_AI_MAIN_END         = null
    trigger                 gg_trg_STATE_Attack_Hero   = null
    trigger                 gg_trg_STATE_Stop_Following_Hero = null
    trigger                 gg_trg_STATE_High_Health   = null
    trigger                 gg_trg_STATE_Update_Destination = null
    trigger                 gg_trg_STATE_Spell_Finished_Casting = null
    trigger                 gg_trg_STATE_Revives       = null
    trigger                 gg_trg_STATE_Upgrade_Hero  = null
    trigger                 gg_trg_STATE_Dead          = null
    trigger                 gg_trg_STATE_Low_Health    = null
    trigger                 gg_trg_STATE_Recieving_Heavy_Damage = null
    trigger                 gg_trg_STATE_Stopped_Recieving_Heavy_Damage = null
    trigger                 gg_trg_AI_MAIN_Tactition   = null
    trigger                 gg_trg_STATE_CAST_Iron_Defense = null
    trigger                 gg_trg_STATE_CAST_Inspire  = null
    trigger                 gg_trg_STATE_CAST_Attack   = null
    trigger                 gg_trg_AI_MAIN_Mana_Addict = null
    trigger                 gg_trg_STATE_CAST_Mana_Shield = null
    trigger                 gg_trg_STATE_CAST_Frost_Nova = null
    trigger                 gg_trg_AI_MAIN_Shifter     = null
    trigger                 gg_trg_STATE_CAST_Shift_Back = null
    trigger                 gg_trg_STATE_CAST_Shift_Forward = null
    trigger                 gg_trg_STATE_CAST_Bladestorm = null
    trigger                 gg_trg_AI_MAIN_Brawler     = null
    trigger                 gg_trg_STATE_CAST_Drain    = null
    trigger                 gg_trg_STATE_CAST_Unleash_Rage = null
    trigger                 gg_trg_AI_MAIN_Time_Mage   = null
    trigger                 gg_trg_STATE_CAST_Time_Travel = null
    trigger                 gg_trg_STATE_CAST_Chrono_Atrophy = null
    trigger                 gg_trg_EVENT_Casts_a_Spell = null
    trigger                 gg_trg_EVENT_Base_Dies     = null
    trigger                 gg_trg_AI_Attack_a_Base    = null
    trigger                 gg_trg_AI_Hero_Level_Ups   = null
    trigger                 gg_trg_AI_Go_To_Closest_Heal = null
    trigger                 gg_trg_AI_Continue_to_Destination = null
    trigger                 gg_trg_Camera_Reset        = null
    trigger                 gg_trg_Zombie_Infect       = null
    trigger                 gg_trg_Base_Heal_Spell     = null
    trigger                 gg_trg_Upgrade_to_Footman  = null
    trigger                 gg_trg_Upgrade_to_Fel_Orc  = null
    trigger                 gg_trg_Upgrade_to_Captian  = null
    trigger                 gg_trg_Upgrade_to_Scarlet_Captian = null
    trigger                 gg_trg_Upgrade_to_Commander = null
    trigger                 gg_trg_Automation_Dies     = null
    trigger                 gg_trg_Boat_Dies           = null
    trigger                 gg_trg_Knight_Dies         = null
    trigger                 gg_trg_Tree_Treants        = null
    trigger                 gg_trg_Chain_Lightning     = null
    trigger                 gg_trg_Summon_Rogues       = null
    trigger                 gg_trg_Energy_Tower        = null
    trigger                 gg_trg_Watch_Tower_Mana_Shield = null
    trigger                 gg_trg_Regrow_Trees        = null
    trigger                 gg_trg_Pathing_INIT        = null
    trigger                 gg_trg_Set_Creeps_to_Attack_Base_Left = null
    trigger                 gg_trg_Set_Creeps_to_Attack_Elf_Base_Right = null
    trigger                 gg_trg_Set_Creeps_to_Attack_Base_Right = null
    trigger                 gg_trg_Set_Creeps_to_Attack_Elf_Base_Left = null
    trigger                 gg_trg_Set_Creeps_to_Attack_Castle_from_Elf_Left = null
    trigger                 gg_trg_Set_Creeps_to_Attack_Castle_from_Elf_Right = null
    trigger                 gg_trg_Aspect_of_Tides_End = null
    trigger                 gg_trg_Aspect_of_Death_End = null
    trigger                 gg_trg_Aspect_of_Forest_End = null
    trigger                 gg_trg_Aspect_of_Air_End   = null
    trigger                 gg_trg_Shipyard_Left_End   = null
    trigger                 gg_trg_Shipyard_Right_End  = null
    trigger                 gg_trg_Creeps_keep_going_after_Order = null
    trigger                 gg_trg_Creeps_keep_going_after_Spell = null
    trigger                 gg_trg_Order_Units_LOOP    = null
    trigger                 gg_trg_FUNC_Move_Creeps    = null
    trigger                 gg_trg_FUNC_Shipyard       = null
    trigger                 gg_trg_Brawler_No_Mana     = null
    trigger                 gg_trg_Brawler_Rage_GUI    = null
    trigger                 gg_trg_Drain_Start         = null
    trigger                 gg_trg_Drain_Loop          = null
    trigger                 gg_trg_Unleash_Rage_Start  = null
    trigger                 gg_trg_Unleash_Rage        = null
    trigger                 gg_trg_Falling_Strike_CAST = null
    trigger                 gg_trg_Jump_System_1       = null
    trigger                 gg_trg_Jump_System_2       = null
    trigger                 gg_trg_Actions_to_apply    = null
    trigger                 gg_trg_Sample_Spell_Jump   = null
    trigger                 gg_trg_FA_Start            = null
    trigger                 gg_trg_FA_Loop             = null
    trigger                 gg_trg_Shifter_Bladestorm_START = null
    trigger                 gg_trg_Mana_Overload_START = null
    trigger                 gg_trg_Mana_Overload_LOOP  = null
    trigger                 gg_trg_Frost_INIT          = null
    trigger                 gg_trg_Frost_CAST          = null
    trigger                 gg_trg_Frost_LOOP          = null
    trigger                 gg_trg_Mana_Burst_Secondary = null
    trigger                 gg_trg_Paradox_INIT        = null
    trigger                 gg_trg_Paradox_CAST        = null
    trigger                 gg_trg_Paradox_LOOP        = null
    trigger                 gg_trg_Chrono_Atrophy_CAST = null
    trigger                 gg_trg_Time_Travel_INIT    = null
    trigger                 gg_trg_Time_Travel_CAST    = null
    trigger                 gg_trg_Time_Travel_LOOP    = null
    trigger                 gg_trg_Attack_INIT         = null
    trigger                 gg_trg_Attack_CAST         = null
    trigger                 gg_trg_Attack_LOOP         = null
    trigger                 gg_trg_Hash_INIT           = null
    trigger                 gg_trg_Inspire_Start       = null
    trigger                 gg_trg_Inspire_LOOP        = null
    trigger                 gg_trg_Inspire_DIE         = null
    trigger                 gg_trg_Bolster             = null
    trigger                 gg_trg_Remove_Ability_Points = null
    trigger                 gg_trg_Level_Up_Team       = null
    trigger                 gg_trg_Revive_Hero         = null
    trigger                 gg_trg_Revive_Hero_Timer   = null
    trigger                 gg_trg_End_Of_Game_Left    = null
    trigger                 gg_trg_End_Of_Game_Right   = null
    trigger                 gg_trg_SPAWN_Move_All      = null
    trigger                 gg_trg_Level_Up_Creeps     = null
    trigger                 gg_trg_Set_up_Creep_Timer  = null
    trigger                 gg_trg_Melee_Initialization = null
    trigger                 gg_trg_Start_Game          = null
    trigger                 gg_trg_Enable_Fog_of_War   = null
    trigger                 gg_trg_Computer_Picks      = null
    trigger                 gg_trg_Hero_Picked         = null
    trigger                 gg_trg_Hero_Add_Starting_Abilities = null
    trigger                 gg_trg_Select_Tavern_Create_Units = null
    trigger                 gg_trg_Select_Tavern       = null
    trigger                 gg_trg_Default_Unit_Groups_and_Regions = null
    trigger                 gg_trg_DEFAULT_Villiger_Unit_Types = null
endglobals

function InitGlobals takes nothing returns nothing
    local integer i = 0
    set udg_INTcreepLevel = 1
    set udg_PLAYERGRPallied = CreateForce()
    set udg_PLAYERGRPfederation = CreateForce()
    set udg_CreepUpgrade = CreateTimer()
    set udg_TIMERCreepSpawn = CreateTimer()
    set udg_RevivableHeros = CreateGroup()
    set udg_TempReal = 0
    set i = 0
    loop
        exitwhen (i > 24)
        set udg_ReviveTimers[i] = CreateTimer()
        set i = i + 1
    endloop

    set udg_DM_TempGroup = CreateGroup()
    set udg_AT_Units = CreateGroup()
    set udg_AT_Units_Picked = CreateGroup()
    set udg_PLAYERGRPalliedUsers = CreateForce()
    set udg_PLAYERGRPfederationUsers = CreateForce()
    set i = 0
    loop
        exitwhen (i > 2)
        set udg_UNIT_Bases[i] = CreateGroup()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 2)
        set udg_UNIT_Healing[i] = CreateGroup()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BOOL_AIHealing[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_INT_TeamNumber[i] = 0
        set i = i + 1
    endloop

    set udg_REAL_AI_Distance = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BOOL_AI_Alive[i] = false
        set i = i + 1
    endloop

    set udg_INT_RandTemp = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BOOL_AI_Casting[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_REAL_AI_PreviousLife[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_REAL_AI_DamageTaken[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BOOL_AI_Fleeing[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_REAL_AI_PreviousLife2[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_REAL_AI_DamageTakenAverage[i] = 0
        set i = i + 1
    endloop

    set udg_GRP_AI_HeroesAroundHero = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BOOL_AI_AttackingHero[i] = false
        set i = i + 1
    endloop

    set udg_INT_AI_Player = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SPAWN_NumberOfUnits[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SPAWN_LevelStart[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SPAWN_OVER_UnitTypes[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SPAWN_LevelEnd[i] = 0
        set i = i + 1
    endloop

    set udg_SPAWN_LoopBases = 0
    set udg_SPAWN_LoopPlayer = 0
    set udg_SPAWN_LoopUnitTypes = 0
    set udg_SPAWN_LoopNumberOfUnits = 0
    set udg_SPAWN_TMP_TeamNumber = 0
    set udg_SPAWN_TMP_NumOfUnitsREAL = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SPAWN_OVER_WavesStart[i] = 0
        set i = i + 1
    endloop

    set udg_SPAWN_LoopWaves = 1
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_SPAWN_OVER_WavesEnd[i] = 0
        set i = i + 1
    endloop

    set udg_TEMP_IntLoop1 = 0
    set udg_TMP_INT_SpawnRegion = 0
    set udg_TMP_INT_SpawnUnitTypes = 0
    set udg_ALL_PLAYERS = CreateForce()
    set udg_TIMER_Attack = CreateTimer()
    set udg_Doom_WardenPickedSides = false
    set udg_BloodlustGroup = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 12)
        set udg_Bloodlust_AttackSpeed[i] = 0
        set i = i + 1
    endloop

    set udg_UnleashRage_Group = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BrawlerMana[i] = 150.00
        set i = i + 1
    endloop

    set udg_DrainLifeCasters = CreateGroup()
    set udg_DrainLifeTargets = CreateGroup()
    set udg_TEMP_Int = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_drainTime[i] = 0
        set i = i + 1
    endloop

    set udg_TEMP_UnitGroup = CreateGroup()
    set udg_GRP_AI_Creeps = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_BOOL_AI_UpdateDest[i] = false
        set i = i + 1
    endloop

    set udg_UserPlayers = CreateForce()
    set udg_EventTimer = CreateTimer()
    set udg_DL_Index = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_DL_Counter[i] = 0
        set i = i + 1
    endloop

    set udg_DL_Loop = 0
    set udg_UR_Loop = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_UR_Counter[i] = 0
        set i = i + 1
    endloop

    set udg_UR_Index = 0
    set udg_MO_Index = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_MO_Counter[i] = 0
        set i = i + 1
    endloop

    set udg_MO_Loop = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_MO_UnitCount[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 0)
        set udg_MO_AbilityLevel[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_MO_Pushback[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 12)
        set udg_Mana_Overload_Researched[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 12)
        set udg_Frost_Attack_Researched[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strategy[i] = 0
        set i = i + 1
    endloop

    set udg_AI_Index = 0
    set udg_AI_Loop = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Snaps_Health[i] = 0
        set i = i + 1
    endloop

    set udg_AI_T_Units = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_B_Alive[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_B_Cast_Spell[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_B_Low_Health[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_B_Chasing[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_B_Defending[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_B_Taking_Heavy_Damage[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_Heal_HealthFactor[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_Heal_ManaFactor[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_HighDamageSingle[i] = 0
        set i = i + 1
    endloop

    set udg_AI_T_HealthLost2 = 0
    set udg_AI_T_DestinationUnit = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_HighDamageAverage[i] = 0
        set i = i + 1
    endloop

    set udg_AI_T_CloseCountFriendly = 0
    set udg_AI_T_CloseCountEnemy = 0
    set udg_AI_T_HeroesOnMapFriendly = CreateGroup()
    set udg_AI_T_HeroesOnMapEnemy = CreateGroup()
    set udg_AI_T_HeroesInRangeFriendly = CreateGroup()
    set udg_AI_T_HeroesInRangeEnemy = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_CAN_Agressive[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_CAN_Defence[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_CAN_Assasin[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_CAN_Support[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_CAN_Creep[i] = false
        set i = i + 1
    endloop

    set udg_AI_T_SnapLifeCurrent = 0
    set udg_AI_T_SnapLifeMax = 0
    set udg_AI_T_HealthLost1 = 0
    set udg_AI_T_String = ""
    set udg_AI_T_HealthCurrent = 0
    set udg_AI_T_ManaCurrent = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_B_Fleeing[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_Heal_LowPercent[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_Heal_LowNumber[i] = 0
        set i = i + 1
    endloop

    set udg_AI_T_SnapLifePercent = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_Heal_HighPercent[i] = 0
        set i = i + 1
    endloop

    set udg_AI_T_HealthLostAll = 0
    set udg_AI_T_PowerCount = 0
    set udg_AI_T_PowerFriendly = 0
    set udg_AI_T_PowerEnemy = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_Power_LevelFactor[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_Power_Base[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_B_Update_Dest[i] = false
        set i = i + 1
    endloop

    set udg_TEMP_Real = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Counter[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 8)
        set udg_Creep_Team[i] = 0
        set i = i + 1
    endloop

    set udg_Creep_Index = 0
    set i = 0
    loop
        exitwhen (i > 8)
        set udg_Creep_Timer[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 0)
        set udg_Event_Count[i] = 0
        set i = i + 1
    endloop

    set udg_Event_Counter = 0
    set udg_FA_Index = 0
    set udg_FA_Loop = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_FA_Facing[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_FA_Counter[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_FA_Distance[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_FA_Duration[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_JD_Integers[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_JD_Distances[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_JD_ReachedDistance[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_JD_SpeedUnits[i] = 0
        set i = i + 1
    endloop

    set udg_JDA_Speed = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_JD_Angle[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_JD_Effect[i] = ""
        set i = i + 1
    endloop

    set udg_JDA_SpecialEffect = ""
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_JD_Animations[i] = ""
        set i = i + 1
    endloop

    set udg_JDA_Animation = ""
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_JD_TreesDestroy[i] = false
        set i = i + 1
    endloop

    set udg_JDA_DestroyTrees_Dash = false
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_JD_HighSettings[i] = 0
        set i = i + 1
    endloop

    set udg_JDA_JumpHigh_Distance = 0
    set udg_JDA_AnimationSpeed = 0
    set udg_JD_Group = CreateGroup()
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_JD_RealTimer[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_JD_JumpHigh[i] = 0
        set i = i + 1
    endloop

    set udg_JDA_Collusion = false
    set udg_TEMP_Real_2 = 0
    set udg_TEMP_UnitGroup2 = CreateGroup()
    set udg_TEMP_Int2 = 0
    set udg_FN_Group = CreateGroup()
    set udg_Spell_Counter = 0
    set udg_Spell_Duration = 0
    set udg_Spell_Level = 0
    set udg_Spell_Distance = 0
    set udg_Spell_Speed = 0
    set udg_FN_Interval = 0
    set udg_Spell_Phase = 0
    set udg_Ordered_Unit_Group = CreateGroup()
    set udg_Attack_Unit_Group = CreateGroup()
    set udg_Attack_Interval = 0.10
    set i = 0
    loop
        exitwhen (i > 0)
        set udg_Hero_Levels[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_CurrentOrder[i] = ""
        set i = i + 1
    endloop

    set udg_AI_T_IllusionsNearby = CreateGroup()
    set udg_FA_Level = 0
    set udg_Gates_Open = CreateGroup()
    set udg_Gates_Closed = CreateGroup()
    set udg_TEMP_Int3 = 0
    set udg_Inspired_UnitGroup = CreateGroup()
    set udg_Inspired_Interval = 0
    set udg_CALC_Level_Factor = 0
    set udg_CALC_Base = 0
    set udg_CALC_Constant = 0
    set udg_CALC_Previous_Value = 0
    set udg_CALC_LOOP = 0
    set udg_CALC_ITERATIONS = 0
    set udg_CALC_RESULT = 0
    set udg_Paradox_INTERVAL = 0
    set udg_Paradox_GROUP = CreateGroup()
    set udg_TimeTravel_GROUP = CreateGroup()
    set udg_TimeTravel_INTERVAL = 0
    set udg_Spell_Damage = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_B_Cast_ULT[i] = false
        set i = i + 1
    endloop

    set udg_FUNC_Base_REAL_Distance = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_B_Cast_Spell_Counter[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 2)
        set udg_UNIT_Bases_Teleport[i] = CreateGroup()
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_TEMP_A_REAL[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_TEMP_A_INT[i] = 0
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_CalculateClumpEnemy[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_CalculateClumpAlly[i] = false
        set i = i + 1
    endloop

    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_CalculateClumpComb[i] = false
        set i = i + 1
    endloop

    set udg_AI_T_PowerHero = 0
    set i = 0
    loop
        exitwhen (i > 1)
        set udg_AI_Strat_CalculateClumpRange[i] = 0
        set i = i + 1
    endloop

    set udg_AI_T_ClumpAllyScore = 0
    set udg_AI_T_ClumpCombinedScore = 0
    set udg_AI_T_ClumpEnemyScore = 0
    set udg_AI_Heroes = CreateGroup()
endfunction

//***************************************************************************
//*
//*  Custom Script Code
//*
//***************************************************************************
//***************************************************************************
//*  Map Setup
//! beginusercode
function MapSetup()

	-- Classes
	init_SpawnClass()
	--init_AIClass()

	-- Globals
	--mapAI = ai.new()

	-- Trigger Init
	--initTrig_Auto_Zoom()
	--InitTrig_AI_MAIN()
	--InitTrig_Computer_Picks()
	
	--InitTrig_Hero_Level_Up()
	--InitTrig_AI_Spell_Start()

	-- Spawn
	spawnSetup()
	spawnRun()

end
//! endusercode

//***************************************************************************
//*  Functions
//! beginusercode
function distance (x1, y1, x2, y2)
    return SquareRoot(((x2 - x1) * (x2 - x1)) + ((y2 - y1) * (y2 - y1)))
end


function debugfunc( func, name )
  local passed, data = pcall( function() func() return "func " .. name .. " passed" end )
  if not passed then
    print(name, passed, data)
  end
  passed = nil
  data = nil
end
//! endusercode

//***************************************************************************
//*  AI Main
//! beginusercode

function AI_MAIN()


	--print(" -- ")
	local pickedHero = mapAI.heroOptions[AI_Loop]

	-- debugfunc( function()
	-- 	mapAI:STATEAbilities(pickedHero)
	-- end, "mapAI:castSpell")

	mapAI:updateIntel(pickedHero)
   
	if mapAI:isAlive(pickedHero) then
		mapAI:STATEDead(pickedHero)	
		mapAI:STATELowHealth(pickedHero)
		mapAI:STATEStopFleeing(pickedHero)
		mapAI:STATEFleeing(pickedHero)
		mapAI:STATEHighHealth(pickedHero)
		mapAI:STATEAbilities(pickedHero)
		mapAI:STATEcastingSpell(pickedHero)
		mapAI:CleanUp(pickedHero)
    else
        mapAI:STATERevived(pickedHero)
    end

	
    if (AI_Loop >= mapAI.count) then
        AI_Loop = 1
    else
        AI_Loop = (AI_Loop + 1)
    end
end

function InitTrig_AI_MAIN()
	Trig_AI_MAIN = CreateTrigger()
    TriggerAddAction(Trig_AI_MAIN, AI_MAIN)
end




function Computer_Picks()

    local i = 1
    local randInt
	local count = 12
    local x
    local y
    local selPlayer
    local g
    local u

	AI_Loop = 1

    while (i <= count) do
        
        selPlayer = ConvertedPlayer(i)
		if (GetPlayerController(selPlayer) == MAP_CONTROL_COMPUTER) then

            if (i < 7) then
                udg_INT_TeamNumber[i] = 1
                x = GetRectCenterX(gg_rct_Left_Hero)
                y = GetRectCenterY(gg_rct_Left_Hero)
            else
                udg_INT_TeamNumber[i] = 2
                x = GetRectCenterX(gg_rct_Right_Hero)
                y = GetRectCenterY(gg_rct_Right_Hero)
			end
			
            randInt = GetRandomInt(2, 5)
            if (randInt == 1) then
                udg_TEMP_Unit = CreateUnit(selPlayer, FourCC("E001"), x, y, 0)
				
            elseif (randInt == 2) then
                udg_TEMP_Unit = CreateUnit(selPlayer, FourCC("H00R"), x, y, 0)
				
            elseif (randInt == 3) then
                udg_TEMP_Unit = CreateUnit(selPlayer, FourCC("E002"), x, y, 0)
				
            elseif (randInt == 4) then
                udg_TEMP_Unit = CreateUnit(selPlayer, FourCC("H009"), x, y, 0)
				
            elseif (randInt == 5) then
                udg_TEMP_Unit = CreateUnit(selPlayer, FourCC("H00J"), x, y, 0)
            end
			
			UnitAddItemByIdSwapped(FourCC("I000"), udg_TEMP_Unit)
			udg_UNIT_pickedHero[GetConvertedPlayerId(selPlayer)] = udg_TEMP_Unit
			ConditionalTriggerExecute(gg_trg_Hero_Add_Starting_Abilities)
			
			BJDebugMsg("Creating New Hero")
			mapAI:initHero(udg_TEMP_Unit)
			BJDebugMsg("Finished Creating New hero")
			
            g = GetUnitsOfPlayerAndTypeId(selPlayer, FourCC("halt"))

            while true do
                u = FirstOfGroup(g)
                if u == nil then break end

                if (GetUnitTypeId(udg_TEMP_Unit) == FourCC("E001")) then
                    ReplaceUnitBJ(u, FourCC("h00I"), bj_UNIT_STATE_METHOD_RELATIVE)

                elseif (GetUnitTypeId(udg_TEMP_Unit) == FourCC("H00R")) then
                    ReplaceUnitBJ(u, FourCC("h00B"), bj_UNIT_STATE_METHOD_RELATIVE)

                elseif (GetUnitTypeId(udg_TEMP_Unit) == FourCC("H009")) then
                    ReplaceUnitBJ(u, FourCC("h00Y"), bj_UNIT_STATE_METHOD_RELATIVE)

                elseif (GetUnitTypeId(udg_TEMP_Unit) == FourCC("H00J")) then
                    ReplaceUnitBJ(u, FourCC("h00Z"), bj_UNIT_STATE_METHOD_RELATIVE)

                elseif (GetUnitTypeId(udg_TEMP_Unit) == FourCC("E002")) then
                    ReplaceUnitBJ(u, FourCC("h00Q"), bj_UNIT_STATE_METHOD_RELATIVE)

                    UnitMakeAbilityPermanent(udg_TEMP_Unit, true, FourCC("A031"))
                    UnitMakeAbilityPermanent(udg_TEMP_Unit, true, FourCC("A005"))
                    UnitMakeAbilityPermanent(udg_TEMP_Unit, true, FourCC("A037"))
                end
                
                udg_Alters[GetConvertedPlayerId(selPlayer)] = GetLastReplacedUnitBJ()

                GroupRemoveUnit(g, u)
            end
            DestroyGroup(g)

		end
		

        if (i >= 12 and mapAI.count > 0) then
            BJDebugMsg("Heroes:" .. I2S(mapAI.count))
			TriggerRegisterTimerEvent(Trig_AI_MAIN, 1.00/I2R(mapAI.count), true)
		end
		
        i = i + 1
    end
end

function InitTrig_Computer_Picks()
    local t = CreateTrigger()
    TriggerRegisterTimerEventSingle(t, 0.50)
    TriggerAddAction(t, Computer_Picks)
end

function InitTrig_AI_Spell_Start()
	local t = CreateTrigger()
	TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_UNIT_SPELL_CAST)

	TriggerAddCondition(t, Condition( function()
		return IsUnitInGroup(GetTriggerUnit(), udg_AI_Heroes)
	end))
	
	TriggerAddAction(t, function()

		debugfunc( function()
			local pickedHero = mapAI.heroOptions[S2I(GetUnitUserData(GetTriggerUnit()))]

			mapAI:castSpell(pickedHero)
		end, "mapAI:castSpell")
	end)
end


function InitTrig_Hero_Level_Up()
	local t = CreateTrigger()
	
    TriggerRegisterAnyUnitEventBJ(t, EVENT_PLAYER_HERO_LEVEL)
	TriggerAddAction(t, function()

		-- Get Locals
		local heroLevel = GetHeroLevel(GetLevelingUnit())
		local u = GetLevelingUnit()
		local uType = GetUnitTypeId(u)

		-- Remove Ability Points
		if (heroLevel < 15 and ModuloInteger(heroLevel, 2) ~= 0) then
			ModifyHeroSkillPoints(GetLevelingUnit(), bj_MODIFYMETHOD_SUB, 1)
		elseif (heroLevel < 25 and heroLevel >= 15 and ModuloInteger(heroLevel, 3) ~= 0) then
			ModifyHeroSkillPoints(GetLevelingUnit(), bj_MODIFYMETHOD_SUB, 1)
		elseif (heroLevel >= 25 and ModuloInteger(heroLevel, 4) ~= 0) then
			ModifyHeroSkillPoints(GetLevelingUnit(), bj_MODIFYMETHOD_SUB, 1)
		end


		-- If Computer, Learn Abilities
		if GetPlayerController( GetOwningPlayer(u) ) == MAP_CONTROL_COMPUTER then

			if uType == FourCC("H00R") then      -- Mana Addict
				SelectHeroSkill(u, FourCC("A015"))  -- Starfall
				SelectHeroSkill(u, FourCC("A001"))  -- Mana Shield
				SelectHeroSkill(u, FourCC("A03S"))  -- Frost Nova
				SelectHeroSkill(u, FourCC("A018"))  -- Mana Overload
				SelectHeroSkill(u, FourCC("A02B"))  -- Mana Burst
				
			elseif uType == FourCC("E001") then  -- Brawler
				SelectHeroSkill(u, FourCC("A029"))  -- Unleash Rage
				SelectHeroSkill(u, FourCC("A01Y"))  -- Drain
				SelectHeroSkill(u, FourCC("A007"))  -- Bloodlust
				SelectHeroSkill(u, FourCC("A002"))  -- War Stomp
				
			elseif uType == FourCC("E002") then  -- Shifter
				SelectHeroSkill(u, FourCC("A03C"))  -- Shifting Bladestorm
				SelectHeroSkill(u, FourCC("A02Y"))  -- Fel Form
				SelectHeroSkill(u, FourCC("A03U"))  -- Shift Back
				SelectHeroSkill(u, FourCC("A030"))  -- Shift Forwards
				SelectHeroSkill(u, FourCC("A03T"))  -- Falling Strike
				
			elseif uType == FourCC("H009") then  -- Tactition
				SelectHeroSkill(u, FourCC("A042"))  -- Inspire
				SelectHeroSkill(u, FourCC("A01I"))  -- Raise Banner
				SelectHeroSkill(u, FourCC("A01B"))  -- Attack
				SelectHeroSkill(u, FourCC("A01Z"))  -- Bolster
				SelectHeroSkill(u, FourCC("A019"))  -- Iron Defense
				
			elseif uType == FourCC("H00J") then  -- Time Mage
				SelectHeroSkill(u, FourCC("A04N"))  -- Paradox
				SelectHeroSkill(u, FourCC("A04I"))  -- Dimensional Phase
				SelectHeroSkill(u, FourCC("A04P"))  -- Time Travel
				SelectHeroSkill(u, FourCC("A04K"))  -- Chrono Atrophy
				SelectHeroSkill(u, FourCC("A032"))  -- Decay
			end
		end
	end )
end
//! endusercode

//***************************************************************************
//*  AI Class
//! beginusercode
function init_AIClass()

	-- Create the table for the class definition
	ai = {}

	-- Define the new() function
	ai.new = function()
		local self = {}
		self.heroes = {}
		self.heroOptions = {"heroA", "heroB", "heroC", "heroD", "heroE", "heroF", "heroG", "heroH", "heroI", "heroJ", "heroK", "heroL"}
		self.count = 0


		function self:isAlive(i)
			return self[i].alive
		end

		function self:countOfHeroes()
			return self.count
		end

		function self:initHero(heroUnit)

			self.count = self.count + 1

			local pickedName = self.heroOptions[self.count]
			BJDebugMsg("Name: " .. pickedName)

			table.insert( self.heroes, pickedName)
			


			self[pickedName] = {}
			local hero = self[pickedName]
			
			hero.unit = heroUnit
			GroupAddUnit(udg_AI_Heroes, hero.unit)

			hero.unitType = GetUnitTypeId(heroUnit)
			hero.player = GetOwningPlayer(heroUnit)
			hero.playerNumber = GetConvertedPlayerId(GetOwningPlayer(heroUnit))


			if hero.playerNumber > 6 then
				hero.teamNumber = 2
			else
				hero.teamNumber = 1
			end

			hero.heroesFriend = CreateGroup()
			hero.heroesEnemy = CreateGroup()
			hero.lifeHistory = {0.00,0.00,0.00}
			SetUnitUserData(hero.unit, self.count)
			
			hero.alive = false
			hero.fleeing = false
			hero.casting = false
			hero.castingCounter = -10.00
			hero.order = nil
			hero.castingUlt = false
			hero.chasing = false
			hero.defending = false
			hero.lowLife = false
			hero.highDamage = false
			hero.updateDest = false

			hero.unitHealing = nil
			hero.unitAttacking = nil
			hero.unitChasing = nil

			
			if hero.unitType == FourCC("E001") then      -- Brawler
				hero.name = "Brawler"
				hero.healthFactor = 1.00
				hero.manaFactor = 0.02

				hero.lifeHighPercent = 65.00
				hero.lifeLowPercent = 20.00
				hero.lifeLowNumber = 450.00

				hero.highDamageSingle = 17.00
				hero.highDamageAverage = 25.00

				hero.powerBase = 500.00
				hero.powerLevel = 200.00

				hero.clumpCheck = true
				hero.clumpRange = 100.00
				hero.intelRange = 1100.00
				hero.closeRange = 500.00
			
			elseif hero.unitType == FourCC("H00R") then  -- Mana Addict
					
				hero.name = "Mana Addict"
				hero.healthFactor = 1.00
				hero.manaFactor = 0.75

				hero.lifeHighPercent = 85.00
				hero.lifeLowPercent = 25.00
				hero.lifeLowNumber = 300.00

				hero.highDamageSingle = 3.00
				hero.highDamageAverage = 18.00

				hero.powerBase = 700.00
				hero.powerLevel = 220.00

				hero.clumpCheck = true
				hero.clumpRange = 100.00
				hero.intelRange = 1000.00
				hero.closeRange = 400.00

			elseif hero.unitType == FourCC("H009") then  -- Tactition
						
				hero.name = "Tactition"
				hero.healthFactor = 1.00
				hero.manaFactor = 0.20

				hero.lifeHighPercent = 75.00
				hero.lifeLowPercent = 20.00
				hero.lifeLowNumber = 400.00

				hero.highDamageSingle = 17.00
				hero.highDamageAverage = 25.00

				hero.powerBase = 500.00
				hero.powerLevel = 200.00
				hero.clumpCheck = true
				hero.clumpRange = 250.00
				hero.intelRange = 1000.00
				hero.closeRange = 400.00

			elseif hero.unitType == FourCC("H00J") then  -- Time Mage
							
				hero.name = "Time Mage"
				hero.healthFactor = 1.00
				hero.manaFactor = 0.10

				hero.lifeHighPercent = 85.00
				hero.lifeLowPercent = 25.00
				hero.lifeLowNumber = 400.00

				hero.highDamageSingle = 8.00
				hero.highDamageAverage = 17.00

				hero.powerBase = 750.00
				hero.powerLevel = 250.00

				hero.clumpCheck = true
				hero.clumpRange = 250.00
				hero.intelRange = 1100.00
				hero.closeRange = 700.00

			elseif hero.unitType == FourCC("E002") then  -- Shifter
							
				hero.name = "Shifter"
				hero.healthFactor = 1.00
				hero.manaFactor = 0.15

				hero.lifeHighPercent = 70.00
				hero.lifeLowPercent = 25.00
				hero.lifeLowNumber = 350.00

				hero.highDamageSingle = 17.00
				hero.highDamageAverage = 25.00

				hero.powerBase = 500.00
				hero.powerLevel = 200.00

				hero.clumpCheck = true
				hero.clumpRange = 100.00
				hero.intelRange = 1100.00
				hero.closeRange = 400.00

			end	
		end



		-- Update Intel
		function self:updateIntel(i)
			local hero = self[i]

			-- Only run if the hero is alive
			if (hero.alive == true) then

				-- Update info about the AI Hero
				
				hero.x = GetUnitX(hero.unit)
				hero.y = GetUnitY(hero.unit)
				hero.life = GetWidgetLife(hero.unit)
				hero.lifePercent = GetUnitLifePercent(hero.unit)
				hero.lifeMax = GetUnitState(hero.unit, UNIT_STATE_MAX_LIFE)
				hero.mana = GetUnitState(hero.unit, UNIT_STATE_MANA)
				hero.manaPercent = GetUnitManaPercent(hero.unit)
				hero.manaMax = GetUnitState(hero.unit, UNIT_STATE_MAX_MANA)
				hero.level = GetHeroLevel(hero.unit)
				hero.currentOrder = OrderId2String(GetUnitCurrentOrder(hero.unit))
				
				-- Reset Intel
				hero.countUnit = 0
				hero.countUnitFriend = 0
				hero.countUnitFriendClose = 0
				hero.countUnitEnemy = 0
				hero.countUnitEnemyClose = 0
				hero.powerFriend = 0.00
				hero.powerEnemy = 0.00

				hero.unitPowerFriend = nil
				hero.unitPowerEnemy = nil

				hero.clumpFriend = nil
				hero.clumpFriendPower = 0.00
				hero.clumpEnemy = nil
				hero.clumpEnemyPower = 0.00
				hero.clumpBoth = nil
				hero.clumpBothPower = 0.00

				GroupClear(hero.heroesFriend)
				GroupClear(hero.heroesEnemy)

				-- Units around Hero
				local g = CreateGroup()
				local clump = CreateGroup()
				local unitPower = 0.00
				local unitPower = 0.00
				local unitLife = 0.00
				local unitX
				local unitY
				local unitDistance = 0.00
				local unitRange = 0.00
				local unitPowerRangeMultiplier = 0.00
				local u
				local clumpUnit
				local powerAllyTemp
				local powerEnemyTemp


				GroupEnumUnitsInRange(g, hero.x, hero.y, hero.intelRange, nil)

				-- Enumerate through group
				
				while true do
					u = FirstOfGroup(g)	
					if ((u == nil)) then break end
					
					-- Unit is alive and not the hero
					if (IsUnitAliveBJ(u) == true and u ~= hero.unit) then
						hero.countUnit = hero.countUnit + 1


						-- Get Unit Details
						unitLife = GetUnitLifePercent(u)
						unitRange = BlzGetUnitWeaponRealField(u, UNIT_WEAPON_RF_ATTACK_RANGE, 0)

						unitX = GetUnitX(u)
						unitY = GetUnitY(u)
						unitDistance = distance(unitX, unitY, hero.x, hero.y)

						-- Get Unit Power
						if (IsUnitType(u, UNIT_TYPE_HERO) == true) then -- is Hero
							unitPower = I2R((GetHeroLevel(u) * 75))

							if IsUnitAlly(u, hero.player) then  -- Add to hero Group
								GroupAddUnit(hero.heroesFriend, u)
							else
								GroupAddUnit(hero.heroesEnemy, u)
							end

						else -- Unit is NOT a hero
							unitPower = I2R(GetUnitPointValue(u))
						end
						
						-- Power range modifier
						if unitDistance < unitRange then

							unitPowerRangeMultiplier = 1.00
						else
							unitPowerRangeMultiplier = 300.00 / (unitDistance - unitRange + 300.00)
						end

						
						if IsUnitAlly(u, hero.player) == true then

							-- Update count
							hero.countUnitFriend = hero.countUnitFriend + 1
							if unitDistance <= hero.closeRange then
								hero.countUnitFriendClose = hero.countUnitFriendClose + 1
							end

							-- Check to see if unit is the most powerful friend
							if unitPower > hero.powerFriend then
								hero.unitPowerFriend = u
							end

							-- Relative Power
							hero.powerFriend = hero.powerFriend + (unitPower * (unitLife / 100.00) * unitPowerRangeMultiplier )

						else
							-- Update Count
							hero.countUnitEnemy = hero.countUnitEnemy + 1
							if unitDistance <= hero.closeRange then
								hero.countUnitEnemyClose = hero.countUnitEnemyClose + 1
							end

							-- Check to see if unit is the most powerful Enemy
							if unitPower > hero.powerEnemy then
								hero.unitPowerEnemy = u
							end

							-- Relative Power
							hero.powerEnemy = hero.powerEnemy + (unitPower * (unitLife / 100.00) * unitPowerRangeMultiplier )
						end

						if hero.clumpCheck == true then

							powerAllyTemp = 0
							powerEnemyTemp = 0
							clump = CreateGroup()

							GroupEnumUnitsInRange(clump, unitX, unitY, hero.clumpRange, nil)

							while true do
								clumpUnit = FirstOfGroup(clump)
								if clumpUnit == nil then break end

								if  IsUnitAliveBJ(clumpUnit) and IsUnitType(clumpUnit, UNIT_TYPE_STRUCTURE) == false then
									if IsUnitAlly(clumpUnit, hero.player) then 
										powerAllyTemp = powerAllyTemp + SquareRoot(I2R(GetUnitPointValue(clumpUnit)))
									else
										powerEnemyTemp = powerEnemyTemp + SquareRoot(I2R(GetUnitPointValue(clumpUnit)))
									end
								end


								GroupRemoveUnit(clump, clumpUnit)
							end
							DestroyGroup(clump)

							if powerAllyTemp > hero.clumpFriendPower then
								hero.clumpFriendPower = powerAllyTemp
								hero.clumpFriend = u
							end

							if powerEnemyTemp > hero.clumpEnemyPower then
								hero.clumpEnemyPower = powerEnemyTemp
								hero.clumpEnemy = u
							end

							if (powerAllyTemp + powerEnemyTemp) > hero.clumpBothPower then
								hero.clumpBothPower = powerAllyTemp + powerEnemyTemp
								hero.clumpBoth = u
							end

						end
						
					end

					GroupRemoveUnit(g, u)
				end
				DestroyGroup(g)

				-- Find how much damage the Hero is taking
				hero.lifeHistory[#hero.lifeHistory + 1] = hero.lifePercent
				
				if #hero.lifeHistory > 5 then
					table.remove(hero.lifeHistory, 1)
				end
				
				hero.percentLifeSingle = hero.lifeHistory[#hero.lifeHistory -1] - hero.lifeHistory[#hero.lifeHistory]
				hero.percentLifeAverage = hero.lifeHistory[1] - hero.lifeHistory[#hero.lifeHistory]

				-- Figure out the Heroes Weighted Life
				hero.weightedLife = (hero.life * hero.healthFactor) + (hero.mana * hero.manaFactor)
				hero.weightedLifeMax = (hero.lifeMax * hero.healthFactor) + (hero.manaMax * hero.manaFactor)
				hero.weightedLifePercent = (hero.weightedLife / hero.weightedLifeMax) * 100.00

				-- Get the Power Level of the surrounding Units
				hero.powerEnemy = (hero.powerEnemy * (((100.00 - hero.weightedLifePercent) / 20.00) + 0.50))
				hero.powerCount = hero.powerEnemy - hero.powerFriend

				-- Raise Hero Confidence Level
				hero.powerBase = hero.powerBase + (0.25 * I2R(hero.level))
				hero.powerHero = hero.powerBase + (hero.powerLevel * I2R(hero.level) )

				--print("Clump Enemy: " .. R2S(hero.clumpEnemyPower))
				--print("Clump Both: " .. R2S(hero.clumpBothPower))
				--print("Hero Power: " .. R2S(hero.powerHero))
				--print("Power Level: " .. R2S(hero.powerCount))
			end

			
		end
		
		function self:CleanUp(i)
			local hero = self[i]

			if (hero.currentOrder ~= "move" and (hero.lowLife or hero.fleeing)) then
				self:ACTIONtravelToHeal(i)
			end

			if (hero.currentOrder ~= "attack" and hero.currentOrder ~= "move" and hero.lowLife == false and hero.casting == false ) then
				self:ACTIONattackBase(i)
			end
		end

		-- AI Run Specifics
		function self:STATEAbilities(i)
			local hero = self[i]

			if hero.name == "Mana Addict" then
				self:manaAddictAI(i)
			elseif hero.name == "Brawler" then
				self:brawlerAI(i)
			elseif hero.name == "Shifter" then
				self:shifterAI(i)
			elseif hero.name == "Tactition" then
				self:tactitionAI(i)
			elseif hero.name == "Time Mage" then
				self:timeMageAI(i)
			end
			
		end

		-- AI has Low Health
		function self:STATELowHealth(i)
			local hero = self[i]

			
			if (hero.weightedLifePercent < hero.lifeLowPercent or 
					hero.weightedLife < hero.lifeLowNumber) and 
					hero.lowLife == false then
					
				print("Low Health")
				hero.lowLife = true
				hero.fleeing = false
				hero.chasing = false
				hero.defending = false
				hero.highdamage = false
				hero.updateDest = false
				hero.casting = false
				hero.castingCounter = -10.00

				self:ACTIONtravelToHeal(i)
			end
		end		

		-- AI Has High Health
		function self:STATEHighHealth(i)
			local hero = self[i]

			
			if hero.alive == true and
					hero.lowLife == true and
					hero.weightedLifePercent > hero.lifeHighPercent then
				
				print("High Health")
				hero.lowLife = false
				hero.fleeing = false
				

				-- Reward the AI For doing good
				hero.lifeLowPercent = hero.lifeLowPercent - 1.00
				hero.lifeHighPercent = hero.lifeHighPercent - 1.00
				
				local rand = GetRandomInt(1, 3)
				if rand == 1 then
					self:ACTIONattackBase(i)
				else
					self:ACTIONtravelToDest(i)
				end
			end
		
		end

		-- AI is Dead
		function self:STATEDead(i)
			local hero = self[i]

			if hero.alive == true and IsUnitAliveBJ(hero.unit) == false then
				
				print("Dead")
				hero.alive = false
				hero.lowLife = false
				hero.fleeing = false
				hero.chasing = false
				hero.defending = false
				hero.highdamage = false
				hero.updateDest = false
				hero.casting = false
				hero.castingUlt = false
				hero.castingCounter = -10.00
				
				-- Punish the AI for screwing up
				hero.lifeLowPercent = hero.lifeLowPercent + 4.00
				hero.powerBase = hero.powerBase / 2

				if hero.lifeHighPercent < 98.00 then
					hero.lifeHighPercent = hero.lifeHighPercent + 2.00
				end
				
			end
		end

		-- AI has Revived
		function self:STATERevived(i)
			local hero = self[i]

			if hero.alive == false and IsUnitAliveBJ(hero.unit) == true then

				print("Revived")
				hero.alive = true
				self:ACTIONattackBase(i)
			end
		end

		-- AI Fleeing
		function self:STATEFleeing(i)
			local hero = self[i]

			if (hero.powerHero < hero.powerCount or hero.percentLifeSingle > hero.highDamageSingle or hero.percentLifeAverage > hero.highDamageAverage ) and
					hero.lowLife == false and hero.fleeing == false then
					
				print("Flee")
				hero.fleeing = true
				hero.casting = false

				self:ACTIONtravelToHeal(i)
			end
		end	

		-- AI Stop Fleeing
		function self:STATEStopFleeing(i)
			local hero = self[i]

			if  hero.powerHero > hero.powerCount and hero.percentLifeSingle <= 0.0 and hero.percentLifeAverage <= hero.highDamageAverage and hero.lowLife == false and hero.fleeing == true then
					
				print("Stop Fleeing")
				hero.fleeing = false

				self:ACTIONtravelToDest(i)
			end
		end	

		-- AI Casting Spell
		function self:STATEcastingSpell(i)
			local hero = self[i]

			if hero.casting == true then
				if hero.castingCounter == -10.00 then
					if hero.currentOrder ~= hero.order then
						hero.casting = false
						print("Stopped Casting")
						self:ACTIONtravelToDest(i)
						hero.order = hero.currentOrder
					else
						print("Still Casting Spell")
					end

				elseif hero.castingCounter > 0.00 then
					hero.castingCounter = hero.castingCounter - 1.50
					print("Still Casting Spell")

				else
					hero.casting = false
					print("Stopped Casting")
					hero.castingCounter = -10.00
					self:ACTIONtravelToDest(i)
					hero.order = hero.currentOrder
				end
			end	
		end

		--
		-- ACTIONS
		--

		function self:castSpell(i)
			
			local hero = self[i]

			if hero.fleeing == true or hero.lowhealth == true then
				self:ACTIONtravelToDest(i)
			end

			hero.casting = true
			hero.order = OrderId2String(GetUnitCurrentOrder(hero.unit))
			print("Spell Cast")
		end


		function self:ACTIONtravelToHeal(i)
			local hero = self[i]

			local healDistance = 100000000.00
			local healDistanceNew = 0.00
			local unitX
			local unitY
			local u
			local g = CreateGroup()


			GroupAddGroup(udg_UNIT_Healing[hero.teamNumber], g)
			while true do
				u = FirstOfGroup(g)
				if u == nil then break end

				unitX = GetUnitX(u)
				unitY = GetUnitY(u)
				healDistanceNew = distance(hero.x, hero.y, unitX, unitY)

				if healDistanceNew < healDistance then
					healDistance = healDistanceNew
					hero.unitHealing = u
				end

				GroupRemoveUnit(g, u)
			end
			DestroyGroup(g)

			unitX = GetUnitX(hero.unitHealing)
			unitY = GetUnitY(hero.unitHealing)

			IssuePointOrder(hero.unit, "move", unitX, unitY)

		end

		function self:ACTIONtravelToDest(i)
			local hero = self[i]

			if hero.lowLife == true or hero.fleeing == true then
				local unitX = GetUnitX(hero.unitHealing)
				local unitY = GetUnitY(hero.unitHealing)
				IssuePointOrder(hero.unit, "move", unitX, unitY)
			else
				local unitX = GetUnitX(hero.unitAttacking)
				local unitY = GetUnitY(hero.unitAttacking)
				IssuePointOrder(hero.unit, "attack", unitX, unitY)
			end
		end

		function self:ACTIONattackBase(i)
			local hero = self[i]

			hero.unitAttacking = GroupPickRandomUnit(udg_UNIT_Bases[hero.teamNumber])

			local unitX = GetUnitX(hero.unitAttacking)
			local unitY = GetUnitY(hero.unitAttacking)

			IssuePointOrder(hero.unit, "attack", unitX, unitY)

		end


		function self:manaAddictAI(i)
			local hero = self[i]

			if hero.casting == false then
				local manaShieldSpell = FourCC("A001")
				local manaShieldBuff = FourCC("BNms")
				local frostNovaSpell = FourCC("A03S")
				local manaOverloadSpell = FourCC("A018")

				-- Mana Shield
				if	BlzGetUnitAbilityCooldownRemaining(hero.unit, manaShieldSpell) == 0.00 and
					UnitHasBuffBJ(hero.unit, manaShieldBuff) == false  then

					print("Casting Mana Shield")
					IssueImmediateOrder(hero.unit, "manashieldon")
					self:castSpell(i)
				end

				-- Frost Nova
				if	hero.clumpEnemyPower >= 40 and
					BlzGetUnitAbilityCooldownRemaining(hero.unit, frostNovaSpell) == 0.00 and
					(hero.mana + 50.00) >= I2R(BlzGetAbilityManaCost(frostNovaSpell, GetUnitAbilityLevel(hero.unit,frostNovaSpell))) then
					
					print("Frost Nova")
					IssuePointOrder(hero.unit, "flamestrike", GetUnitX(hero.clumpEnemy), GetUnitY(hero.clumpEnemy))
					self:castSpell(i)
				end
				
				-- Mana Drain
				if	hero.countUnitEnemyClose > 3 and
					hero.manaPercent < 90.00 and
					GetUnitAbilityLevel(hero.unit, manaOverloadSpell) > 0 and
					BlzGetUnitAbilityCooldownRemaining(hero.unit, manaOverloadSpell) == 0.00 then
					
					print("Casting Mana Overload")
					IssueImmediateOrder(hero.unit, "thunderclap")
					self:castSpell(i)
				end
			end
		end

		function self:brawlerAI(i)
			local hero = self[i]

			if hero.casting == false then
				
			end
		end

		function self:shifterAI(i)
			local hero = self[i]

			if hero.casting == false then
				local shiftBackSpell = FourCC("A03U")
				local shiftForwardSpell = FourCC("A030")
				local fallingStrikeSpell = FourCC("A03T")
				local shiftStormSpell = FourCC("A03C")
				local felFormSpell = FourCC("A02Y")

				-- Custom Intel
				local g = CreateGroup()
				local u = nil
				local illusionsNearby = 0

				-- Find all Nearby Illusions
				GroupEnumUnitsInRange(g, hero.x, hero.y, 600.00, nil)
				while true do
					u = FirstOfGroup(g)
					if (u == nil) then break end
						
					if IsUnitIllusion(u) then
						illusionsNearby = illusionsNearby + 1
					end
					GroupRemoveUnit(g, u)
				end
				DestroyGroup(g)


				-- Shift Back


				-- Shift Forward
				if	BlzGetUnitAbilityCooldownRemaining(hero.unit, shiftForwardSpell) == 0.00 and
					(hero.mana + 40) > I2R(BlzGetAbilityManaCost(shiftForwardSpell, GetUnitAbilityLevel(hero.unit, shiftForwardSpell))) and
					hero.countUnitEnemyClose > 4 then
					-- body

					IssueImmediateOrder(hero.unit, "thunderclap")
					self:castSpell(i)
				end

				-- Falling Stike
				if	BlzGetUnitAbilityCooldownRemaining(hero.unit, fallingStrikeSpell) == 0.00 and
					(hero.mana + 40) > I2R(BlzGetAbilityManaCost(fallingStrikeSpell, GetUnitAbilityLevel(hero.unit, fallingStrikeSpell))) and 
					(hero.powerEnemy > 250.00 or hero.clumpEnemyPower > 80.00) then
					
					if hero.powerEnemy > 250.00 then
						IssuePointOrder(hero.unit, "clusterrockets", GetUnitX(hero.unitPowerEnemy), GetUnitY(hero.unitPowerEnemy))
					else
						IssuePointOrder(hero.unit, "clusterrockets", GetUnitX(hero.clumpEnemy), GetUnitY(hero.clumpEnemy))
					end

					self:castSpell(i)
				end

				-- ShiftStorm
				if	BlzGetUnitAbilityCooldownRemaining(hero.unit, shiftStormSpell) == 0.00 and
					(hero.mana + 40) > I2R(BlzGetAbilityManaCost(shiftStormSpell, GetUnitAbilityLevel(hero.unit, shiftStormSpell))) and
					hero.countUnitEnemyClose > 6 and
					illusionsNearby >= 2 then
					-- body

					IssueImmediateOrder(hero.unit, "channel")
					self:castSpell(i)
				end

				-- Fell Form
			end
		end

		function self:tactitionAI(i)
			local hero = self[i]

			if hero.casting == false then

			end
		end

		function self:timeMageAI(i)
			local hero = self[i]

			if hero.casting == false then
				
			end
		end

		return self
	end
end
//! endusercode

//***************************************************************************
//*  Spawn Class
//! beginusercode
function init_SpawnClass()

	-- Create the table for the class definition
	spawn = {}

	-- Define the new() function
	spawn.new = function()
		local self = {}

		self.bases = {}

		function self.addBase(baseName, alliedStart, alliedEnd, alliedCondition, fedStart, fedEnd, fedCondition, destination)

			-- Add all of the info the base and add the base name to the base list
			self[baseName] = {allied = {startPoint = alliedStart, endPoint = alliedEnd, condition = alliedCondition}, fed = {startPoint = fedStart, endPoint = fedEnd, condition = fedCondition}, destination = destination, units = {}}
			table.insert( self.bases, baseName )
		end

		function self.baseCount()
			return #self.bases
		end


		function self.unitCount( baseName )
			return #self[baseName].units
		end


		function self.unitInWave( baseName, unitIndex, waveNumber)
			local waves = self[baseName].units[unitIndex].waves

			for index, value in ipairs(waves) do
				if value == waveNumber then
					return true
				end
			end

			return false
		end


		function self.unitInLevel(baseName, unitIndex, levelNumber)
			local levelStart, levelEnd = self[baseName].units[unitIndex].level[1], self[baseName].units[unitIndex].level[2]

			if (levelNumber >= levelStart and levelNumber <= levelEnd) then
				return true
			end

			return false
		end



		function self.baseAlive(baseName)
			
			local alliedBaseAlive = IsUnitAliveBJ(self[baseName].allied.condition)
			local fedBaseAlive = IsUnitAliveBJ(self[baseName].fed.condition)

			--local alliedBaseAlive = true
			--local fedBaseAlive = true


			return alliedBaseAlive, fedBaseAlive
		end


		function self.checkSpawnUnit(baseName, unitIndex, levelNumber, waveNumber)
			local alliedBaseAlive, fedBaseAlive = self.baseAlive(baseName)
			local unitInWave = self.unitInWave(baseName, unitIndex, waveNumber)
			local unitInLevel = self.unitInLevel(baseName, unitIndex, levelNumber)
			local numOfUnits = self[baseName].units[unitIndex].numOfUnits
			local unitType = self[baseName].units[unitIndex].unitType

			if unitInWave and unitInLevel then
				return alliedBaseAlive, fedBaseAlive, numOfUnits, unitType
			else
				return false, false, numOfUnits, unitType
			end
		end

		function self.addUnit(baseName, unitType, numOfUnits, waves, levelStart, levelEnd)
			table.insert( self[baseName].units, {unitType=unitType, numOfUnits=numOfUnits, waves=waves, level={levelStart, levelEnd}} )
		end

		function self.spawnUnits(baseName, levelNumber, waveNumber)

			local pStart
			local pDest
			local allied = false
			local fed = false
			local lcu
			local unitType
			local numOfUnits

			for unitI=1,self.unitCount(baseName) do
				allied, fed, numOfUnits, unitType = self.checkSpawnUnit(baseName, unitI, levelNumber, waveNumber)

				if allied then

					for i=1,numOfUnits do
						pStart = GetRandomLocInRect(self[baseName].allied.startPoint)
						pDest = GetRandomLocInRect(self[baseName].allied.endPoint)

						lcu = CreateUnitAtLoc(Player(GetRandomInt(18, 20)), FourCC(unitType), pStart, bj_UNIT_FACING)
						SetUnitUserData(lcu, self[baseName].destination)
						IssuePointOrderLoc(lcu, "attack", pDest)

						RemoveLocation(pStart)
						RemoveLocation(pDest)
					end
				end

				if fed then

					for i=1,numOfUnits do
						pStart = GetRandomLocInRect(self[baseName].fed.startPoint)
						pDest = GetRandomLocInRect(self[baseName].fed.endPoint)

						lcu = CreateUnitAtLoc(Player(GetRandomInt(21, 23)), FourCC(unitType), pStart, bj_UNIT_FACING)
						SetUnitUserData(lcu, self[baseName].destination)
						IssuePointOrderLoc(lcu, "attack", pDest)

						RemoveLocation(pStart)
						RemoveLocation(pDest)
					end

				end
			end
		end

		return self
	end
end
//! endusercode

//***************************************************************************
//*  Spawn
//! beginusercode
function spawnSetup()

    -- Set up variables
    spawnTimer = CreateTimer()
    baseSpawn = spawn.new()
    spawnWave = 1
    spawnBaseI = 0

    cycleInterval = 5.00
    baseInterval = 0.4
    waveInterval = 20.00

    -- addBase(baseName, alliedStart, alliedEnd, alliedCondition, fedStart, fedEnd, fedCondition, destination)
 
    baseSpawn.addBase("arcane", gg_rct_Left_Arcane, gg_rct_Right_Start_Bottom, gg_unit_h003_0015, gg_rct_Right_Arcane, gg_rct_Left_Start_Top, gg_unit_h003_0007, 3)
    baseSpawn.addBase("arcaneCreep", gg_rct_Left_Arcane, gg_rct_Left_Elemental_Start, gg_unit_h003_0015, gg_rct_Right_Arcane, gg_rct_Right_Elemental_Start, gg_unit_h003_0007, 7)
    baseSpawn.addBase("arcaneHero", gg_rct_Arcane_Hero_Left, gg_rct_Right_Start_Bottom, gg_unit_hars_0017, gg_rct_Arcane_Hero_Right, gg_rct_Left_Start_Top, gg_unit_hars_0158, 3)
    baseSpawn.addBase("arcaneTop", gg_rct_Arcane_Left_Top, gg_rct_Right_Start_Bottom, gg_unit_hars_0355, gg_rct_Arcane_Right_Top, gg_rct_Left_Start_Top, gg_unit_hars_0293, 3)
    baseSpawn.addBase("arcaneBottom", gg_rct_Arcane_Left_Bottom, gg_rct_Right_Start_Bottom, gg_unit_hars_0292, gg_rct_Arcane_Right_Bottom, gg_rct_Left_Start_Top, gg_unit_hars_0303, 3)
    baseSpawn.addBase("blacksmith", gg_rct_Blacksmith_Left, gg_rct_Right_Start, gg_unit_n00K_0802, gg_rct_Blacksmith_Right, gg_rct_Left_Start, gg_unit_n00K_0477, 2)
    baseSpawn.addBase("blacksmithCreep", gg_rct_Blacksmith_Left, gg_rct_Zombie_End_Left, gg_unit_n00K_0802, gg_rct_Blacksmith_Right, gg_rct_Zombie_End_Right, gg_unit_n00K_0477, 10)
    baseSpawn.addBase("castle", gg_rct_Left_Hero, gg_rct_Right_Start, gg_unit_h00E_0033, gg_rct_Right_Hero, gg_rct_Left_Start, gg_unit_h00E_0081, 2)
    baseSpawn.addBase("cityElves", gg_rct_City_Elves_Left, gg_rct_Right_Start, gg_unit_hvlt_0207, gg_rct_City_Elves_Right, gg_rct_Left_Start, gg_unit_hvlt_0406, 2)
    baseSpawn.addBase("cityFront", gg_rct_Front_Town_Left, gg_rct_Right_Start, gg_unit_n00B_0364, gg_rct_Front_City_Right, gg_rct_Left_Start, gg_unit_n00B_0399, 2)
    baseSpawn.addBase("citySide", gg_rct_Left_City, gg_rct_Right_Start, gg_unit_n00B_0102, gg_rct_Right_City, gg_rct_Left_Start, gg_unit_n00B_0038, 2)
    baseSpawn.addBase("furbolg", gg_rct_Furbolg_Left, gg_rct_Right_Start_Top, gg_unit_n00D_0003, gg_rct_Furbolg_Right, gg_rct_Left_Start_Bottom, gg_unit_n00D_0091, 1)
    baseSpawn.addBase("highElves", gg_rct_Left_High_Elves, gg_rct_Right_Start_Top, gg_unit_nheb_0109, gg_rct_Right_High_Elves, gg_rct_Left_Start_Bottom, gg_unit_nheb_0036, 1)
    baseSpawn.addBase("highElvesCreep", gg_rct_Left_High_Elves, gg_rct_Aspect_of_Forest_Left, gg_unit_nheb_0109, gg_rct_Right_High_Elves, gg_rct_Aspect_of_Forest_Right, gg_unit_nheb_0036, 9)
    baseSpawn.addBase("merc", gg_rct_Camp_Bottom, gg_rct_Right_Start_Bottom, gg_unit_n001_0048, gg_rct_Camp_Top, gg_rct_Left_Start_Top, gg_unit_n001_0049, 3)
    baseSpawn.addBase("mine", gg_rct_Left_Workshop, gg_rct_Right_Start_Bottom, gg_unit_h006_0074, gg_rct_Right_Workshop, gg_rct_Left_Start_Top, gg_unit_h006_0055, 3)
    baseSpawn.addBase("naga", gg_rct_Naga_Left, gg_rct_Right_Start_Top, gg_unit_nntt_0135, gg_rct_Naga_Right, gg_rct_Left_Start_Bottom, gg_unit_nntt_0132, 1)
    baseSpawn.addBase("nagaCreep", gg_rct_Naga_Left, gg_rct_Murloc_Left, gg_unit_nntt_0135, gg_rct_Naga_Right, gg_rct_Murloc_Right, gg_unit_nntt_0132, 8)
    baseSpawn.addBase("nightElves", gg_rct_Left_Tree, gg_rct_Right_Start_Top, gg_unit_e003_0058, gg_rct_Right_Tree, gg_rct_Left_Start_Bottom, gg_unit_e003_0014, 1)
    baseSpawn.addBase("orc", gg_rct_Left_Orc, gg_rct_Right_Start_Top, gg_unit_o001_0075, gg_rct_Right_Orc, gg_rct_Left_Start_Bottom, gg_unit_o001_0078, 1)
    baseSpawn.addBase("shipyard", gg_rct_Left_Shipyard, gg_rct_Right_Start_Top, gg_unit_eshy_0120, gg_rct_Right_Shipyard, gg_rct_Left_Start_Bottom, gg_unit_eshy_0047, 1)
    baseSpawn.addBase("hshipyard", gg_rct_Human_Shipyard_Left, gg_rct_Right_Start_Bottom, gg_unit_hshy_0011, gg_rct_Human_Shipyard_Right, gg_rct_Left_Start_Top, gg_unit_hshy_0212, 3)
    baseSpawn.addBase("town", gg_rct_Left_Forward_Camp, gg_rct_Right_Start_Bottom, gg_unit_h00F_0029, gg_rct_Right_Forward, gg_rct_Left_Start_Top, gg_unit_h00F_0066, 3)
    baseSpawn.addBase("undead", gg_rct_Undead_Left, gg_rct_Right_Start, gg_unit_u001_0262, gg_rct_Undead_Right, gg_rct_Left_Start, gg_unit_u001_0264, 2)
    

    -- addUnit(baseName, unitType, numOfUnits, {waves}, levelStart, levelEnd)

    -- Arcane Spawn
    baseSpawn.addUnit("arcane", "h00C", 2, {5,6,7,8,9}, 3, 12)  -- Sorcress
    baseSpawn.addUnit("arcane", "hgry", 1, {2,4,6,8,10}, 10, 12)  -- Gryphon Rider
 
    -- Arcane Creep Spawn
    baseSpawn.addUnit("arcaneCreep", "narg", 2, {1,2,3,4}, 2, 12)  -- Battle Golem
    baseSpawn.addUnit("arcaneCreep", "hwt2", 1, {1,2,3,4}, 3, 12)  -- Water Elemental (Level 2)
    baseSpawn.addUnit("arcaneCreep", "hwt3", 1, {1,2,3,4}, 4, 12)  -- Water Elemental (Level 3)
    baseSpawn.addUnit("arcaneCreep", "h00K", 1, {1,2,3,4,5,10}, 6, 12)  -- Magi Defender

    -- Arcane Hero Sapwn
    baseSpawn.addUnit("arcaneHero", "n00A", 1, {5,6}, 6, 12)  -- Supreme Wizard
    baseSpawn.addUnit("arcaneHero", "nsgg", 1, {4,6}, 8, 12)  -- Seige Golem

    -- Arcane Top Spawn
    baseSpawn.addUnit("arcaneTop", "narg", 4, {4,5,6}, 2, 12)  -- Battle Golem
    baseSpawn.addUnit("arcaneTop", "hwt2", 1, {4,5,6}, 4, 12)  -- Water Elemental (Level 2)
    baseSpawn.addUnit("arcaneTop", "hwt3", 1, {5,6}, 8, 12)  -- Water Elemental (Level 3)

    -- Arcane Bottom Spawn
    baseSpawn.addUnit("arcaneBottom", "narg", 4, {1,2,3}, 2, 12)  -- Battle Golem
    baseSpawn.addUnit("arcaneBottom", "hwt2", 1, {1,2,3}, 4, 12)  -- Water Elemental (Level 2)
    baseSpawn.addUnit("arcaneBottom", "hwt3", 1, {2,3}, 8, 12)  -- Water Elemental (Level 3)

    -- Blacksmith Spawn
    baseSpawn.addUnit("blacksmith", "h011", 1, {1,2,3,4,5}, 3, 12)  -- Castle Footman
    baseSpawn.addUnit("blacksmith", "h00L", 1, {1,2,3,4}, 4, 12)  -- Knight
    baseSpawn.addUnit("blacksmith", "h00L", 1, {1,2,3,4}, 5, 12)  -- Knight
    baseSpawn.addUnit("blacksmith", "h012", 1, {1,2,3}, 6, 12)  -- Scarlet Commander
    baseSpawn.addUnit("blacksmith", "hmtt", 1, {1,5}, 6, 12)  -- Seige Engine
    baseSpawn.addUnit("blacksmith", "hmtm", 1, {3,8}, 7, 12)  -- Cannon
    baseSpawn.addUnit("blacksmith", "h00D", 1, {2}, 10, 12)  -- Commander of the Guard

    -- Blacksmith Creep Spawn
    baseSpawn.addUnit("blacksmithCreep", "h007", 4, {1,2,3,4}, 1, 6)  -- Militia
    baseSpawn.addUnit("blacksmithCreep", "nhea", 1, {1,2,3,4}, 3, 12)  -- Archer
    baseSpawn.addUnit("blacksmithCreep", "hspt", 1, {1,2,3,4}, 4, 12)  -- Tower Guard
    baseSpawn.addUnit("blacksmithCreep", "h012", 2, {1,2,3,4,5}, 6, 12)  -- Scarlet Commander
    baseSpawn.addUnit("blacksmithCreep", "hcth", 2, {1,2,3,4,5}, 7, 12)  -- Captian

    -- Castle Spawn
    baseSpawn.addUnit("castle", "h00s", 1, {1,2,3,4,5,6,7,8}, 8, 12)  -- Commander

    -- City Elves
    baseSpawn.addUnit("cityElves", "nhea", 1, {1,2,3,4,5,6}, 1, 3)  -- Archer
    baseSpawn.addUnit("cityElves", "hspt", 1, {1,2,3,4,5,6,7,8}, 2, 3)  -- Tower Guard
    baseSpawn.addUnit("cityElves", "hspt", 2, {1,2,3,4,5,6,7}, 4, 5)  -- Tower Guard
    baseSpawn.addUnit("cityElves", "nchp", 1, {1,2,3,4}, 3, 12)  -- Mystic
    baseSpawn.addUnit("cityElves", "hspt", 3, {1,2,3,4,5,6}, 6, 12)  -- Tower Guard
    baseSpawn.addUnit("cityElves", "nhea", 1, {1,2,3,4,5,6,7,8}, 4, 12)  -- Archer
    baseSpawn.addUnit("cityElves", "nchp", 1, {1,2,3,4,5,6,7}, 7, 12)  -- Mystic

    -- City Front Spawn
    baseSpawn.addUnit("cityFront", "h007", 2, {2,3,4,5,6,7}, 1, 2)  -- Militia
    baseSpawn.addUnit("cityFront", "h007", 3, {2,3,4,5,6,7}, 3, 5)  -- Militia
    baseSpawn.addUnit("cityFront", "hfoo", 3, {2,3,4,5,6,7}, 4, 12)  -- Footman
    baseSpawn.addUnit("cityFront", "hcth", 2, {2,3,4,5,6}, 6, 12)  -- Captian

    -- City Side Spawn
    baseSpawn.addUnit("citySide", "h007", 1, {6,7,8,9,10}, 1, 2)  -- Militia
    baseSpawn.addUnit("citySide", "hfoo", 2, {6,7,8,9,10}, 2, 12)  -- Footman
    baseSpawn.addUnit("citySide", "h007", 2, {6,7,8,9,10}, 3, 12)  -- Militia

    -- Furbolg Spawn
    baseSpawn.addUnit("furbolg", "n00E", 2, {1,3,4,5,6,7,8}, 1, 4)  -- Furbolg
    baseSpawn.addUnit("furbolg", "n00G", 1, {1,3,5,7,9}, 3, 12)  -- Furbolg Shaman
    baseSpawn.addUnit("furbolg", "n00E", 2, {1,2,3,4,5,6,7,8,9,10}, 4, 12)  -- Furbolg
    

    -- High Elves
    baseSpawn.addUnit("highElves", "earc", 2, {1,2,3,4,5}, 1, 12)  -- Ranger
    baseSpawn.addUnit("highElves", "e000", 1, {1,2,3,4,5,6,7,8}, 2, 12)  -- Elite Ranger
    baseSpawn.addUnit("highElves", "hhes", 4, {1,2,3,4}, 4, 12)  -- Swordsman
    baseSpawn.addUnit("highElves", "nemi", 1, {1,2,3,4,5,6}, 5, 12)  -- Emmisary

    -- High Elves Creep
    baseSpawn.addUnit("highElvesCreep", "hhes", 2, {1,2,3,4}, 1, 12)  -- Swordsman
    baseSpawn.addUnit("highElvesCreep", "nhea", 1, {1,2,3,4,5}, 2, 12)  -- Archer
    baseSpawn.addUnit("highElvesCreep", "nemi", 1, {1,2,3,4}, 4, 12)  -- Emmisary
    baseSpawn.addUnit("highElvesCreep", "h010", 2, {1,2,3,4,5}, 5, 12)  -- Elven Guardian

    -- Merc Spawn
    baseSpawn.addUnit("merc", "n002", 2, {1,2,3,4,5,6,7,8,9,10}, 1, 12)  -- Merc
    baseSpawn.addUnit("merc", "n003", 2, {4,5,6,7,8,9,10}, 2, 12)  -- Merc Archer
    baseSpawn.addUnit("merc", "n002", 2, {7,8,9,10}, 3, 12)  -- Merc
    baseSpawn.addUnit("merc", "n008", 3, {7,8,9,10}, 4, 12)  -- Enforcer
    baseSpawn.addUnit("merc", "nass", 1, {6,7,8,9,10}, 5, 12)  -- Assasin
    baseSpawn.addUnit("merc", "n004", 1, {7,8,9,10}, 1, 12)  -- Wizard Warrior
    baseSpawn.addUnit("merc", "n005", 1, {7,8,9,10}, 6, 12)  -- Bandit Lord

    -- Mine Spawn
    baseSpawn.addUnit("mine", "h001", 1, {2,3,4,5,6}, 2, 12)  -- Morter Team
    baseSpawn.addUnit("mine", "h008", 2, {1,2,3,4,5,6,7,8}, 3, 12)  -- Rifleman
    baseSpawn.addUnit("mine", "h013", 1, {1,2,3,4,5,6,7,8}, 4, 12)  -- Rifleman Long
    baseSpawn.addUnit("mine", "ncg2", 2, {1,2,3,4,5}, 4, 12)  -- Clockwerk Goblin
    baseSpawn.addUnit("mine", "n00F", 1, {2,3,4,5,6,7}, 5, 12)  -- Automaton

    -- Naga Spawn
    baseSpawn.addUnit("naga", "nmyr", 1, {3,4,5,6,7,8,9,10}, 1, 12)  -- Naga Myrmidon
    baseSpawn.addUnit("naga", "nnsw", 1, {4,5,6,7,8,9,10}, 2, 12)  -- Naga Siren
    baseSpawn.addUnit("naga", "nnrg", 1, {5,6,8,9,10}, 5, 12)  -- Naga Royal Guard
    baseSpawn.addUnit("naga", "nhyc", 1, {1,3,5,7,8,9}, 9, 12)  -- Dragon Turtle

    -- Naga Creep Spawn
    baseSpawn.addUnit("nagaCreep", "nmyr", 2, {1,2,3,4}, 2, 12)  -- Naga Myrmidon
    baseSpawn.addUnit("nagaCreep", "nnsw", 1, {2,3,4,5}, 4, 12)  -- Naga Siren
    baseSpawn.addUnit("nagaCreep", "nsnp", 1, {2,3,4,5}, 6, 12)  -- Snap Dragon

    -- Night Elves Spawn
    baseSpawn.addUnit("nightElves", "nwat", 1, {3,4,5,6,7,8,9}, 2, 12)  -- Sentry
    baseSpawn.addUnit("nightElves", "edry", 1, {1,4,5,7,9}, 3, 12)  -- Dryad
    baseSpawn.addUnit("nightElves", "edoc", 2, {1,3,5,7,9}, 4, 12)  -- Druid of the Claw
    baseSpawn.addUnit("nightElves", "e005", 1, {2,4,6,8}, 5, 12)  -- Mountain Giant
    baseSpawn.addUnit("nightElves", "echm", 1, {5,7}, 9, 12)  -- Chimera
    
    -- Orc Spawn
    baseSpawn.addUnit("orc", "o002", 2, {3,5,6,7,8,9,10}, 1, 12)  -- Grunt
    baseSpawn.addUnit("orc", "o002", 2, {6,7,8}, 3, 12)  -- Grunt
    baseSpawn.addUnit("orc", "nftr", 1, {4,5,7,8,9,10}, 2, 12)  -- Spearman
    baseSpawn.addUnit("orc", "nogr", 3, {2,4,6,8,10}, 4, 12)  -- Ogre
    baseSpawn.addUnit("orc", "o004", 1, {6,7,8}, 3, 12)  -- Spirit Walker
    baseSpawn.addUnit("orc", "nogm", 1, {1,6,8}, 5, 12)  -- Ogre Warchief
    baseSpawn.addUnit("orc", "otau", 1, {5,6,7}, 6, 12)  -- Tauren

    -- Night Elf Shipyard Spawn
    baseSpawn.addUnit("hshipyard", "hdes", 1, {2,4,6}, 1, 2)         -- Human Frigate
    baseSpawn.addUnit("hshipyard", "hdes", 1, {2,4,6,8,10}, 3, 4)       -- Human Frigate
    baseSpawn.addUnit("hshipyard", "hdes", 1, {2,4,6,7,8,9,10}, 5, 12)    -- Human Frigate
    baseSpawn.addUnit("hshipyard", "hbsh", 1, {2,6,9}, 5, 12)        -- Human Battleship

    -- Human Shipyard Spawn
    baseSpawn.addUnit("shipyard", "edes", 1, {1,2}, 1, 2)         -- Night Elf Frigate
    baseSpawn.addUnit("shipyard", "edes", 1, {1,2,3,4}, 3, 4)     -- Night Elf Frigate
    baseSpawn.addUnit("shipyard", "edes", 1, {1,2,3,4,5}, 5, 12)  -- Night Elf Frigate
    baseSpawn.addUnit("shipyard", "ebsh", 1, {3,5}, 5, 12)        -- Night Elf Battleship

    -- Town Spawn
    baseSpawn.addUnit("town", "h007", 3, {1,2,3,4,5}, 1, 5)  -- Militia
    baseSpawn.addUnit("town", "hcth", 1, {1,2,3,4}, 2, 12)  -- Captian
    baseSpawn.addUnit("town", "hfoo", 5, {1,2,3,4,5,6}, 3, 12)  -- Footman
    baseSpawn.addUnit("town", "h00L", 2, {1,3,7,9}, 4, 12)  -- Knight

    -- Undead Spawn
    baseSpawn.addUnit("undead", "ugho", 5, {1,2,3,4,5,6,7,8,9}, 1, 12)  -- Ghoul
    baseSpawn.addUnit("undead", "uskm", 2, {1,2,3,4,5,6,7,8,9,10}, 2, 12)  -- Skeleton Mage
    baseSpawn.addUnit("undead", "unec", 1, {1,2,3,4,5,6,7}, 3, 12)  -- Necromancer
    baseSpawn.addUnit("undead", "nerw", 1, {1,6}, 4, 12)  -- Warlock
    baseSpawn.addUnit("undead", "nfgl", 1, {2,5,8}, 5, 12)  -- Giant Skeleton

    
    --DisplayTextToForce(GetPlayersAll() , "Spawn Setup")
    StartTimerBJ(spawnTimer, false, 10)
end




function spawnRun()

    trg_spawnRun = CreateTrigger()
    TriggerRegisterTimerExpireEventBJ(trg_spawnRun, spawnTimer)
    
    TriggerAddAction(trg_spawnRun, function ()

        -- Iterate everything up
        spawnBaseI = spawnBaseI + 1

        if (spawnBaseI > baseSpawn.baseCount() ) then
            spawnBaseI = 0
            spawnWave = spawnWave + 1

            if spawnWave > 10 then
                spawnWave = 1
                StartTimerBJ(spawnTimer, false, cycleInterval)
            else
                StartTimerBJ(spawnTimer, false, waveInterval)
            end

            return true
        else
            StartTimerBJ(spawnTimer, false, baseInterval)
        end
        

        -- Find the Base to Spawn Next
        local baseName = baseSpawn.bases[spawnBaseI]

        -- Spawn the Units at the selected Base
        DisableTrigger(gg_trg_Creeps_keep_going_after_Order)
        baseSpawn.spawnUnits(baseName, udg_INTcreepLevel, spawnWave)
        EnableTrigger(gg_trg_Creeps_keep_going_after_Order)
    end)  
end
//! endusercode

//***************************************************************************
//*  Camera
//! beginusercode
function initTrig_Auto_Zoom()
	trg_Auto_Zoom = CreateTrigger()
	DisableTrigger(trg_Auto_Zoom)
	TriggerRegisterTimerEventPeriodic(trg_Auto_Zoom, 3.00)
	
	
    TriggerAddAction(trg_Auto_Zoom, function ()
		local i = 1
		local ug = CreateGroup()
		
		while (i <= 12 ) do
			
			ug = GetUnitsInRangeOfLocAll(1350, GetCameraTargetPositionLoc())
			SetCameraFieldForPlayer(ConvertedPlayer(i), CAMERA_FIELD_TARGET_DISTANCE, (1700.00 + (1.00 * I2R(CountUnitsInGroup(ug)))), 6.00)
			DestroyGroup(ug)
			i = i + 1
		end
	end)
end
//! endusercode


//***************************************************************************
//*
//*  Sound Assets
//*
//***************************************************************************

function InitSounds takes nothing returns nothing
    set gg_snd_PurgeTarget1 = CreateSound( "Abilities/Spells/Orc/Purge/PurgeTarget1.flac", false, true, true, 0, 0, "SpellsEAX" )
    call SetSoundParamsFromLabel( gg_snd_PurgeTarget1, "Purge" )
    call SetSoundDuration( gg_snd_PurgeTarget1, 2095 )
    call SetSoundVolume( gg_snd_PurgeTarget1, 127 )
endfunction

//***************************************************************************
//*
//*  Unit Creation
//*
//***************************************************************************

//===========================================================================
function CreateBuildingsForPlayer0 takes nothing returns nothing
    local player p = Player(0)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'halt', -24992.0, -4576.0, 270.000, 'halt' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer1 takes nothing returns nothing
    local player p = Player(1)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'halt', -24992.0, -4896.0, 270.000, 'halt' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer2 takes nothing returns nothing
    local player p = Player(2)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'halt', -24992.0, -5216.0, 270.000, 'halt' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer3 takes nothing returns nothing
    local player p = Player(3)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'halt', -23328.0, -3552.0, 270.000, 'halt' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer4 takes nothing returns nothing
    local player p = Player(4)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'halt', -23648.0, -3552.0, 270.000, 'halt' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer5 takes nothing returns nothing
    local player p = Player(5)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'halt', -23968.0, -3552.0, 270.000, 'halt' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer6 takes nothing returns nothing
    local player p = Player(6)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'halt', 736.0, -5536.0, 270.000, 'halt' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer7 takes nothing returns nothing
    local player p = Player(7)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'halt', 416.0, -5536.0, 270.000, 'halt' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer8 takes nothing returns nothing
    local player p = Player(8)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'halt', 96.0, -5536.0, 270.000, 'halt' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer9 takes nothing returns nothing
    local player p = Player(9)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'halt', 1824.0, -3872.0, 270.000, 'halt' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer10 takes nothing returns nothing
    local player p = Player(10)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'halt', 1824.0, -4192.0, 270.000, 'halt' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer11 takes nothing returns nothing
    local player p = Player(11)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'halt', 1824.0, -4512.0, 270.000, 'halt' )
endfunction

//===========================================================================
function CreateUnitsForPlayer18 takes nothing returns nothing
    local player p = Player(18)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'o002', -15736.2, -1126.7, 245.453, 'o002' )
    set u = BlzCreateUnitWithSkin( p, 'o002', -14888.0, -1691.9, 180.632, 'o002' )
    set u = BlzCreateUnitWithSkin( p, 'o002', -14311.5, -1365.8, 347.190, 'o002' )
    set u = BlzCreateUnitWithSkin( p, 'o002', -15217.8, -1994.0, 245.596, 'o002' )
    set u = BlzCreateUnitWithSkin( p, 'nmyr', -20391.5, 2137.6, 230.138, 'nmyr' )
    set u = BlzCreateUnitWithSkin( p, 'nmyr', -20522.2, 1385.0, 171.117, 'nmyr' )
    set u = BlzCreateUnitWithSkin( p, 'n00E', -16957.7, 533.9, 42.167, 'n00E' )
    set u = BlzCreateUnitWithSkin( p, 'n00E', -16487.8, -27.4, 197.606, 'n00E' )
    set u = BlzCreateUnitWithSkin( p, 'n00E', -16587.4, 339.8, 173.842, 'n00E' )
endfunction

//===========================================================================
function CreateUnitsForPlayer19 takes nothing returns nothing
    local player p = Player(19)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'nmyr', -20143.3, 2750.2, 230.140, 'nmyr' )
    set u = BlzCreateUnitWithSkin( p, 'nmyr', -22165.6, 2122.1, 230.140, 'nmyr' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer20 takes nothing returns nothing
    local player p = Player(20)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'h004', -18944.0, -6144.0, 270.000, 'h004' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -22144.0, -3456.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'n00D', -16832.0, 192.0, 270.000, 'n00D' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -22400.0, -10432.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'hshy', -13536.0, -9120.0, 270.000, 'hshy' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -15232.0, -9664.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'h003', -23488.0, -11200.0, 270.000, 'h003' )
    set u = BlzCreateUnitWithSkin( p, 'n000', -23680.0, -5376.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'hars', -19456.0, -11200.0, 270.000, 'hars' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -14720.0, -6848.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'o005', -14656.0, -1216.0, 270.000, 'o005' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -14848.0, -8448.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -14272.0, -6848.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -10976.0, -12768.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -22784.0, -10048.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'n000', -23744.0, -4032.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'h00F', -14784.0, -8064.0, 270.000, 'h00F' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -12000.0, -12704.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'h00E', -23744.0, -4800.0, 270.000, 'h00E' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -22400.0, -11968.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -22784.0, -12352.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -14400.0, -8064.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'n001', -12544.0, -11904.0, 270.000, 'n001' )
    call SetUnitColor( u, ConvertPlayerColor(9) )
    set u = BlzCreateUnitWithSkin( p, 'hhou', -16640.0, -9344.0, 270.000, 'hhou' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -14016.0, -9088.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'h00T', -20544.0, -11200.0, 270.000, 'h00T' )
    set u = BlzCreateUnitWithSkin( p, 'e003', -21056.0, -1536.0, 270.000, 'e003' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -14848.0, -7680.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'hhou', -16640.0, -8960.0, 270.000, 'hhou' )
    set u = BlzCreateUnitWithSkin( p, 'hhou', -16640.0, -9152.0, 270.000, 'hhou' )
    set u = BlzCreateUnitWithSkin( p, 'hlum', -15520.0, -9120.0, 270.000, 'hlum' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -16896.0, -4864.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'h004', -22720.0, -5824.0, 270.000, 'h004' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -11040.0, -11168.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'o003', -14688.0, -1632.0, 270.000, 'o003' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -15232.0, -1792.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -20352.0, -6464.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'h006', -16064.0, -11200.0, 270.000, 'h006' )
    set u = BlzCreateUnitWithSkin( p, 'o001', -15232.0, -1216.0, 270.000, 'o001' )
    set u = BlzCreateUnitWithSkin( p, 'n006', -15680.0, -10560.0, 270.000, 'n006' )
    set u = BlzCreateUnitWithSkin( p, 'o000', -13824.0, -1472.0, 270.000, 'o000' )
    set u = BlzCreateUnitWithSkin( p, 'negt', -22976.0, 1600.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -19648.0, -6016.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -24256.0, -12160.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -13120.0, -7936.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'n006', -15680.0, -11840.0, 270.000, 'n006' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -12960.0, -12192.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'o005', -15168.0, -1664.0, 270.000, 'o005' )
    set u = BlzCreateUnitWithSkin( p, 'n00B', -20352.0, -6912.0, 270.000, 'n00B' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -20672.0, -5632.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -19264.0, -10816.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -20352.0, -7360.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -16896.0, -5376.0, 270.000, 'h00X' )
    set gg_unit_nheb_0109 = BlzCreateUnitWithSkin( p, 'nheb', -24896.0, 1280.0, 270.000, 'nheb' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -10848.0, -10784.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -16608.0, -8544.0, 90.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -20288.0, -5632.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'n000', -23168.0, -4864.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'o000', -16384.0, 512.0, 270.000, 'o000' )
    set u = BlzCreateUnitWithSkin( p, 'eshy', -21792.0, -96.0, 270.000, 'eshy' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -15104.0, -1792.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'nntg', -21312.0, 1920.0, 270.000, 'nntg' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -19072.0, -9536.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -19072.0, -12864.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'negt', -24576.0, 832.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'nntg', -20544.0, 2560.0, 270.000, 'nntg' )
    set u = BlzCreateUnitWithSkin( p, 'uzg1', -14432.0, -3872.0, 270.000, 'uzg1' )
    set u = BlzCreateUnitWithSkin( p, 'o000', -16384.0, -192.0, 270.000, 'o000' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -13536.0, -5088.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'nntt', -20800.0, 2048.0, 270.000, 'nntt' )
    set u = BlzCreateUnitWithSkin( p, 'ngob', -20736.0, -2304.0, 270.000, 'ngob' )
    set u = BlzCreateUnitWithSkin( p, 'nntg', -20992.0, 1344.0, 270.000, 'nntg' )
    set u = BlzCreateUnitWithSkin( p, 'e007', -18464.0, -2592.0, 270.000, 'e007' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -19264.0, -11584.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'ngob', -19328.0, -1472.0, 270.000, 'ngob' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -15296.0, 576.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -15296.0, 0.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'negt', -23232.0, -768.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -12640.0, -12704.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -13216.0, -11616.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'nef0', -24352.0, 800.0, 270.000, 'nef0' )
    set u = BlzCreateUnitWithSkin( p, 'npgf', -13920.0, -2336.0, 270.000, 'npgf' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -11936.0, -11168.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'nef1', -24800.0, 416.0, 270.000, 'nef1' )
    set u = BlzCreateUnitWithSkin( p, 'nef3', -24032.0, 416.0, 270.000, 'nef3' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -13216.0, -11296.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'nntg', -19968.0, 2304.0, 270.000, 'nntg' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -14848.0, -2240.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'nntg', -20224.0, 1152.0, 270.000, 'nntg' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -13920.0, -3296.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'nntg', -19840.0, 1472.0, 270.000, 'nntg' )
    set u = BlzCreateUnitWithSkin( p, 'negt', -24704.0, 256.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -14528.0, -1664.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -22656.0, -3456.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'e007', -19168.0, -1760.0, 270.000, 'e007' )
    set u = BlzCreateUnitWithSkin( p, 'nef4', -24352.0, 1312.0, 270.000, 'nef4' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -13696.0, -1408.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -13696.0, -1536.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -14528.0, -1792.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -14528.0, -1280.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -14720.0, -2240.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'n000', -24512.0, -4800.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', -24800.0, 864.0, 270.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'hvlt', -21248.0, -4864.0, 270.000, 'hvlt' )
    set u = BlzCreateUnitWithSkin( p, 'nct2', -12960.0, -2080.0, 270.000, 'nct2' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -11872.0, -12448.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'npgf', -15456.0, -2400.0, 270.000, 'npgf' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -24256.0, -10240.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -23104.0, -10816.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -23104.0, -11584.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'n000', -21632.0, -4416.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -23872.0, -11584.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -23872.0, -10816.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'h00T', -21632.0, -12928.0, 270.000, 'h00T' )
    set u = BlzCreateUnitWithSkin( p, 'npgf', -16032.0, -2656.0, 270.000, 'npgf' )
    set u = BlzCreateUnitWithSkin( p, 'h00T', -21632.0, -9472.0, 270.000, 'h00T' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -19072.0, -11200.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -20864.0, -11520.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -20864.0, -10880.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -19072.0, -13376.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -19264.0, -13120.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'negt', -23936.0, 640.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -21888.0, -12736.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -19072.0, -9024.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'negt', -24256.0, 256.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'o000', -14784.0, -2112.0, 270.000, 'o000' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -14528.0, -1152.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -13728.0, -7008.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -13536.0, -3232.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -12576.0, -3616.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -14688.0, -3552.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'u001', -13952.0, -3904.0, 270.000, 'u001' )
    set u = BlzCreateUnitWithSkin( p, 'n00V', -14624.0, -3360.0, 270.000, 'n00V' )
    set u = BlzCreateUnitWithSkin( p, 'n00V', -13472.0, -4768.0, 270.000, 'n00V' )
    set u = BlzCreateUnitWithSkin( p, 'n00V', -13472.0, -4576.0, 270.000, 'n00V' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -12512.0, -3808.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'n000', -23296.0, -4352.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -14432.0, -3296.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'n00V', -13728.0, -3232.0, 270.000, 'n00V' )
    set u = BlzCreateUnitWithSkin( p, 'negt', -23936.0, 1024.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'ugrv', -14400.0, -4416.0, 270.000, 'ugrv' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -19200.0, -5440.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -13024.0, -10592.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'uzg1', -14048.0, -4384.0, 270.000, 'uzg1' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -13024.0, -9888.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -19264.0, -9280.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'uzg1', -13472.0, -4128.0, 270.000, 'uzg1' )
    set u = BlzCreateUnitWithSkin( p, 'uzg1', -13216.0, -3744.0, 270.000, 'uzg1' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -19232.0, -7136.0, 270.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'hars', -19584.0, -13248.0, 270.000, 'hars' )
    set u = BlzCreateUnitWithSkin( p, 'negt', -24384.0, 1472.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'negt', -22848.0, -384.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'n000', -21760.0, -5312.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -13280.0, -10272.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -11936.0, -10656.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'negt', -25216.0, 896.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -12256.0, -9952.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -11872.0, -9568.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'e007', -19872.0, -2208.0, 270.000, 'e007' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -10464.0, -12256.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -20160.0, -4928.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -20160.0, -4544.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -12256.0, -10976.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'n006', -16256.0, -10368.0, 270.000, 'n006' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -21056.0, -11200.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -18272.0, -4960.0, 270.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'n000', -24192.0, -5248.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'hars', -19584.0, -9152.0, 270.000, 'hars' )
    set u = BlzCreateUnitWithSkin( p, 'h004', -23168.0, -5824.0, 270.000, 'h004' )
    set u = BlzCreateUnitWithSkin( p, 'h004', -22720.0, -5376.0, 270.000, 'h004' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -21632.0, -6720.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -21824.0, -9664.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -21632.0, -6272.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -19392.0, -6592.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -18272.0, -5152.0, 270.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', -22688.0, -32.0, 270.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'n00B', -18816.0, -5120.0, 270.000, 'n00B' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -19904.0, -6912.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -18272.0, -5344.0, 270.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'h004', -20480.0, -4864.0, 270.000, 'h004' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -18912.0, -6560.0, 90.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'n00V', -13728.0, -5216.0, 270.000, 'n00V' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -17920.0, -4736.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -12832.0, -3488.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'utod', -14016.0, -4864.0, 270.000, 'utod' )
    set u = BlzCreateUnitWithSkin( p, 'usep', -12864.0, -4160.0, 270.000, 'usep' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -17920.0, -6400.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -18688.0, -5696.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'nef0', -23200.0, 1760.0, 270.000, 'nef0' )
    set u = BlzCreateUnitWithSkin( p, 'nef4', -23328.0, 160.0, 270.000, 'nef4' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -17952.0, -6016.0, 0.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -19200.0, -4800.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -19232.0, -7328.0, 270.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -19296.0, -5152.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -17920.0, -5504.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -19200.0, -4096.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -13120.0, -7552.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'obea', -14144.0, -1856.0, 270.000, 'obea' )
    set u = BlzCreateUnitWithSkin( p, 'ovln', -13376.0, -2112.0, 270.000, 'ovln' )
    set u = BlzCreateUnitWithSkin( p, 'ncnt', -15392.0, -3040.0, 270.000, 'ncnt' )
    set u = BlzCreateUnitWithSkin( p, 'ncbc', -19104.0, -5824.0, 270.000, 'ncbc' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -19296.0, -4512.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -19104.0, -4512.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -18592.0, -4512.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -18400.0, -4512.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'n006', -15296.0, -11200.0, 270.000, 'n006' )
    set u = BlzCreateUnitWithSkin( p, 'n006', -16256.0, -12032.0, 270.000, 'n006' )
    set u = BlzCreateUnitWithSkin( p, 'ncbc', -18080.0, -4416.0, 270.000, 'ncbc' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -18784.0, -4512.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -19424.0, -5920.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -19872.0, -5280.0, 90.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -19872.0, -5472.0, 90.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -19872.0, -5664.0, 90.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncbe', -18464.0, -6080.0, 180.000, 'ncbe' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -19808.0, -4000.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -19616.0, -4000.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -19424.0, -4000.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -18976.0, -4000.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -18784.0, -4000.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -18592.0, -4000.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -17952.0, -6208.0, 0.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -17952.0, -5824.0, 0.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -17504.0, -6048.0, 270.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -17504.0, -6240.0, 270.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -17504.0, -6432.0, 270.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -17504.0, -6624.0, 270.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -18272.0, -6752.0, 90.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -18080.0, -6752.0, 90.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -17888.0, -6752.0, 90.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -18912.0, -6752.0, 90.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -18400.0, -5728.0, 90.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'h004', -20800.0, -6912.0, 270.000, 'h004' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -18240.0, -7424.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -18240.0, -7808.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'ncbe', -19904.0, -6560.0, 270.000, 'ncbe' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -20768.0, -6624.0, 270.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -20768.0, -6432.0, 270.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -20832.0, -7456.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -20640.0, -7456.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -21216.0, -7456.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -21408.0, -7456.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -21600.0, -7456.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -21408.0, -7840.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -21216.0, -7840.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -21024.0, -7840.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -20832.0, -7840.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -20448.0, -7840.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -20256.0, -7840.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -19808.0, -7904.0, 270.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -19808.0, -7712.0, 270.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'ncbe', -19872.0, -7360.0, 180.000, 'ncbe' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -21024.0, -5984.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -21216.0, -5984.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'nfv4', -21280.0, -4000.0, 270.000, 'nfv4' )
    set u = BlzCreateUnitWithSkin( p, 'nfv1', -20512.0, -4064.0, 270.000, 'nfv1' )
    set u = BlzCreateUnitWithSkin( p, 'nfv3', -21984.0, -4128.0, 270.000, 'nfv3' )
    set u = BlzCreateUnitWithSkin( p, 'nfv3', -21536.0, -5728.0, 180.000, 'nfv3' )
    set u = BlzCreateUnitWithSkin( p, 'nfv0', -21472.0, -3744.0, 270.000, 'nfv0' )
    set u = BlzCreateUnitWithSkin( p, 'nfv4', -21984.0, -5024.0, 0.000, 'nfv4' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -19552.0, -7840.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -19360.0, -7840.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -13408.0, -8480.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -13600.0, -8480.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'nef3', -22688.0, 288.0, 270.000, 'nef3' )
    set u = BlzCreateUnitWithSkin( p, 'nef1', -24224.0, 2400.0, 270.000, 'nef1' )
    set u = BlzCreateUnitWithSkin( p, 'nef6', -23328.0, 1504.0, 270.000, 'nef6' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -14624.0, -7328.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -13536.0, -7008.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -13344.0, -7008.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -15776.0, -7008.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -15584.0, -7008.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -15392.0, -7008.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -16288.0, -7008.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -16480.0, -7008.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -16672.0, -7008.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -15840.0, -8544.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -16032.0, -8544.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -16224.0, -8544.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -15392.0, -8096.0, 270.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -15392.0, -8288.0, 270.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -15648.0, -7584.0, 270.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -15648.0, -7392.0, 270.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -16608.0, -8160.0, 90.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -16608.0, -8352.0, 90.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'hbla', -13568.0, -7744.0, 270.000, 'hbla' )
    set u = BlzCreateUnitWithSkin( p, 'n00K', -24064.0, -6528.0, 270.000, 'n00K' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -14656.0, -1792.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -14432.0, -7328.0, 270.000, 'ncb9' )
endfunction

//===========================================================================
function CreateUnitsForPlayer20 takes nothing returns nothing
    local player p = Player(20)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'hpea', -24729.3, -7565.4, 58.328, 'hpea' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -15785.7, -7885.1, 103.395, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'hpea', -24568.9, -7426.3, 273.909, 'hpea' )
    set u = BlzCreateUnitWithSkin( p, 'nhea', -23799.0, -295.6, 91.508, 'nhea' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -14269.8, -7675.9, 276.446, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -13724.9, -7944.1, 178.434, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -13780.4, -7410.3, 31.092, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -14541.7, -8826.5, 276.941, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -15229.0, -7281.9, 225.018, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -16235.8, -8224.0, 81.631, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -16166.4, -7579.3, 124.171, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -16471.4, -7226.5, 194.969, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -20430.2, -7654.9, 225.721, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -19643.0, -5799.6, 95.463, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -19186.9, -4280.1, 50.407, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'nhea', -23692.9, -538.0, 125.753, 'nhea' )
    set u = BlzCreateUnitWithSkin( p, 'nhea', -23116.4, -127.0, 145.090, 'nhea' )
    set u = BlzCreateUnitWithSkin( p, 'nhea', -23440.9, -345.3, 98.034, 'nhea' )
    set u = BlzCreateUnitWithSkin( p, 'hhdl', -23741.0, -7469.5, 178.259, 'hhdl' )
    set u = BlzCreateUnitWithSkin( p, 'hhdl', -23866.0, -7581.6, 195.002, 'hhdl' )
    set u = BlzCreateUnitWithSkin( p, 'hhdl', -23970.3, -7507.7, 246.892, 'hhdl' )
    set u = BlzCreateUnitWithSkin( p, 'hhdl', -23740.5, -7601.6, 230.291, 'hhdl' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -12870.8, -11295.8, 324.658, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -13140.8, -12066.8, 28.045, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -12811.8, -11603.0, 353.485, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -12091.1, -12094.7, 118.557, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -12381.2, -12806.8, 91.671, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -12128.1, -11756.7, 144.937, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -12592.5, -11524.1, 330.197, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -11111.9, -11841.4, 168.659, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -11408.3, -10740.1, 221.593, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -10695.9, -11972.9, 167.084, 'n002' )
endfunction

//===========================================================================
function CreateUnitsForPlayer21 takes nothing returns nothing
    local player p = Player(21)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'nmyr', -3134.0, -11939.0, 50.138, 'nmyr' )
    set u = BlzCreateUnitWithSkin( p, 'nmyr', -1111.7, -11310.9, 50.138, 'nmyr' )
    set u = BlzCreateUnitWithSkin( p, 'o002', -8411.1, -8005.3, 27.406, 'o002' )
    set u = BlzCreateUnitWithSkin( p, 'o002', -7431.8, -7961.3, 65.453, 'o002' )
    set u = BlzCreateUnitWithSkin( p, 'o002', -8365.7, -7289.7, 0.632, 'o002' )
    set u = BlzCreateUnitWithSkin( p, 'o002', -7950.2, -7094.0, 65.596, 'o002' )
    set u = BlzCreateUnitWithSkin( p, 'nmyr', -2776.5, -11225.6, 50.138, 'nmyr' )
    set u = BlzCreateUnitWithSkin( p, 'nmyr', -2645.8, -10473.0, 351.117, 'nmyr' )
    set u = BlzCreateUnitWithSkin( p, 'n00E', -6210.3, -9621.9, 222.167, 'n00E' )
    set u = BlzCreateUnitWithSkin( p, 'n00E', -6680.2, -9060.6, 17.606, 'n00E' )
    set u = BlzCreateUnitWithSkin( p, 'n00E', -6580.6, -9427.8, 353.840, 'n00E' )
endfunction

//===========================================================================
function CreateBuildingsForPlayer23 takes nothing returns nothing
    local player p = Player(23)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'hgtw', -2816.0, -1728.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -5248.0, -4352.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'h003', 320.0, 2112.0, 270.000, 'h003' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -2144.0, -3104.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -2912.0, -1248.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'e003', -2112.0, -7616.0, 270.000, 'e003' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -8640.0, -7424.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -3520.0, -3072.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -4192.0, -5024.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -4768.0, -3360.0, 270.000, 'ncb5' )
    set gg_unit_nheb_0036 = BlzCreateUnitWithSkin( p, 'nheb', 1728.0, -10368.0, 270.000, 'nheb' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -1536.0, -2368.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'n00B', -2816.0, -2176.0, 270.000, 'n00B' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -5248.0, -2624.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -4032.0, 2112.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'h004', -2368.0, -2176.0, 270.000, 'h004' )
    set u = BlzCreateUnitWithSkin( p, 'eshy', -1440.0, -8928.0, 270.000, 'eshy' )
    set u = BlzCreateUnitWithSkin( p, 'n001', -10624.0, 2816.0, 270.000, 'n001' )
    call SetUnitColor( u, ConvertPlayerColor(9) )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -5216.0, -3264.0, 180.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'h006', -7104.0, 2112.0, 270.000, 'h006' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -8320.0, -640.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -8512.0, -7296.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'h00F', -8384.0, -1024.0, 270.000, 'h00F' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -3008.0, -4160.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'o005', -8000.0, -7424.0, 270.000, 'o005' )
    set u = BlzCreateUnitWithSkin( p, 'o000', -6912.0, -9600.0, 270.000, 'o000' )
    set u = BlzCreateUnitWithSkin( p, 'o001', -8000.0, -7872.0, 270.000, 'o001' )
    set u = BlzCreateUnitWithSkin( p, 'o000', -9280.0, -7616.0, 270.000, 'o000' )
    set u = BlzCreateUnitWithSkin( p, 'h00E', 576.0, -4288.0, 270.000, 'h00E' )
    set u = BlzCreateUnitWithSkin( p, 'n00D', -6400.0, -9152.0, 270.000, 'n00D' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 1088.0, -9344.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 768.0, -9728.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'e007', -3296.0, -6880.0, 270.000, 'e007' )
    set u = BlzCreateUnitWithSkin( p, 'e007', -4000.0, -7328.0, 270.000, 'e007' )
    set u = BlzCreateUnitWithSkin( p, 'ngob', -3840.0, -7616.0, 270.000, 'ngob' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -8640.0, -7296.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -8640.0, -8000.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -2816.0, -2624.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'nntg', -3328.0, -10560.0, 270.000, 'nntg' )
    set u = BlzCreateUnitWithSkin( p, 'nntt', -2368.0, -11200.0, 270.000, 'nntt' )
    set u = BlzCreateUnitWithSkin( p, 'e007', -4640.0, -6560.0, 270.000, 'e007' )
    set u = BlzCreateUnitWithSkin( p, 'nntg', -1856.0, -11008.0, 270.000, 'nntg' )
    set u = BlzCreateUnitWithSkin( p, 'nntg', -2624.0, -11648.0, 270.000, 'nntg' )
    set u = BlzCreateUnitWithSkin( p, 'n006', -6912.0, 2944.0, 270.000, 'n006' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -1344.0, 576.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'ngob', -5184.0, -6400.0, 270.000, 'ngob' )
    set u = BlzCreateUnitWithSkin( p, 'ngob', -2432.0, -6784.0, 270.000, 'ngob' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -12192.0, 3680.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'ngob', -2240.0, -8128.0, 270.000, 'ngob' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -4160.0, 2432.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'hars', -3648.0, 2112.0, 270.000, 'hars' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 768.0, -10112.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 1536.0, -9344.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -1280.0, 3648.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -8640.0, -7872.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -7936.0, -7296.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -8064.0, -7296.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'o000', -8320.0, -6912.0, 270.000, 'o000' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -8256.0, -6784.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -8384.0, -6784.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -11232.0, 2080.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'o000', -6912.0, -8896.0, 270.000, 'o000' )
    set u = BlzCreateUnitWithSkin( p, 'h00T', -1536.0, 320.0, 270.000, 'h00T' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -10912.0, 1952.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'hshy', -9632.0, 32.0, 270.000, 'hshy' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -11296.0, 3360.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 1408.0, -9920.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'hhou', -6528.0, 256.0, 270.000, 'hhou' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -12768.0, 3168.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'h00T', -1536.0, 3840.0, 270.000, 'h00T' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -3904.0, 320.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -11296.0, 480.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'h00T', -2624.0, 2112.0, 270.000, 'h00T' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -9952.0, 2528.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'u001', -9152.0, -5248.0, 270.000, 'u001' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -10528.0, 3616.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'n000', 128.0, -4736.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -10912.0, 864.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'ugrv', -8704.0, -4672.0, 270.000, 'ugrv' )
    set u = BlzCreateUnitWithSkin( p, 'n00V', -9696.0, -4512.0, 270.000, 'n00V' )
    set u = BlzCreateUnitWithSkin( p, 'n000', 1024.0, -3840.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'nntg', -2176.0, -10432.0, 270.000, 'nntg' )
    set u = BlzCreateUnitWithSkin( p, 'hars', -3584.0, 0.0, 270.000, 'hars' )
    set u = BlzCreateUnitWithSkin( p, 'usep', -10240.0, -4928.0, 270.000, 'usep' )
    set u = BlzCreateUnitWithSkin( p, 'n000', 576.0, -5056.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -4096.0, 0.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'hars', -3584.0, 4224.0, 270.000, 'hars' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -3904.0, 3904.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -4160.0, 1792.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -4096.0, 4224.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -2304.0, 1792.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -12128.0, 2080.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'nft2', -2304.0, 2432.0, 270.000, 'nft2' )
    set u = BlzCreateUnitWithSkin( p, 'n00V', -9440.0, -3872.0, 270.000, 'n00V' )
    set u = BlzCreateUnitWithSkin( p, 'nef1', 1056.0, -11488.0, 270.000, 'nef1' )
    set u = BlzCreateUnitWithSkin( p, 'n00V', -9696.0, -4320.0, 270.000, 'n00V' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -2112.0, 2112.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -9952.0, 2208.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -11232.0, 1568.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -10080.0, 1312.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -11168.0, 3616.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', 704.0, 1728.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'uzg1', -8672.0, -5216.0, 270.000, 'uzg1' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -3008.0, -4544.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', 704.0, 2496.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -64.0, 2496.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'h00G', -64.0, 1728.0, 270.000, 'h00G' )
    set u = BlzCreateUnitWithSkin( p, 'n007', 1024.0, 960.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -10272.0, 1632.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'nef3', -480.0, -9376.0, 270.000, 'nef3' )
    set u = BlzCreateUnitWithSkin( p, 'nntg', -3200.0, -11392.0, 270.000, 'nntg' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -3744.0, -5024.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -3744.0, -3168.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'h004', -2688.0, -4224.0, 270.000, 'h004' )
    set u = BlzCreateUnitWithSkin( p, 'nntg', -2944.0, -10240.0, 270.000, 'nntg' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -3264.0, -2176.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -10208.0, 928.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'n007', 1024.0, 3264.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -384.0, 3264.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -832.0, 2816.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -2880.0, -3456.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -2496.0, -3456.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -384.0, 960.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -1536.0, -2816.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -9248.0, -5792.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -3968.0, -4992.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'h004', 0.0, -3264.0, 270.000, 'h004' )
    set u = BlzCreateUnitWithSkin( p, 'n00B', -4352.0, -3968.0, 270.000, 'n00B' )
    set u = BlzCreateUnitWithSkin( p, 'n000', -1600.0, -4672.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'h004', -4224.0, -2944.0, 270.000, 'h004' )
    set u = BlzCreateUnitWithSkin( p, 'n000', 512.0, -3712.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'n000', 0.0, -4224.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'n000', 1344.0, -4288.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'hvlt', -1920.0, -4224.0, 270.000, 'hvlt' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -3968.0, -3648.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'n000', -1344.0, -3648.0, 270.000, 'n000' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -10656.0, -5280.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -9152.0, 0.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'hlum', -7648.0, 32.0, 270.000, 'hlum' )
    set u = BlzCreateUnitWithSkin( p, 'n007', -832.0, 1408.0, 270.000, 'n007' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -7936.0, -8896.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'otrb', -7872.0, -9472.0, 270.000, 'otrb' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -12320.0, 1696.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'n00M', -10208.0, 3104.0, 270.000, 'n00M' )
    set u = BlzCreateUnitWithSkin( p, 'hhou', -6528.0, 64.0, 270.000, 'hhou' )
    set u = BlzCreateUnitWithSkin( p, 'o003', -8480.0, -7456.0, 270.000, 'o003' )
    set u = BlzCreateUnitWithSkin( p, 'o005', -8512.0, -7936.0, 270.000, 'o005' )
    set u = BlzCreateUnitWithSkin( p, 'uzg1', -9888.0, -5344.0, 270.000, 'uzg1' )
    set u = BlzCreateUnitWithSkin( p, 'uzg1', -9632.0, -4960.0, 270.000, 'uzg1' )
    set u = BlzCreateUnitWithSkin( p, 'hhou', -6528.0, -128.0, 270.000, 'hhou' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', -480.0, -9056.0, 270.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 1216.0, -10560.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'n006', -7872.0, 2112.0, 270.000, 'n006' )
    set u = BlzCreateUnitWithSkin( p, 'n006', -6912.0, 1280.0, 270.000, 'n006' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -3968.0, -4288.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -4896.0, -4128.0, 270.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -1952.0, -3104.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'n00K', 832.0, -2496.0, 270.000, 'n00K' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -8672.0, -5792.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -6272.0, -3712.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -4896.0, -3936.0, 270.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'nfv4', -1184.0, -4064.0, 180.000, 'nfv4' )
    set u = BlzCreateUnitWithSkin( p, 'nfv3', -1184.0, -4960.0, 90.000, 'nfv3' )
    set u = BlzCreateUnitWithSkin( p, 'nfv3', -1632.0, -3360.0, 180.000, 'nfv3' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -3808.0, -1248.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'n006', -7488.0, 1472.0, 270.000, 'n006' )
    set u = BlzCreateUnitWithSkin( p, 'n006', -7488.0, 2752.0, 270.000, 'n006' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -7936.0, 576.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -2720.0, -1248.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -2336.0, -1248.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -2144.0, -1248.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -1952.0, -1248.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -3616.0, -1248.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'nfv0', -1696.0, -5344.0, 90.000, 'nfv0' )
    set u = BlzCreateUnitWithSkin( p, 'nfv1', -2656.0, -5024.0, 90.000, 'nfv1' )
    set u = BlzCreateUnitWithSkin( p, 'nfv4', -1888.0, -5088.0, 90.000, 'nfv4' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -3360.0, -1376.0, 90.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -1760.0, -1248.0, 270.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -1952.0, -1632.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -2528.0, -1632.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -2336.0, -1632.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -2400.0, -2464.0, 270.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'n00V', -8480.0, -5728.0, 270.000, 'n00V' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -8416.0, -5536.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 2048.0, -9984.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'negt', -320.0, -8704.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -10112.0, -1536.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'npgf', -9248.0, -6752.0, 270.000, 'npgf' )
    set u = BlzCreateUnitWithSkin( p, 'nct2', -10208.0, -7008.0, 270.000, 'nct2' )
    set u = BlzCreateUnitWithSkin( p, 'npgf', -7712.0, -6752.0, 270.000, 'npgf' )
    set u = BlzCreateUnitWithSkin( p, 'npgf', -7136.0, -6432.0, 270.000, 'npgf' )
    set u = BlzCreateUnitWithSkin( p, 'negt', 64.0, -8320.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'negt', -192.0, -10688.0, 270.000, 'negt' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -6272.0, -4224.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -5088.0, -2336.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -4896.0, -2336.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -3872.0, -1760.0, 270.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -5664.0, -2464.0, 90.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'h004', -448.0, -3712.0, 270.000, 'h004' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -3776.0, -2496.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -4480.0, -3392.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -3552.0, -5024.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -512.0, -5632.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -3360.0, -5024.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'utod', -9088.0, -4224.0, 270.000, 'utod' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -3872.0, -1952.0, 270.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -4256.0, -2336.0, 270.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -1024.0, -5632.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -3296.0, -3424.0, 270.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'h004', -448.0, -3264.0, 270.000, 'h004' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -5664.0, -2656.0, 90.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -5664.0, -2848.0, 90.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -5664.0, -3040.0, 90.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -5280.0, -2336.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncbe', -4704.0, -3008.0, 0.000, 'ncbe' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -2400.0, -2656.0, 270.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -5248.0, -3584.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -4256.0, -2528.0, 270.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -3872.0, -3936.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -4864.0, -1280.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'ncbe', -3264.0, -2528.0, 90.000, 'ncbe' )
    set u = BlzCreateUnitWithSkin( p, 'hgtw', -4864.0, -1664.0, 270.000, 'hgtw' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -10592.0, -5472.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'ncnt', -7264.0, -5728.0, 270.000, 'ncnt' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -9632.0, -4000.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -9696.0, -5856.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'uzg1', -9056.0, -4704.0, 270.000, 'uzg1' )
    set u = BlzCreateUnitWithSkin( p, 'nnzg', -10336.0, -5600.0, 270.000, 'nnzg' )
    set u = BlzCreateUnitWithSkin( p, 'n00V', -9440.0, -5856.0, 270.000, 'n00V' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -9760.0, -672.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -1568.0, -1632.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -4576.0, -5024.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncbb', -1760.0, -1632.0, 90.000, 'ncbb' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -8320.0, -1408.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -10112.0, -1152.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'nef0', 1184.0, -9888.0, 270.000, 'nef0' )
    set u = BlzCreateUnitWithSkin( p, 'nef1', 1632.0, -9504.0, 270.000, 'nef1' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -9568.0, -672.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'nef3', 864.0, -9504.0, 270.000, 'nef3' )
    set u = BlzCreateUnitWithSkin( p, 'nef4', 1184.0, -10400.0, 270.000, 'nef4' )
    set u = BlzCreateUnitWithSkin( p, 'nefm', 1632.0, -9952.0, 270.000, 'nefm' )
    set u = BlzCreateUnitWithSkin( p, 'nef6', 160.0, -10592.0, 270.000, 'nef6' )
    set u = BlzCreateUnitWithSkin( p, 'nef0', 32.0, -10848.0, 270.000, 'nef0' )
    set u = BlzCreateUnitWithSkin( p, 'nef4', 160.0, -9248.0, 270.000, 'nef4' )
    set u = BlzCreateUnitWithSkin( p, 'ncb4', -4896.0, -3744.0, 270.000, 'ncb4' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -3296.0, -3616.0, 270.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncbe', -3296.0, -1728.0, 0.000, 'ncbe' )
    set u = BlzCreateUnitWithSkin( p, 'ncba', -4384.0, -5024.0, 270.000, 'ncba' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -5216.0, -2880.0, 180.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -5216.0, -3072.0, 180.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -3872.0, -4576.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -4064.0, -4576.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -4576.0, -4576.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -4768.0, -4576.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncbc', -5088.0, -4672.0, 90.000, 'ncbc' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -4384.0, -4576.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncbc', -4064.0, -3264.0, 90.000, 'ncbc' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -3296.0, -3808.0, 270.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -8704.0, -1024.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'ncb5', -3360.0, -1184.0, 90.000, 'ncb5' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -8832.0, -2240.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'h00X', -8448.0, -2240.0, 270.000, 'h00X' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -7584.0, -2080.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -7392.0, -2080.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'hbla', -9600.0, -1344.0, 270.000, 'hbla' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -6560.0, -736.0, 270.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -6560.0, -928.0, 270.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -7520.0, -1696.0, 90.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -6688.0, -2080.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -6880.0, -2080.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -7520.0, -1504.0, 90.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -7776.0, -800.0, 90.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -7776.0, -992.0, 90.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -6944.0, -544.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -7136.0, -544.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -7328.0, -544.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -6496.0, -2080.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -7776.0, -2080.0, 90.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -9440.0, -2080.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -9632.0, -2080.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -9824.0, -2080.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb3', -6560.0, -544.0, 270.000, 'ncb3' )
    set u = BlzCreateUnitWithSkin( p, 'ncnt', -9696.0, -7712.0, 270.000, 'ncnt' )
    set u = BlzCreateUnitWithSkin( p, 'ncnt', -13472.0, -1376.0, 270.000, 'ncnt' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -8800.0, -1760.0, 270.000, 'ncb9' )
    set u = BlzCreateUnitWithSkin( p, 'ncb9', -8608.0, -1760.0, 270.000, 'ncb9' )
endfunction

//===========================================================================
function CreateUnitsForPlayer23 takes nothing returns nothing
    local player p = Player(23)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'n002', -11759.7, 1652.1, 41.593, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -12472.1, 2884.9, 347.084, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'hpea', 1368.0, -1690.7, 93.909, 'hpea' )
    set u = BlzCreateUnitWithSkin( p, 'hhdl', 572.5, -1486.4, 50.291, 'hhdl' )
    set u = BlzCreateUnitWithSkin( p, 'hhdl', 802.3, -1580.3, 66.892, 'hhdl' )
    set u = BlzCreateUnitWithSkin( p, 'hhdl', 698.0, -1506.4, 15.002, 'hhdl' )
    set u = BlzCreateUnitWithSkin( p, 'hhdl', 573.0, -1618.5, 358.259, 'hhdl' )
    set u = BlzCreateUnitWithSkin( p, 'hpea', 1563.7, -1504.1, 243.353, 'hpea' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -11076.9, 3006.7, 298.557, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -10027.2, 2978.8, 208.045, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -10356.2, 2515.0, 173.485, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -8626.3, -261.5, 96.941, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -11039.9, 2668.7, 324.937, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -12056.1, 2753.4, 348.659, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -10297.2, 2207.8, 144.658, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'nhea', 631.0, -8792.4, 271.508, 'nhea' )
    set u = BlzCreateUnitWithSkin( p, 'nhea', 524.9, -8550.0, 305.753, 'nhea' )
    set u = BlzCreateUnitWithSkin( p, 'nhea', -51.6, -8961.0, 325.090, 'nhea' )
    set u = BlzCreateUnitWithSkin( p, 'nhea', 272.9, -8742.7, 278.034, 'nhea' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -10575.5, 2436.1, 150.197, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'n002', -10786.8, 3718.8, 271.671, 'n002' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -5428.7, -2451.3, 313.894, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -4488.8, -2492.8, 298.821, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -3981.1, -4807.9, 230.407, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -7628.3, -365.2, 96.446, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -9035.3, -873.9, 260.148, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -9443.1, -1143.9, 358.434, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -9387.6, -1677.7, 211.092, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -9188.4, -1807.3, 96.941, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -7409.9, -977.2, 45.018, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -6852.1, -1677.6, 261.631, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -7001.6, -1508.7, 304.171, 'h007' )
    set u = BlzCreateUnitWithSkin( p, 'h007', -6696.6, -1861.5, 14.969, 'h007' )
endfunction

//===========================================================================
function CreateNeutralHostile takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_AGGRESSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'nvdl', 3679.6, 3268.8, 38.420, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 3843.9, 3270.7, 211.922, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nelb', -27327.0, -9069.4, 174.670, 'nelb' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'nmsc', -19383.2, 4158.1, 307.640, 'nmsc' )
    call SetUnitState( u, UNIT_STATE_MANA, 600 )
    set u = BlzCreateUnitWithSkin( p, 'nmsc', -3745.2, -13247.7, 127.640, 'nmsc' )
    call SetUnitState( u, UNIT_STATE_MANA, 600 )
    set u = BlzCreateUnitWithSkin( p, 'nelb', 4198.1, -7.2, 354.670, 'nelb' )
    call SetUnitAcquireRange( u, 200.0 )
    set u = BlzCreateUnitWithSkin( p, 'ncen', -27294.2, 3959.0, 192.355, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncnk', -27574.5, 3918.7, 0.919, 'ncnk' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', -25612.3, 4185.1, 294.560, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'ncea', -23570.4, 4025.4, 201.339, 'ncea' )
    set u = BlzCreateUnitWithSkin( p, 'ncer', -23465.1, 3868.9, 303.976, 'ncer' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', -27555.9, 3746.0, 64.032, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'ncer', -23881.4, 3812.2, 324.411, 'ncer' )
    set u = BlzCreateUnitWithSkin( p, 'ncea', -23826.2, 3933.9, 50.327, 'ncea' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', -27399.3, 3763.8, 114.584, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', -27414.8, 4105.9, 253.164, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', -27576.4, 4151.1, 294.560, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', -25435.2, 3797.8, 114.584, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', -27632.8, 2342.8, 204.584, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', -25591.7, 3780.0, 64.032, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 2986.2, 4060.0, 354.979, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 3153.2, 3974.5, 18.095, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 3250.4, 4185.9, 92.299, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', 3048.9, 4289.6, 295.135, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', 4368.0, 4196.2, 128.841, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'nvdg', 4410.4, 3925.2, 147.705, 'nvdg' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', 4135.4, 3933.0, 19.699, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4648.6, 2467.4, 358.286, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4500.9, 2421.9, 95.254, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4769.5, 2416.0, 164.064, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4874.5, 2170.6, 77.621, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4365.0, 2152.5, 6.175, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', 4529.9, 2237.7, 67.942, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'ncnk', -25610.3, 3952.7, 0.919, 'ncnk' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', 4727.4, 2240.6, 122.380, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'uabo', -27023.1, -7100.7, 247.980, 'uabo' )
    set u = BlzCreateUnitWithSkin( p, 'ncer', 332.7, -12970.9, 123.976, 'ncer' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', 2479.8, -13287.1, 114.560, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', 2318.2, -13241.9, 73.164, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', 2197.6, -13095.0, 12.355, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncnk', 2477.9, -13054.6, 180.919, 'ncnk' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', 2459.3, -12882.0, 244.032, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', 2302.7, -12899.8, 294.584, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', 4444.0, -13253.1, 114.560, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', 4282.3, -13207.9, 73.164, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', 4161.8, -13061.0, 12.355, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncnk', 4442.1, -13020.6, 180.919, 'ncnk' )
    set u = BlzCreateUnitWithSkin( p, 'ncim', 584.4, -13109.4, 129.799, 'ncim' )
    set u = BlzCreateUnitWithSkin( p, 'ncea', 442.1, -13051.5, 21.339, 'ncea' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', 530.4, -12952.9, 193.862, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'ncea', 693.7, -13035.8, 230.327, 'ncea' )
    set u = BlzCreateUnitWithSkin( p, 'ncer', 749.0, -12914.2, 144.411, 'ncer' )
    set u = BlzCreateUnitWithSkin( p, 'ncer', 586.7, -12818.2, 152.904, 'ncer' )
    set u = BlzCreateUnitWithSkin( p, 'ncer', 409.9, -12796.4, 325.669, 'ncer' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', 4423.4, -12847.9, 244.032, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'nvdg', 4409.1, 1988.8, 0.253, 'nvdg' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 3992.2, 3927.3, 166.536, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdg', 4826.5, 2006.0, 73.105, 'nvdg' )
    set u = BlzCreateUnitWithSkin( p, 'nvde', 4619.6, 2008.4, 24.940, 'nvde' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4399.6, 2302.8, 327.139, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4862.8, 2297.6, 199.760, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4021.3, 4113.9, 166.536, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4245.0, 4286.7, 166.536, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4434.7, 4323.5, 166.536, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 2870.6, 4225.2, 354.979, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4540.0, 375.2, 235.840, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4596.6, 177.2, 81.466, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4320.5, 489.0, 148.364, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', 4154.6, 427.9, 34.608, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', 4368.3, 263.6, 25.456, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'nvdg', 4441.3, -17.8, 189.817, 'nvdg' )
    set u = BlzCreateUnitWithSkin( p, 'nvdg', 4105.1, 225.2, 28.082, 'nvdg' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -26808.5, -12345.4, 218.420, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -26972.9, -12347.3, 31.922, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nele', 3891.6, 100.5, 105.296, 'nele' )
    set u = BlzCreateUnitWithSkin( p, 'nele', 4285.6, -305.2, 191.311, 'nele' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -26115.1, -13136.6, 174.979, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -26282.1, -13051.1, 198.095, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -26379.3, -13262.5, 272.299, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', -26177.9, -13366.2, 115.135, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', -27497.0, -13272.8, 308.841, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'nvdg', -27539.3, -13001.8, 327.705, 'nvdg' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', -27264.3, -13009.6, 199.699, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -27856.9, -11543.6, 178.286, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -27664.1, -11506.2, 275.254, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -28037.9, -11508.7, 344.064, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdg', -28131.5, -10921.8, 253.105, 'nvdg' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -28119.6, -11427.1, 186.175, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', -27658.8, -11314.3, 247.942, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', -27856.3, -11317.2, 302.380, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'nvdg', -27658.0, -11086.1, 180.253, 'nvdg' )
    set u = BlzCreateUnitWithSkin( p, 'nvdg', -27955.5, -11082.6, 253.105, 'nvdg' )
    set u = BlzCreateUnitWithSkin( p, 'nvde', -27927.6, -10881.8, 204.940, 'nvde' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -27528.5, -11379.4, 147.139, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdg', -27508.1, -10829.7, 253.105, 'nvdg' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', -28041.4, -11290.3, 302.380, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'nvde', -27716.9, -10877.8, 204.940, 'nvde' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -27668.9, -9451.8, 55.840, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -27725.5, -9253.8, 261.466, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -27449.5, -9565.6, 328.364, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdl', -27283.6, -9504.5, 214.608, 'nvdl' )
    set u = BlzCreateUnitWithSkin( p, 'nvdw', -27497.3, -9340.2, 205.456, 'nvdw' )
    set u = BlzCreateUnitWithSkin( p, 'nvdg', -27570.3, -9058.8, 9.817, 'nvdg' )
    set u = BlzCreateUnitWithSkin( p, 'nvdg', -27234.1, -9301.8, 208.082, 'nvdg' )
    set u = BlzCreateUnitWithSkin( p, 'nele', -27414.6, -8771.4, 11.311, 'nele' )
    set u = BlzCreateUnitWithSkin( p, 'nele', -27020.5, -9177.1, 285.296, 'nele' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -27620.5, -5838.8, 200.781, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -27445.7, -5797.5, 316.372, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -27386.3, -6084.8, 180.764, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -26036.5, -6067.8, 11.151, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -25743.3, -6126.6, 319.196, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -25951.5, -5704.9, 21.017, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -26125.0, -5783.4, 293.783, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -26031.7, -5369.2, 200.133, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -28540.2, -5778.4, 144.958, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -28396.6, -5279.0, 137.949, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -28517.1, -4922.9, 18.996, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -28328.2, -5740.2, 240.751, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', 4266.9, -12865.7, 294.584, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -27839.2, -6758.3, 320.844, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -27863.0, -7131.8, 69.633, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -27958.7, -7313.5, 23.863, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -27424.8, -7097.3, 306.253, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -27099.5, -7414.7, 322.656, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', -27636.5, -6906.0, 332.786, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'uabo', 3797.4, -1968.4, 351.540, 'uabo' )
    call SetUnitState( u, UNIT_STATE_MANA, 200 )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 4380.5, -3393.0, 20.781, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 4205.7, -3434.3, 136.372, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'ncrb', -20229.3, 3633.1, 304.671, 'ncrb' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 4146.3, -3147.0, 0.764, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 2796.5, -3164.1, 191.151, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 2503.3, -3105.3, 139.196, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 2711.5, -3526.9, 201.018, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'n00N', 4617.9, -11340.5, 262.232, 'n00N' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', 4851.0, -11526.8, 204.560, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', 4805.8, -11688.4, 163.164, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', 4659.0, -11808.9, 102.355, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncnk', 4618.6, -11528.7, 270.919, 'ncnk' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', 4445.9, -11547.3, 334.032, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', 4463.7, -11703.9, 24.584, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', -25450.6, 4139.9, 253.164, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncim', -23660.2, 3854.4, 309.799, 'ncim' )
    set u = BlzCreateUnitWithSkin( p, 'n00N', -27787.0, 1979.4, 82.232, 'n00N' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', -28020.2, 2165.7, 24.560, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'ncks', -27615.0, 2186.2, 154.032, 'ncks' )
    set u = BlzCreateUnitWithSkin( p, 'ncnk', -27787.7, 2167.6, 90.919, 'ncnk' )
    set u = BlzCreateUnitWithSkin( p, 'ncer', -23609.7, 3694.0, 332.904, 'ncer' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', -27975.0, 2327.3, 343.164, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'ncen', -27828.1, 2447.9, 282.356, 'ncen' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 2885.0, -3448.4, 113.783, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 2791.7, -3862.6, 20.133, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 5300.2, -3453.4, 324.958, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 5156.6, -3952.9, 317.949, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 5277.1, -4308.9, 198.996, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 5088.1, -3491.6, 60.751, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 4599.2, -2473.6, 140.844, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 4623.0, -2100.0, 249.633, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 4718.7, -1918.4, 203.863, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 4184.8, -2134.5, 126.253, 'nzom' )
    set u = BlzCreateUnitWithSkin( p, 'nzom', 4396.5, -2325.9, 152.786, 'nzom' )
endfunction

//===========================================================================
function CreateNeutralPassiveBuildings takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set gg_unit_n00C_0082 = BlzCreateUnitWithSkin( p, 'n00C', -8768.0, -13696.0, 270.000, 'n00C' )
    call SetUnitColor( gg_unit_n00C_0082, ConvertPlayerColor(0) )
endfunction

//===========================================================================
function CreateNeutralPassive takes nothing returns nothing
    local player p = Player(PLAYER_NEUTRAL_PASSIVE)
    local unit u
    local integer unitID
    local trigger t
    local real life

    set u = BlzCreateUnitWithSkin( p, 'nrac', -14125.5, -5730.9, 318.800, 'nrac' )
    set u = BlzCreateUnitWithSkin( p, 'ncrb', -20080.3, 4294.6, 293.146, 'ncrb' )
    set u = BlzCreateUnitWithSkin( p, 'ncrb', -19840.0, 4310.1, 166.646, 'ncrb' )
    set u = BlzCreateUnitWithSkin( p, 'ncrb', -19412.5, 3737.9, 132.345, 'ncrb' )
    set u = BlzCreateUnitWithSkin( p, 'ncrb', -21714.6, 4427.8, 32.751, 'ncrb' )
    set u = BlzCreateUnitWithSkin( p, 'nhmc', -19774.7, 3722.7, 268.547, 'nhmc' )
    set u = BlzCreateUnitWithSkin( p, 'nhmc', -16214.9, 3292.9, 44.672, 'nhmc' )
    set u = BlzCreateUnitWithSkin( p, 'nhmc', -16322.2, 2508.8, 103.044, 'nhmc' )
    set u = BlzCreateUnitWithSkin( p, 'nder', -18610.1, -2856.3, 237.081, 'nder' )
    set u = BlzCreateUnitWithSkin( p, 'nder', -19546.4, -1550.6, 230.017, 'nder' )
    set u = BlzCreateUnitWithSkin( p, 'nder', -21003.4, -643.4, 351.617, 'nder' )
    set u = BlzCreateUnitWithSkin( p, 'necr', -20936.3, -2238.3, 109.955, 'necr' )
    set u = BlzCreateUnitWithSkin( p, 'necr', -17698.5, -1546.3, 64.294, 'necr' )
    set u = BlzCreateUnitWithSkin( p, 'nrac', -19377.0, -2374.4, 105.604, 'nrac' )
    set u = BlzCreateUnitWithSkin( p, 'ncrb', -3048.2, -13384.3, 113.146, 'ncrb' )
    set u = BlzCreateUnitWithSkin( p, 'ncrb', -2899.2, -12722.7, 124.671, 'ncrb' )
    set u = BlzCreateUnitWithSkin( p, 'ncrb', -3288.5, -13399.8, 346.646, 'ncrb' )
    set u = BlzCreateUnitWithSkin( p, 'ncrb', -3716.0, -12827.5, 312.345, 'ncrb' )
    set u = BlzCreateUnitWithSkin( p, 'ncrb', -1413.8, -13517.4, 212.751, 'ncrb' )
    set u = BlzCreateUnitWithSkin( p, 'nhmc', -3353.7, -12812.3, 88.547, 'nhmc' )
endfunction

//===========================================================================
function CreatePlayerBuildings takes nothing returns nothing
    call CreateBuildingsForPlayer0(  )
    call CreateBuildingsForPlayer1(  )
    call CreateBuildingsForPlayer2(  )
    call CreateBuildingsForPlayer3(  )
    call CreateBuildingsForPlayer4(  )
    call CreateBuildingsForPlayer5(  )
    call CreateBuildingsForPlayer6(  )
    call CreateBuildingsForPlayer7(  )
    call CreateBuildingsForPlayer8(  )
    call CreateBuildingsForPlayer9(  )
    call CreateBuildingsForPlayer10(  )
    call CreateBuildingsForPlayer11(  )
    call CreateBuildingsForPlayer20(  )
    call CreateBuildingsForPlayer23(  )
endfunction

//===========================================================================
function CreatePlayerUnits takes nothing returns nothing
    call CreateUnitsForPlayer18(  )
    call CreateUnitsForPlayer19(  )
    call CreateUnitsForPlayer20(  )
    call CreateUnitsForPlayer21(  )
    call CreateUnitsForPlayer23(  )
endfunction

//===========================================================================
function CreateAllUnits takes nothing returns nothing
    call CreateNeutralPassiveBuildings(  )
    call CreatePlayerBuildings(  )
    call CreateNeutralHostile(  )
    call CreateNeutralPassive(  )
    call CreatePlayerUnits(  )
endfunction

//***************************************************************************
//*
//*  Regions
//*
//***************************************************************************

function CreateRegions takes nothing returns nothing
    local weathereffect we

    set gg_rct_Left_Start = Rect( -24128.0, -8032.0, -23584.0, -3456.0 )
    set gg_rct_Left_Hero = Rect( -24800.0, -5600.0, -22912.0, -3744.0 )
    set gg_rct_Left_Forward_Camp = Rect( -16608.0, -9504.0, -13728.0, -7104.0 )
    set gg_rct_Camp_Top = Rect( -11968.0, 800.0, -9984.0, 4448.0 )
    set gg_rct_Left_Tree = Rect( -21664.0, -2560.0, -19584.0, -544.0 )
    set we = AddWeatherEffect( gg_rct_Left_Tree, 'LRma' )
    call EnableWeatherEffect( we, true )
    set gg_rct_Left_Workshop = Rect( -16192.0, -12224.0, -15360.0, -10208.0 )
    set gg_rct_Left_Arcane = Rect( -24640.0, -12288.0, -22368.0, -10080.0 )
    set gg_rct_Right_Hero = Rect( -256.0, -5408.0, 1664.0, -3424.0 )
    set gg_rct_Right_Start = Rect( 320.0, -5664.0, 928.0, -1184.0 )
    set gg_rct_Right_Tree = Rect( -3552.0, -8256.0, -1504.0, -6528.0 )
    set gg_rct_Right_Arcane = Rect( -832.0, 960.0, 1440.0, 3168.0 )
    set gg_rct_Right_Workshop = Rect( -7776.0, 1088.0, -6944.0, 3072.0 )
    set gg_rct_Camp_Bottom = Rect( -13088.0, -13536.0, -11136.0, -9888.0 )
    set gg_rct_Right_Forward = Rect( -9568.0, -2080.0, -6496.0, 448.0 )
    set gg_rct_Left_Orc = Rect( -15360.0, -2208.0, -14304.0, -992.0 )
    set gg_rct_Right_Orc = Rect( -8864.0, -8160.0, -7808.0, -7008.0 )
    set gg_rct_Center_Events = Rect( -12224.0, -5184.0, -10944.0, -3904.0 )
    set gg_rct_Furbolg_Left = Rect( -16800.0, -224.0, -16224.0, 448.0 )
    set gg_rct_Furbolg_Right = Rect( -6944.0, -9536.0, -6432.0, -8864.0 )
    set gg_rct_Left_Start_Bottom = Rect( -23616.0, -13760.0, -23360.0, -8576.0 )
    set gg_rct_Left_Start_Top = Rect( -23296.0, -2400.0, -22816.0, 2336.0 )
    set gg_rct_Right_Start_Top = Rect( 192.0, -224.0, 480.0, 4544.0 )
    set gg_rct_Big_Bottom_Left = Rect( -29248.0, -14848.0, -15648.0, -8544.0 )
    set gg_rct_Big_Middle_Left = Rect( -28864.0, -8576.0, -15648.0, -3168.0 )
    set gg_rct_Big_Top_Left = Rect( -29248.0, -3200.0, -15648.0, 5472.0 )
    set gg_rct_Left_Castle = Rect( -24800.0, -4320.0, -24224.0, -3744.0 )
    set gg_rct_Left_City = Rect( -21280.0, -7776.0, -18656.0, -6112.0 )
    set gg_rct_Right_City = Rect( -4608.0, -3008.0, -1824.0, -1344.0 )
    set gg_rct_Right_Castle = Rect( 992.0, -5440.0, 1696.0, -4608.0 )
    set gg_rct_Left_High_Elves = Rect( -25088.0, -864.0, -22752.0, 1600.0 )
    set gg_rct_Left_Shipyard = Rect( -21952.0, 576.0, -21344.0, 1184.0 )
    set gg_rct_Right_Shipyard = Rect( -1824.0, -10208.0, -1312.0, -9696.0 )
    set gg_rct_Right_Start_Bottom = Rect( -416.0, -11456.0, 96.0, -6784.0 )
    set gg_rct_Right_High_Elves = Rect( -320.0, -10752.0, 1792.0, -8160.0 )
    set gg_rct_Naga_Right = Rect( -3520.0, -12000.0, -2048.0, -10144.0 )
    set gg_rct_Naga_Left = Rect( -21024.0, 1152.0, -19648.0, 3008.0 )
    set gg_rct_Murloc_Left = Rect( -19872.0, 3744.0, -19488.0, 4128.0 )
    set gg_rct_Murloc_Right = Rect( -3744.0, -13280.0, -3264.0, -12768.0 )
    set gg_rct_Left_Elemental_Start = Rect( -27712.0, -9376.0, -27072.0, -8736.0 )
    set gg_rct_Front_Town_Left = Rect( -19712.0, -6816.0, -17440.0, -3968.0 )
    set gg_rct_City_Elves_Left = Rect( -21856.0, -5600.0, -20192.0, -4000.0 )
    set gg_rct_Blacksmith_Left = Rect( -24640.0, -7232.0, -23488.0, -6176.0 )
    set gg_rct_Front_City_Right = Rect( -5504.0, -4960.0, -3552.0, -2400.0 )
    set gg_rct_City_Elves_Right = Rect( -3040.0, -4992.0, -1312.0, -3392.0 )
    set gg_rct_Blacksmith_Right = Rect( 320.0, -2912.0, 1504.0, -1856.0 )
    set gg_rct_Shipyard_End_Right = Rect( -12256.0, -4928.0, -11840.0, -4640.0 )
    set gg_rct_Shipyard_End_Left = Rect( -11392.0, -4480.0, -10976.0, -4192.0 )
    set gg_rct_Arcane_Hero_Right = Rect( -4256.0, 1536.0, -3552.0, 2752.0 )
    set gg_rct_Arcane_Hero_Left = Rect( -19712.0, -11712.0, -18848.0, -10624.0 )
    set gg_rct_Right_Elemental_Start = Rect( 4096.0, -192.0, 4608.0, 448.0 )
    set gg_rct_Arcane_Creep_Gate_Left = Rect( -28928.0, -9472.0, -28512.0, -8544.0 )
    set gg_rct_Arcane_Creep_Gate_Right = Rect( -4928.0, 4704.0, -4512.0, 5632.0 )
    set gg_rct_Murloc_Gate_Left = Rect( -18432.0, 3648.0, -17760.0, 4416.0 )
    set gg_rct_Murloc_Gate_Right = Rect( -5408.0, -13536.0, -4736.0, -12768.0 )
    set gg_rct_Big_Top_Right = Rect( -7520.0, -576.0, 5856.0, 5632.0 )
    set gg_rct_Big_Middle_Right = Rect( -7520.0, -5920.0, 5824.0, -544.0 )
    set gg_rct_Big_Bottom_Right = Rect( -7520.0, -14656.0, 7040.0, -5888.0 )
    set gg_rct_Big_Bottom_Left_Center = Rect( -15680.0, -14848.0, -11552.0, -6944.0 )
    set gg_rct_Big_Bottom_Right_Center = Rect( -11584.0, -14688.0, -7488.0, -5888.0 )
    set gg_rct_Big_Top_Right_Center = Rect( -11584.0, -2144.0, -7488.0, 4992.0 )
    set gg_rct_Big_Top_Left_Center = Rect( -15680.0, -3200.0, -11552.0, 4992.0 )
    set gg_rct_Big_Middle_Right_Center = Rect( -11584.0, -5920.0, -7488.0, -2112.0 )
    set gg_rct_Big_Middle_Left_Center = Rect( -15680.0, -6976.0, -11552.0, -3168.0 )
    set gg_rct_Aspect_of_Forest_Left = Rect( -28096.0, 2016.0, -27552.0, 2464.0 )
    set gg_rct_Aspect_of_Forest_Left_Gate = Rect( -25792.0, -32.0, -25472.0, 736.0 )
    set gg_rct_Aspect_of_Forest_Right = Rect( 4384.0, -11648.0, 4928.0, -11200.0 )
    set gg_rct_Aspect_of_Forest_Right_Gate = Rect( 2304.0, -9856.0, 2592.0, -9056.0 )
    set gg_rct_Arcane_Left_Top = Rect( -19808.0, -9728.0, -18816.0, -8832.0 )
    set gg_rct_Arcane_Left_Bottom = Rect( -19840.0, -13568.0, -18816.0, -12672.0 )
    set gg_rct_Arcane_Right_Top = Rect( -4224.0, -288.0, -3328.0, 608.0 )
    set gg_rct_Arcane_Right_Bottom = Rect( -4224.0, 3584.0, -3328.0, 4480.0 )
    set gg_rct_Zombie_End_Left = Rect( -27200.0, -7392.0, -26592.0, -6848.0 )
    set gg_rct_Zombie_End_Right = Rect( 3424.0, -2272.0, 4032.0, -1728.0 )
    set gg_rct_Death_Gate_Left = Rect( -25408.0, -7456.0, -25152.0, -6688.0 )
    set gg_rct_Death_Gate_Right = Rect( 1984.0, -2464.0, 2240.0, -1696.0 )
    set gg_rct_Region_079 = Rect( 2272.0, -6368.0, 5952.0, -800.0 )
    set we = AddWeatherEffect( gg_rct_Region_079, 'FDwl' )
    call EnableWeatherEffect( we, true )
    set gg_rct_Region_079_Copy = Rect( -29120.0, -8192.0, -25440.0, -2624.0 )
    set we = AddWeatherEffect( gg_rct_Region_079_Copy, 'FDwl' )
    call EnableWeatherEffect( we, true )
    set gg_rct_Elf_Base_Right = Rect( 1280.0, -10720.0, 2016.0, -9824.0 )
    set gg_rct_Elf_Base_Left = Rect( -25216.0, 736.0, -24480.0, 1632.0 )
    set gg_rct_Undead_Right = Rect( -9760.0, -5824.0, -8512.0, -4032.0 )
    set gg_rct_Undead_Left = Rect( -14528.0, -5120.0, -13280.0, -3328.0 )
    set gg_rct_Human_Shipyard_Left = Rect( -13728.0, -9280.0, -13152.0, -8896.0 )
    set gg_rct_Human_Shipyard_Right = Rect( -10016.0, -128.0, -9440.0, 256.0 )
    set gg_rct_Right_Everything = Rect( 672.0, -11488.0, 960.0, 4480.0 )
    set gg_rct_Left_Everything = Rect( -23968.0, -13760.0, -23648.0, 2176.0 )
endfunction

//***************************************************************************
//*
//*  Cameras
//*
//***************************************************************************

function CreateCameras takes nothing returns nothing

    set gg_cam_Castle_1 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Castle_1, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_1, CAMERA_FIELD_ROTATION, 115.6, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_1, CAMERA_FIELD_ANGLE_OF_ATTACK, 325.9, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_1, CAMERA_FIELD_TARGET_DISTANCE, 2007.6, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_1, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_1, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_1, CAMERA_FIELD_FARZ, 10000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_1, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_1, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_1, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_1, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Castle_1, -20121.5, -1144.1, 0.0 )

    set gg_cam_Castle_2 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Castle_2, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_2, CAMERA_FIELD_ROTATION, 28.5, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_2, CAMERA_FIELD_ANGLE_OF_ATTACK, 325.7, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_2, CAMERA_FIELD_TARGET_DISTANCE, 2196.2, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_2, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_2, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_2, CAMERA_FIELD_FARZ, 10000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_2, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_2, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_2, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_2, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Castle_2, 1128.8, -4133.0, 0.0 )

    set gg_cam_Castle_3 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Castle_3, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_3, CAMERA_FIELD_ROTATION, 35.4, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_3, CAMERA_FIELD_ANGLE_OF_ATTACK, 330.5, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_3, CAMERA_FIELD_TARGET_DISTANCE, 1815.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_3, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_3, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_3, CAMERA_FIELD_FARZ, 9090.9, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_3, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_3, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_3, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_3, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Castle_3, -2875.8, -7283.0, 0.0 )

    set gg_cam_Castle_4 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Castle_4, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_4, CAMERA_FIELD_ROTATION, 53.2, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_4, CAMERA_FIELD_ANGLE_OF_ATTACK, 327.3, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_4, CAMERA_FIELD_TARGET_DISTANCE, 2923.1, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_4, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_4, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_4, CAMERA_FIELD_FARZ, 10000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_4, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_4, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_4, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Castle_4, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Castle_4, -20664.0, -9269.2, 0.0 )

    set gg_cam_Camera_005 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_ROTATION, 132.5, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_ANGLE_OF_ATTACK, 328.2, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_TARGET_DISTANCE, 1996.5, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_FARZ, 10000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_005, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_005, -22670.8, -5712.4, 0.0 )

    set gg_cam_Camera_006 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_ROTATION, 145.8, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_ANGLE_OF_ATTACK, 4.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_TARGET_DISTANCE, 3536.9, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_FARZ, 10000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_006, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_006, -24687.4, 634.1, 0.0 )

    set gg_cam_Camera_007 = CreateCameraSetup(  )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_ZOFFSET, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_ROTATION, 108.8, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_ANGLE_OF_ATTACK, 350.3, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_TARGET_DISTANCE, 3002.1, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_ROLL, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_FIELD_OF_VIEW, 70.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_FARZ, 10000.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_NEARZ, 16.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_LOCAL_PITCH, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_LOCAL_YAW, 0.0, 0.0 )
    call CameraSetupSetField( gg_cam_Camera_007, CAMERA_FIELD_LOCAL_ROLL, 0.0, 0.0 )
    call CameraSetupSetDestPosition( gg_cam_Camera_007, -24871.4, 1100.2, 0.0 )

endfunction

//***************************************************************************
//*
//*  Triggers
//*
//***************************************************************************

//===========================================================================
// Trigger: FUNC Calculate Level Factor
//===========================================================================
function Trig_FUNC_Calculate_Level_Factor_Func002Func001C takes nothing returns boolean
    if ( not ( udg_CALC_LOOP > 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_FUNC_Calculate_Level_Factor_Actions takes nothing returns nothing
    set udg_CALC_RESULT = udg_CALC_Base
    set udg_CALC_LOOP = 1
    loop
        exitwhen udg_CALC_LOOP > udg_CALC_ITERATIONS
        if ( Trig_FUNC_Calculate_Level_Factor_Func002Func001C() ) then
            set udg_CALC_RESULT = ( ( udg_CALC_RESULT * udg_CALC_Previous_Value ) + ( 0.00 + ( ( udg_CALC_Level_Factor * I2R(( udg_CALC_LOOP - 1 )) ) + udg_CALC_Constant ) ) )
        else
        endif
        set udg_CALC_LOOP = udg_CALC_LOOP + 1
    endloop
endfunction

//===========================================================================
function InitTrig_FUNC_Calculate_Level_Factor takes nothing returns nothing
    set gg_trg_FUNC_Calculate_Level_Factor = CreateTrigger(  )
    call TriggerAddAction( gg_trg_FUNC_Calculate_Level_Factor, function Trig_FUNC_Calculate_Level_Factor_Actions )
endfunction

//===========================================================================
// Trigger: testing
//===========================================================================
function Trig_testing_Conditions takes nothing returns boolean
    if ( not ( IsUnitIllusionBJ(GetTriggerUnit()) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_testing_Actions takes nothing returns nothing
    call AddSpecialEffectTargetUnitBJ( "overhead", GetTriggerUnit(), "Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
endfunction

//===========================================================================
function InitTrig_testing takes nothing returns nothing
    set gg_trg_testing = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_testing, Condition( function Trig_testing_Conditions ) )
    call TriggerAddAction( gg_trg_testing, function Trig_testing_Actions )
endfunction

//===========================================================================
// Trigger: Open Gate Right Murloc
//===========================================================================
function Trig_Open_Gate_Right_Murloc_Conditions takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_Big_Bottom_Right, GetDyingUnit()) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'nmsc' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Open_Gate_Right_Murloc_Func001002 takes nothing returns nothing
    call ModifyGateBJ( bj_GATEOPERATION_OPEN, GetEnumDestructable() )
endfunction

function Trig_Open_Gate_Right_Murloc_Actions takes nothing returns nothing
    call EnumDestructablesInRectAll( gg_rct_Murloc_Gate_Right, function Trig_Open_Gate_Right_Murloc_Func001002 )
endfunction

//===========================================================================
function InitTrig_Open_Gate_Right_Murloc takes nothing returns nothing
    set gg_trg_Open_Gate_Right_Murloc = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Open_Gate_Right_Murloc, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Open_Gate_Right_Murloc, Condition( function Trig_Open_Gate_Right_Murloc_Conditions ) )
    call TriggerAddAction( gg_trg_Open_Gate_Right_Murloc, function Trig_Open_Gate_Right_Murloc_Actions )
endfunction

//===========================================================================
// Trigger: Open Gate Left Murloc
//===========================================================================
function Trig_Open_Gate_Left_Murloc_Conditions takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_Big_Top_Left, GetDyingUnit()) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'nmsc' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Open_Gate_Left_Murloc_Func001002 takes nothing returns nothing
    call ModifyGateBJ( bj_GATEOPERATION_OPEN, GetEnumDestructable() )
endfunction

function Trig_Open_Gate_Left_Murloc_Actions takes nothing returns nothing
    call EnumDestructablesInRectAll( gg_rct_Murloc_Gate_Left, function Trig_Open_Gate_Left_Murloc_Func001002 )
endfunction

//===========================================================================
function InitTrig_Open_Gate_Left_Murloc takes nothing returns nothing
    set gg_trg_Open_Gate_Left_Murloc = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Open_Gate_Left_Murloc, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Open_Gate_Left_Murloc, Condition( function Trig_Open_Gate_Left_Murloc_Conditions ) )
    call TriggerAddAction( gg_trg_Open_Gate_Left_Murloc, function Trig_Open_Gate_Left_Murloc_Actions )
endfunction

//===========================================================================
// Trigger: Open Gate Right Aspect of Death
//===========================================================================
function Trig_Open_Gate_Right_Aspect_of_Death_Conditions takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_Big_Middle_Right, GetDyingUnit()) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'uabo' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Open_Gate_Right_Aspect_of_Death_Func001002 takes nothing returns nothing
    call ModifyGateBJ( bj_GATEOPERATION_OPEN, GetEnumDestructable() )
endfunction

function Trig_Open_Gate_Right_Aspect_of_Death_Actions takes nothing returns nothing
    call EnumDestructablesInRectAll( gg_rct_Death_Gate_Right, function Trig_Open_Gate_Right_Aspect_of_Death_Func001002 )
endfunction

//===========================================================================
function InitTrig_Open_Gate_Right_Aspect_of_Death takes nothing returns nothing
    set gg_trg_Open_Gate_Right_Aspect_of_Death = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Open_Gate_Right_Aspect_of_Death, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Open_Gate_Right_Aspect_of_Death, Condition( function Trig_Open_Gate_Right_Aspect_of_Death_Conditions ) )
    call TriggerAddAction( gg_trg_Open_Gate_Right_Aspect_of_Death, function Trig_Open_Gate_Right_Aspect_of_Death_Actions )
endfunction

//===========================================================================
// Trigger: Open Gate Left Aspect of Death
//===========================================================================
function Trig_Open_Gate_Left_Aspect_of_Death_Conditions takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_Big_Middle_Left, GetDyingUnit()) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'uabo' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Open_Gate_Left_Aspect_of_Death_Func001002 takes nothing returns nothing
    call ModifyGateBJ( bj_GATEOPERATION_OPEN, GetEnumDestructable() )
endfunction

function Trig_Open_Gate_Left_Aspect_of_Death_Actions takes nothing returns nothing
    call EnumDestructablesInRectAll( gg_rct_Death_Gate_Left, function Trig_Open_Gate_Left_Aspect_of_Death_Func001002 )
endfunction

//===========================================================================
function InitTrig_Open_Gate_Left_Aspect_of_Death takes nothing returns nothing
    set gg_trg_Open_Gate_Left_Aspect_of_Death = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Open_Gate_Left_Aspect_of_Death, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Open_Gate_Left_Aspect_of_Death, Condition( function Trig_Open_Gate_Left_Aspect_of_Death_Conditions ) )
    call TriggerAddAction( gg_trg_Open_Gate_Left_Aspect_of_Death, function Trig_Open_Gate_Left_Aspect_of_Death_Actions )
endfunction

//===========================================================================
// Trigger: Open Gate Right Aspect of Air
//===========================================================================
function Trig_Open_Gate_Right_Aspect_of_Air_Conditions takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_Big_Top_Right, GetDyingUnit()) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'nelb' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Open_Gate_Right_Aspect_of_Air_Func001002 takes nothing returns nothing
    call ModifyGateBJ( bj_GATEOPERATION_OPEN, GetEnumDestructable() )
endfunction

function Trig_Open_Gate_Right_Aspect_of_Air_Actions takes nothing returns nothing
    call EnumDestructablesInRectAll( gg_rct_Arcane_Creep_Gate_Right, function Trig_Open_Gate_Right_Aspect_of_Air_Func001002 )
endfunction

//===========================================================================
function InitTrig_Open_Gate_Right_Aspect_of_Air takes nothing returns nothing
    set gg_trg_Open_Gate_Right_Aspect_of_Air = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Open_Gate_Right_Aspect_of_Air, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Open_Gate_Right_Aspect_of_Air, Condition( function Trig_Open_Gate_Right_Aspect_of_Air_Conditions ) )
    call TriggerAddAction( gg_trg_Open_Gate_Right_Aspect_of_Air, function Trig_Open_Gate_Right_Aspect_of_Air_Actions )
endfunction

//===========================================================================
// Trigger: Open Gate Left Aspect of Forest
//===========================================================================
function Trig_Open_Gate_Left_Aspect_of_Forest_Conditions takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_Big_Top_Left, GetDyingUnit()) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'n00N' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Open_Gate_Left_Aspect_of_Forest_Func001002 takes nothing returns nothing
    call ModifyGateBJ( bj_GATEOPERATION_OPEN, GetEnumDestructable() )
endfunction

function Trig_Open_Gate_Left_Aspect_of_Forest_Actions takes nothing returns nothing
    call EnumDestructablesInRectAll( gg_rct_Aspect_of_Forest_Left_Gate, function Trig_Open_Gate_Left_Aspect_of_Forest_Func001002 )
endfunction

//===========================================================================
function InitTrig_Open_Gate_Left_Aspect_of_Forest takes nothing returns nothing
    set gg_trg_Open_Gate_Left_Aspect_of_Forest = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Open_Gate_Left_Aspect_of_Forest, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Open_Gate_Left_Aspect_of_Forest, Condition( function Trig_Open_Gate_Left_Aspect_of_Forest_Conditions ) )
    call TriggerAddAction( gg_trg_Open_Gate_Left_Aspect_of_Forest, function Trig_Open_Gate_Left_Aspect_of_Forest_Actions )
endfunction

//===========================================================================
// Trigger: Open Gate Right Aspect of Forest
//===========================================================================
function Trig_Open_Gate_Right_Aspect_of_Forest_Conditions takes nothing returns boolean
    if ( not ( RectContainsUnit(gg_rct_Big_Bottom_Right, GetDyingUnit()) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'n00N' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Open_Gate_Right_Aspect_of_Forest_Func001002 takes nothing returns nothing
    call ModifyGateBJ( bj_GATEOPERATION_OPEN, GetEnumDestructable() )
endfunction

function Trig_Open_Gate_Right_Aspect_of_Forest_Actions takes nothing returns nothing
    call EnumDestructablesInRectAll( gg_rct_Aspect_of_Forest_Right_Gate, function Trig_Open_Gate_Right_Aspect_of_Forest_Func001002 )
endfunction

//===========================================================================
function InitTrig_Open_Gate_Right_Aspect_of_Forest takes nothing returns nothing
    set gg_trg_Open_Gate_Right_Aspect_of_Forest = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Open_Gate_Right_Aspect_of_Forest, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Open_Gate_Right_Aspect_of_Forest, Condition( function Trig_Open_Gate_Right_Aspect_of_Forest_Conditions ) )
    call TriggerAddAction( gg_trg_Open_Gate_Right_Aspect_of_Forest, function Trig_Open_Gate_Right_Aspect_of_Forest_Actions )
endfunction

//===========================================================================
// Trigger: Creep Dies Init
//===========================================================================
function Trig_Creep_Dies_Init_Func001C takes nothing returns boolean
    if ( ( GetUnitTypeId(GetDyingUnit()) == 'nmsc' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetDyingUnit()) == 'nelb' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetDyingUnit()) == 'n00N' ) ) then
        return true
    endif
    if ( ( GetUnitTypeId(GetDyingUnit()) == 'uabo' ) ) then
        return true
    endif
    return false
endfunction

function Trig_Creep_Dies_Init_Conditions takes nothing returns boolean
    if ( not Trig_Creep_Dies_Init_Func001C() ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetDyingUnit()) == Player(PLAYER_NEUTRAL_AGGRESSIVE) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Dies_Init_Func003C takes nothing returns boolean
    if ( not ( IsUnitAlly(GetKillingUnitBJ(), ForcePickRandomPlayer(udg_PLAYERGRPallied)) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Dies_Init_Func004Func002Func001C takes nothing returns boolean
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Left, GetDyingUnit()) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Left_Center, GetDyingUnit()) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Right_Center, GetDyingUnit()) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Right, GetDyingUnit()) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Creep_Dies_Init_Func004Func002C takes nothing returns boolean
    if ( not Trig_Creep_Dies_Init_Func004Func002Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Dies_Init_Func004C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'nmsc' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Dies_Init_Func005Func003Func001C takes nothing returns boolean
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Left, GetDyingUnit()) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Left_Center, GetDyingUnit()) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Right_Center, GetDyingUnit()) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Right, GetDyingUnit()) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Creep_Dies_Init_Func005Func003C takes nothing returns boolean
    if ( not Trig_Creep_Dies_Init_Func005Func003Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Dies_Init_Func005C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'nelb' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Dies_Init_Func006Func003Func001C takes nothing returns boolean
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Left, GetDyingUnit()) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Creep_Dies_Init_Func006Func003C takes nothing returns boolean
    if ( not Trig_Creep_Dies_Init_Func006Func003Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Dies_Init_Func006C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'uabo' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Dies_Init_Func007Func002Func001C takes nothing returns boolean
    if ( ( RectContainsUnit(gg_rct_Big_Top_Left, GetDyingUnit()) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Creep_Dies_Init_Func007Func002C takes nothing returns boolean
    if ( not Trig_Creep_Dies_Init_Func007Func002Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Dies_Init_Func007C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'n00N' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Dies_Init_Func009C takes nothing returns boolean
    if ( not ( udg_Creep_Team[udg_Creep_Index] == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Dies_Init_Actions takes nothing returns nothing
    set udg_Creep_Index = ( udg_Creep_Index + 1 )
    if ( Trig_Creep_Dies_Init_Func003C() ) then
        set udg_Creep_Team[udg_Creep_Index] = 1
    else
        set udg_Creep_Team[udg_Creep_Index] = 2
    endif
    if ( Trig_Creep_Dies_Init_Func004C() ) then
        set udg_Creep_Unit_Type[udg_Creep_Index] = GetUnitTypeId(GetDyingUnit())
        if ( Trig_Creep_Dies_Init_Func004Func002C() ) then
            set udg_Creep_Start[udg_Creep_Index] = gg_rct_Murloc_Right
        else
            set udg_Creep_Start[udg_Creep_Index] = gg_rct_Murloc_Left
        endif
    else
    endif
    if ( Trig_Creep_Dies_Init_Func005C() ) then
        set udg_Creep_Unit_Type[udg_Creep_Index] = GetUnitTypeId(GetDyingUnit())
        if ( Trig_Creep_Dies_Init_Func005Func003C() ) then
            set udg_Creep_Start[udg_Creep_Index] = gg_rct_Left_Elemental_Start
        else
            set udg_Creep_Start[udg_Creep_Index] = gg_rct_Right_Elemental_Start
        endif
    else
    endif
    if ( Trig_Creep_Dies_Init_Func006C() ) then
        set udg_Creep_Unit_Type[udg_Creep_Index] = GetUnitTypeId(GetDyingUnit())
        if ( Trig_Creep_Dies_Init_Func006Func003C() ) then
            set udg_Creep_Start[udg_Creep_Index] = gg_rct_Zombie_End_Left
        else
            set udg_Creep_Start[udg_Creep_Index] = gg_rct_Zombie_End_Right
        endif
    else
    endif
    if ( Trig_Creep_Dies_Init_Func007C() ) then
        set udg_Creep_Unit_Type[udg_Creep_Index] = GetUnitTypeId(GetDyingUnit())
        if ( Trig_Creep_Dies_Init_Func007Func002C() ) then
            set udg_Creep_Start[udg_Creep_Index] = gg_rct_Aspect_of_Forest_Left
        else
            set udg_Creep_Start[udg_Creep_Index] = gg_rct_Aspect_of_Forest_Right
        endif
    else
    endif
    set udg_TEMP_Pos2 = GetRectCenter(udg_Creep_Start[udg_Creep_Index])
    if ( Trig_Creep_Dies_Init_Func009C() ) then
        set udg_TEMP_Player = ForcePickRandomPlayer(udg_PLAYERGRPallied)
    else
        set udg_TEMP_Player = ForcePickRandomPlayer(udg_PLAYERGRPfederation)
    endif
    call CreateNUnitsAtLoc( 1, udg_Creep_Unit_Type[udg_Creep_Index], udg_TEMP_Player, udg_TEMP_Pos2, bj_UNIT_FACING )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
    set udg_Creep_Unit[udg_Creep_Index] = GetLastCreatedUnit()
    set udg_TEMP_Unit = GetLastCreatedUnit()
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
    call TriggerExecute( gg_trg_FUNC_Move_Creeps )
    call EnableTrigger( gg_trg_Creep_Revive_Count )
endfunction

//===========================================================================
function InitTrig_Creep_Dies_Init takes nothing returns nothing
    set gg_trg_Creep_Dies_Init = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Creep_Dies_Init, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Creep_Dies_Init, Condition( function Trig_Creep_Dies_Init_Conditions ) )
    call TriggerAddAction( gg_trg_Creep_Dies_Init, function Trig_Creep_Dies_Init_Actions )
endfunction

//===========================================================================
// Trigger: Creep Revive Count
//===========================================================================
function Trig_Creep_Revive_Count_Func002Func001Func002Func002C takes nothing returns boolean
    if ( not ( udg_Creep_Team[udg_TEMP_IntLoop1] == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Revive_Count_Func002Func001Func002C takes nothing returns boolean
    if ( not ( udg_Creep_Timer[udg_TEMP_IntLoop1] >= 110.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Revive_Count_Func002Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_Creep_Unit[udg_TEMP_IntLoop1]) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creep_Revive_Count_Actions takes nothing returns nothing
    set udg_TEMP_IntLoop1 = 1
    loop
        exitwhen udg_TEMP_IntLoop1 > udg_Creep_Index
        if ( Trig_Creep_Revive_Count_Func002Func001C() ) then
            set udg_Creep_Timer[udg_TEMP_IntLoop1] = ( udg_Creep_Timer[udg_TEMP_IntLoop1] + 10.00 )
            if ( Trig_Creep_Revive_Count_Func002Func001Func002C() ) then
                set udg_TEMP_Pos2 = GetRectCenter(udg_Creep_Start[udg_TEMP_IntLoop1])
                if ( Trig_Creep_Revive_Count_Func002Func001Func002Func002C() ) then
                    set udg_TEMP_Player = ForcePickRandomPlayer(udg_PLAYERGRPallied)
                else
                    set udg_TEMP_Player = ForcePickRandomPlayer(udg_PLAYERGRPfederation)
                endif
                call CreateNUnitsAtLoc( 1, udg_Creep_Unit_Type[udg_TEMP_IntLoop1], udg_TEMP_Player, udg_TEMP_Pos2, bj_UNIT_FACING )
                //! beginusercode
                RemoveLocation ( udg_TEMP_Pos2 )
                //! endusercode
                set udg_Creep_Unit[udg_TEMP_IntLoop1] = GetLastCreatedUnit()
                set udg_TEMP_Unit = GetLastCreatedUnit()
                call TriggerExecute( gg_trg_FUNC_Move_Creeps )
                set udg_Creep_Timer[udg_TEMP_IntLoop1] = 0.00
            else
            endif
        else
        endif
        set udg_TEMP_IntLoop1 = udg_TEMP_IntLoop1 + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Creep_Revive_Count takes nothing returns nothing
    set gg_trg_Creep_Revive_Count = CreateTrigger(  )
    call DisableTrigger( gg_trg_Creep_Revive_Count )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Creep_Revive_Count, 10.00 )
    call TriggerAddAction( gg_trg_Creep_Revive_Count, function Trig_Creep_Revive_Count_Actions )
endfunction

//===========================================================================
// Trigger: Shade Strength Copy
//===========================================================================
function Trig_Shade_Strength_Copy_Conditions takes nothing returns boolean
    if ( not ( GetResearched() == 'R00D' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Shade_Strength_Copy_Func001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == GetOwningPlayer(GetResearchingUnit()) )
endfunction

function Trig_Shade_Strength_Copy_Func001002002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == true )
endfunction

function Trig_Shade_Strength_Copy_Func001002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Shade_Strength_Copy_Func001002002001(), Trig_Shade_Strength_Copy_Func001002002002() )
endfunction

function Trig_Shade_Strength_Copy_Func002A takes nothing returns nothing
    call SetUnitAbilityLevelSwapped( 'A037', GetEnumUnit(), ( GetPlayerTechCountSimple('R00D', GetOwningPlayer(GetResearchingUnit())) + 1 ) )
endfunction

function Trig_Shade_Strength_Copy_Actions takes nothing returns nothing
    set udg_TEMP_UnitGroup = GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Shade_Strength_Copy_Func001002002))
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Shade_Strength_Copy_Func002A )
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Shade_Strength_Copy takes nothing returns nothing
    set gg_trg_Shade_Strength_Copy = CreateTrigger(  )
    call DisableTrigger( gg_trg_Shade_Strength_Copy )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Shade_Strength_Copy, EVENT_PLAYER_UNIT_RESEARCH_FINISH )
    call TriggerAddCondition( gg_trg_Shade_Strength_Copy, Condition( function Trig_Shade_Strength_Copy_Conditions ) )
    call TriggerAddAction( gg_trg_Shade_Strength_Copy, function Trig_Shade_Strength_Copy_Actions )
endfunction

//===========================================================================
// Trigger: Mana Overload Research
//===========================================================================
function Trig_Mana_Overload_Research_Conditions takes nothing returns boolean
    if ( not ( GetResearched() == 'R00C' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Overload_Research_Func002C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_UNIT_pickedHero[GetConvertedPlayerId(GetOwningPlayer(GetResearchingUnit()))]) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Overload_Research_Actions takes nothing returns nothing
    set udg_Mana_Overload_Researched[GetConvertedPlayerId(GetOwningPlayer(GetResearchingUnit()))] = GetPlayerTechCountSimple('R00C', GetOwningPlayer(GetResearchingUnit()))
    if ( Trig_Mana_Overload_Research_Func002C() ) then
        call SetUnitAbilityLevelSwapped( 'A02N', udg_UNIT_pickedHero[GetConvertedPlayerId(GetOwningPlayer(GetResearchingUnit()))], udg_Mana_Overload_Researched[GetConvertedPlayerId(GetOwningPlayer(GetResearchingUnit()))] )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Mana_Overload_Research takes nothing returns nothing
    set gg_trg_Mana_Overload_Research = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Mana_Overload_Research, EVENT_PLAYER_UNIT_RESEARCH_FINISH )
    call TriggerAddCondition( gg_trg_Mana_Overload_Research, Condition( function Trig_Mana_Overload_Research_Conditions ) )
    call TriggerAddAction( gg_trg_Mana_Overload_Research, function Trig_Mana_Overload_Research_Actions )
endfunction

//===========================================================================
// Trigger: Frost Attack Research
//===========================================================================
function Trig_Frost_Attack_Research_Conditions takes nothing returns boolean
    if ( not ( GetResearched() == 'R00B' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_Attack_Research_Actions takes nothing returns nothing
    set udg_Frost_Attack_Researched[GetConvertedPlayerId(GetOwningPlayer(GetResearchingUnit()))] = true
endfunction

//===========================================================================
function InitTrig_Frost_Attack_Research takes nothing returns nothing
    set gg_trg_Frost_Attack_Research = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Frost_Attack_Research, EVENT_PLAYER_UNIT_UPGRADE_FINISH )
    call TriggerAddCondition( gg_trg_Frost_Attack_Research, Condition( function Trig_Frost_Attack_Research_Conditions ) )
    call TriggerAddAction( gg_trg_Frost_Attack_Research, function Trig_Frost_Attack_Research_Actions )
endfunction

//===========================================================================
// Trigger: Feedback
//===========================================================================
function Trig_Feedback_Conditions takes nothing returns boolean
    if ( not ( GetResearched() == 'R007' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Feedback_Func001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == GetOwningPlayer(GetResearchingUnit()) )
endfunction

function Trig_Feedback_Func001002002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == true )
endfunction

function Trig_Feedback_Func001002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Feedback_Func001002002001(), Trig_Feedback_Func001002002002() )
endfunction

function Trig_Feedback_Func002A takes nothing returns nothing
    call SetUnitAbilityLevelSwapped( 'A00V', GetEnumUnit(), ( GetPlayerTechCountSimple('R007', GetOwningPlayer(GetResearchingUnit())) + 1 ) )
endfunction

function Trig_Feedback_Actions takes nothing returns nothing
    set udg_TEMP_UnitGroup = GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Feedback_Func001002002))
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Feedback_Func002A )
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Feedback takes nothing returns nothing
    set gg_trg_Feedback = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Feedback, EVENT_PLAYER_UNIT_RESEARCH_FINISH )
    call TriggerAddCondition( gg_trg_Feedback, Condition( function Trig_Feedback_Conditions ) )
    call TriggerAddAction( gg_trg_Feedback, function Trig_Feedback_Actions )
endfunction

//===========================================================================
// Trigger: Shade Strength
//===========================================================================
function Trig_Shade_Strength_Conditions takes nothing returns boolean
    if ( not ( GetResearched() == 'R00D' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Shade_Strength_Func001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == GetOwningPlayer(GetResearchingUnit()) )
endfunction

function Trig_Shade_Strength_Func001002002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == true )
endfunction

function Trig_Shade_Strength_Func001002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Shade_Strength_Func001002002001(), Trig_Shade_Strength_Func001002002002() )
endfunction

function Trig_Shade_Strength_Func002A takes nothing returns nothing
    call SetUnitAbilityLevelSwapped( 'A037', GetEnumUnit(), ( GetPlayerTechCountSimple('R00D', GetOwningPlayer(GetResearchingUnit())) + 1 ) )
endfunction

function Trig_Shade_Strength_Actions takes nothing returns nothing
    set udg_TEMP_UnitGroup = GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Shade_Strength_Func001002002))
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Shade_Strength_Func002A )
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Shade_Strength takes nothing returns nothing
    set gg_trg_Shade_Strength = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Shade_Strength, EVENT_PLAYER_UNIT_RESEARCH_FINISH )
    call TriggerAddCondition( gg_trg_Shade_Strength, Condition( function Trig_Shade_Strength_Conditions ) )
    call TriggerAddAction( gg_trg_Shade_Strength, function Trig_Shade_Strength_Actions )
endfunction

//===========================================================================
// Trigger: Swift Moves
//===========================================================================
function Trig_Swift_Moves_Conditions takes nothing returns boolean
    if ( not ( GetResearched() == 'R002' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Swift_Moves_Func001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == GetOwningPlayer(GetResearchingUnit()) )
endfunction

function Trig_Swift_Moves_Func001002002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == true )
endfunction

function Trig_Swift_Moves_Func001002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Swift_Moves_Func001002002001(), Trig_Swift_Moves_Func001002002002() )
endfunction

function Trig_Swift_Moves_Func002A takes nothing returns nothing
    call SetUnitAbilityLevelSwapped( 'A005', GetEnumUnit(), ( GetPlayerTechCountSimple('R002', GetOwningPlayer(GetResearchingUnit())) + 1 ) )
endfunction

function Trig_Swift_Moves_Actions takes nothing returns nothing
    set udg_TEMP_UnitGroup = GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Swift_Moves_Func001002002))
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Swift_Moves_Func002A )
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Swift_Moves takes nothing returns nothing
    set gg_trg_Swift_Moves = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Swift_Moves, EVENT_PLAYER_UNIT_RESEARCH_FINISH )
    call TriggerAddCondition( gg_trg_Swift_Moves, Condition( function Trig_Swift_Moves_Conditions ) )
    call TriggerAddAction( gg_trg_Swift_Moves, function Trig_Swift_Moves_Actions )
endfunction

//===========================================================================
// Trigger: Attribute Upgrade
//===========================================================================
function Trig_Attribute_Upgrade_Conditions takes nothing returns boolean
    if ( not ( GetResearched() == 'R000' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attribute_Upgrade_Func001002002001 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == GetOwningPlayer(GetResearchingUnit()) )
endfunction

function Trig_Attribute_Upgrade_Func001002002002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == true )
endfunction

function Trig_Attribute_Upgrade_Func001002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Attribute_Upgrade_Func001002002001(), Trig_Attribute_Upgrade_Func001002002002() )
endfunction

function Trig_Attribute_Upgrade_Func002A takes nothing returns nothing
    call SetUnitAbilityLevelSwapped( 'A031', GetEnumUnit(), ( GetPlayerTechCountSimple('R000', GetOwningPlayer(GetResearchingUnit())) + 1 ) )
    call SetUnitAbilityLevelSwapped( 'A036', GetEnumUnit(), ( GetPlayerTechCountSimple('R000', GetOwningPlayer(GetResearchingUnit())) + 1 ) )
    call SetUnitAbilityLevelSwapped( 'A006', GetEnumUnit(), ( GetPlayerTechCountSimple('R000', GetOwningPlayer(GetResearchingUnit())) + 1 ) )
    call SetUnitAbilityLevelSwapped( 'A04G', GetEnumUnit(), ( GetPlayerTechCountSimple('R000', GetOwningPlayer(GetResearchingUnit())) + 1 ) )
    call SetUnitAbilityLevelSwapped( 'A04T', GetEnumUnit(), ( GetPlayerTechCountSimple('R000', GetOwningPlayer(GetResearchingUnit())) + 1 ) )
endfunction

function Trig_Attribute_Upgrade_Actions takes nothing returns nothing
    set udg_TEMP_UnitGroup = GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Attribute_Upgrade_Func001002002))
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Attribute_Upgrade_Func002A )
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Attribute_Upgrade takes nothing returns nothing
    set gg_trg_Attribute_Upgrade = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Attribute_Upgrade, EVENT_PLAYER_UNIT_RESEARCH_FINISH )
    call TriggerAddCondition( gg_trg_Attribute_Upgrade, Condition( function Trig_Attribute_Upgrade_Conditions ) )
    call TriggerAddAction( gg_trg_Attribute_Upgrade, function Trig_Attribute_Upgrade_Actions )
endfunction

//===========================================================================
// Trigger: INIT Gates
//===========================================================================
function Trig_INIT_Gates_Func005Func005C takes nothing returns boolean
    if ( not ( IsPlayerInForce(udg_TEMP_Player, udg_PLAYERGRPallied) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_INIT_Gates_Func005A takes nothing returns nothing
    set udg_TEMP_Player = GetOwningPlayer(GetEnumUnit())
    set udg_TEMP_Pos2 = GetUnitLoc(GetEnumUnit())
    call GroupRemoveUnitSimple( GetEnumUnit(), udg_Gates_Closed )
    call RemoveUnit( GetEnumUnit() )
    if ( Trig_INIT_Gates_Func005Func005C() ) then
        call CreateNUnitsAtLoc( 1, 'h00T', udg_TEMP_Player, udg_TEMP_Pos2, 180.00 )
    else
        call CreateNUnitsAtLoc( 1, 'h00T', udg_TEMP_Player, udg_TEMP_Pos2, 0.00 )
    endif
    call GroupAddUnitSimple( GetLastCreatedUnit(), udg_Gates_Closed )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

function Trig_INIT_Gates_Actions takes nothing returns nothing
    // Add All Gates to Gate Group
    set udg_Gates_Closed = GetUnitsOfTypeIdAll('h00T')
    //  
    call ForGroupBJ( udg_Gates_Closed, function Trig_INIT_Gates_Func005A )
    call EnableTrigger( gg_trg_Toggle_Gate )
    call EnableTrigger( gg_trg_Gate_Dies )
endfunction

//===========================================================================
function InitTrig_INIT_Gates takes nothing returns nothing
    set gg_trg_INIT_Gates = CreateTrigger(  )
    call TriggerAddAction( gg_trg_INIT_Gates, function Trig_INIT_Gates_Actions )
endfunction

//===========================================================================
// Trigger: Toggle Gate
//===========================================================================
function Trig_Toggle_Gate_Func001Func002002003001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetEnumUnit())) == true )
endfunction

function Trig_Toggle_Gate_Func001Func002002003002 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Toggle_Gate_Func001Func002002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Toggle_Gate_Func001Func002002003001(), Trig_Toggle_Gate_Func001Func002002003002() )
endfunction

function Trig_Toggle_Gate_Func001Func003002003001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetEnumUnit())) == false )
endfunction

function Trig_Toggle_Gate_Func001Func003002003002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == true )
endfunction

function Trig_Toggle_Gate_Func001Func003002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Toggle_Gate_Func001Func003002003001(), Trig_Toggle_Gate_Func001Func003002003002() )
endfunction

function Trig_Toggle_Gate_Func001Func004Func007C takes nothing returns boolean
    if ( ( CountUnitsInGroup(udg_TEMP_UnitGroup) == 0 ) ) then
        return true
    endif
    if ( ( CountUnitsInGroup(udg_TEMP_UnitGroup2) > 0 ) ) then
        return true
    endif
    return false
endfunction

function Trig_Toggle_Gate_Func001Func004C takes nothing returns boolean
    if ( not Trig_Toggle_Gate_Func001Func004Func007C() ) then
        return false
    endif
    return true
endfunction

function Trig_Toggle_Gate_Func001A takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(GetEnumUnit())
    set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocMatching(900.00, udg_TEMP_Pos2, Condition(function Trig_Toggle_Gate_Func001Func002002003))
    set udg_TEMP_UnitGroup2 = GetUnitsInRangeOfLocMatching(900.00, udg_TEMP_Pos2, Condition(function Trig_Toggle_Gate_Func001Func003002003))
    if ( Trig_Toggle_Gate_Func001Func004C() ) then
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_Gates_Closed )
        call DisableTrigger( gg_trg_Gate_Dies )
        call ReplaceUnitBJ( GetEnumUnit(), 'h00U', bj_UNIT_STATE_METHOD_RELATIVE )
        call EnableTrigger( gg_trg_Gate_Dies )
        call GroupAddUnitSimple( GetLastReplacedUnitBJ(), udg_Gates_Open )
        call SetUnitAnimation( GetLastReplacedUnitBJ(), "Death Alternate 1" )
    else
    endif
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup2 )
    //! endusercode
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

function Trig_Toggle_Gate_Func004Func002002003001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetEnumUnit())) == true )
endfunction

function Trig_Toggle_Gate_Func004Func002002003002 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Toggle_Gate_Func004Func002002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Toggle_Gate_Func004Func002002003001(), Trig_Toggle_Gate_Func004Func002002003002() )
endfunction

function Trig_Toggle_Gate_Func004Func003002003001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetEnumUnit())) == false )
endfunction

function Trig_Toggle_Gate_Func004Func003002003002 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == true )
endfunction

function Trig_Toggle_Gate_Func004Func003002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Toggle_Gate_Func004Func003002003001(), Trig_Toggle_Gate_Func004Func003002003002() )
endfunction

function Trig_Toggle_Gate_Func004Func004C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_TEMP_UnitGroup) > 0 ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(udg_TEMP_UnitGroup2) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Toggle_Gate_Func004A takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(GetEnumUnit())
    set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocMatching(900.00, udg_TEMP_Pos2, Condition(function Trig_Toggle_Gate_Func004Func002002003))
    set udg_TEMP_UnitGroup2 = GetUnitsInRangeOfLocMatching(900.00, udg_TEMP_Pos2, Condition(function Trig_Toggle_Gate_Func004Func003002003))
    if ( Trig_Toggle_Gate_Func004Func004C() ) then
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_Gates_Open )
        call DisableTrigger( gg_trg_Gate_Dies )
        call ReplaceUnitBJ( GetEnumUnit(), 'h00T', bj_UNIT_STATE_METHOD_RELATIVE )
        call EnableTrigger( gg_trg_Gate_Dies )
        call GroupAddUnitSimple( GetLastReplacedUnitBJ(), udg_Gates_Closed )
        call SetUnitAnimation( GetLastReplacedUnitBJ(), "stand" )
    else
    endif
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup2 )
    //! endusercode
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

function Trig_Toggle_Gate_Actions takes nothing returns nothing
    call ForGroupBJ( udg_Gates_Closed, function Trig_Toggle_Gate_Func001A )
    //  
    //  
    call ForGroupBJ( udg_Gates_Open, function Trig_Toggle_Gate_Func004A )
endfunction

//===========================================================================
function InitTrig_Toggle_Gate takes nothing returns nothing
    set gg_trg_Toggle_Gate = CreateTrigger(  )
    call DisableTrigger( gg_trg_Toggle_Gate )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Toggle_Gate, 1.00 )
    call TriggerAddAction( gg_trg_Toggle_Gate, function Trig_Toggle_Gate_Actions )
endfunction

//===========================================================================
// Trigger: Gate Dies
//===========================================================================
function Trig_Gate_Dies_Func007C takes nothing returns boolean
    if ( ( IsUnitInGroup(GetDyingUnit(), udg_Gates_Closed) == true ) ) then
        return true
    endif
    if ( ( IsUnitInGroup(GetDyingUnit(), udg_Gates_Open) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Gate_Dies_Conditions takes nothing returns boolean
    if ( not Trig_Gate_Dies_Func007C() ) then
        return false
    endif
    return true
endfunction

function Trig_Gate_Dies_Func004C takes nothing returns boolean
    if ( not ( IsPlayerInForce(GetOwningPlayer(GetDyingUnit()), udg_PLAYERGRPallied) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Gate_Dies_Func006C takes nothing returns boolean
    if ( not ( ( CountUnitsInGroup(udg_Gates_Closed) + CountUnitsInGroup(udg_Gates_Open) ) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Gate_Dies_Actions takes nothing returns nothing
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_Gates_Closed )
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_Gates_Open )
    set udg_TEMP_Pos2 = GetUnitLoc(GetDyingUnit())
    if ( Trig_Gate_Dies_Func004C() ) then
        call CreateNUnitsAtLoc( 1, 'h00U', GetOwningPlayer(GetDyingUnit()), udg_TEMP_Pos2, 180.00 )
        call SetUnitAnimation( GetLastCreatedUnit(), "Death 1" )
    else
        call CreateNUnitsAtLoc( 1, 'h00U', GetOwningPlayer(GetDyingUnit()), udg_TEMP_Pos2, 0.00 )
        call SetUnitAnimation( GetLastCreatedUnit(), "Death 1" )
    endif
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
    if ( Trig_Gate_Dies_Func006C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
        call DisableTrigger( gg_trg_Toggle_Gate )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Gate_Dies takes nothing returns nothing
    set gg_trg_Gate_Dies = CreateTrigger(  )
    call DisableTrigger( gg_trg_Gate_Dies )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Gate_Dies, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Gate_Dies, Condition( function Trig_Gate_Dies_Conditions ) )
    call TriggerAddAction( gg_trg_Gate_Dies, function Trig_Gate_Dies_Actions )
endfunction

//===========================================================================
// Trigger: Start Event
//===========================================================================
function Trig_Start_Event_Actions takes nothing returns nothing
    set udg_Event_Count[1] = 0
    set udg_Event_Count[2] = 0
    set udg_Event_Counter = 0
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_3907" )
    call EnableTrigger( gg_trg_Event_Count )
endfunction

//===========================================================================
function InitTrig_Start_Event takes nothing returns nothing
    set gg_trg_Start_Event = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Start_Event, udg_EventTimer )
    call TriggerAddAction( gg_trg_Start_Event, function Trig_Start_Event_Actions )
endfunction

//===========================================================================
// Trigger: Event Count
//===========================================================================
function Trig_Event_Count_Func002Func001Func002C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_HERO) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Event_Count_Func002Func001Func003C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_HERO) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Event_Count_Func002Func001C takes nothing returns boolean
    if ( not ( IsUnitAlly(GetEnumUnit(), ForcePickRandomPlayer(udg_PLAYERGRPallied)) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Event_Count_Func002A takes nothing returns nothing
    if ( Trig_Event_Count_Func002Func001C() ) then
        if ( Trig_Event_Count_Func002Func001Func003C() ) then
            set udg_Event_Count[1] = ( udg_Event_Count[1] + 15 )
        else
            set udg_Event_Count[1] = ( udg_Event_Count[1] + GetUnitLevel(GetEnumUnit()) )
        endif
    else
        if ( Trig_Event_Count_Func002Func001Func002C() ) then
            set udg_Event_Count[2] = ( udg_Event_Count[2] + 15 )
        else
            set udg_Event_Count[2] = ( udg_Event_Count[2] + GetUnitLevel(GetEnumUnit()) )
        endif
    endif
endfunction

function Trig_Event_Count_Func005Func005C takes nothing returns boolean
    if ( not ( udg_TEMP_Int == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Event_Count_Func005Func006C takes nothing returns boolean
    if ( not ( udg_TEMP_Int == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Event_Count_Func005Func007C takes nothing returns boolean
    if ( not ( udg_Event_Count[1] > udg_Event_Count[2] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Event_Count_Func005C takes nothing returns boolean
    if ( not ( udg_Event_Counter >= 60 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Event_Count_Actions takes nothing returns nothing
    set udg_TEMP_UnitGroup = GetUnitsInRectAll(gg_rct_Center_Events)
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Event_Count_Func002A )
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
    set udg_Event_Counter = ( udg_Event_Counter + 1 )
    if ( Trig_Event_Count_Func005C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
        set udg_TEMP_Int = GetRandomInt(1, 2)
        set udg_TEMP_Pos2 = GetRectCenter(gg_rct_Center_Events)
        call PingMinimapLocForForce( udg_ALL_PLAYERS, udg_TEMP_Pos2, 10.00 )
        if ( Trig_Event_Count_Func005Func005C() ) then
            set udg_Event_Unit_Type = 'n00H'
            call DisplayTextToForce( udg_ALL_PLAYERS, "TRIGSTR_3908" )
            call EnableTrigger( gg_trg_Doom_Warden_End )
            call EnableTrigger( gg_trg_DW_Ancient_Chaos )
            call EnableTrigger( gg_trg_DW_Fire_Hounds )
        else
        endif
        if ( Trig_Event_Count_Func005Func006C() ) then
            set udg_Event_Unit_Type = 'nwnr'
            call DisplayTextToForce( udg_ALL_PLAYERS, "TRIGSTR_3909" )
        else
        endif
        if ( Trig_Event_Count_Func005Func007C() ) then
            call CreateNUnitsAtLoc( 1, udg_Event_Unit_Type, Player(18), udg_TEMP_Pos2, bj_UNIT_FACING )
            set udg_Doom_Warden = GetLastCreatedUnit()
        else
            call CreateNUnitsAtLoc( 1, udg_Event_Unit_Type, Player(21), udg_TEMP_Pos2, bj_UNIT_FACING )
            set udg_Doom_Warden = GetLastCreatedUnit()
        endif
        call SetUnitUserData( GetLastCreatedUnit(), 4 )
        call SetUnitPathing( udg_Doom_Warden, false )
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos2 )
        //! endusercode
    else
    endif
endfunction

//===========================================================================
function InitTrig_Event_Count takes nothing returns nothing
    set gg_trg_Event_Count = CreateTrigger(  )
    call DisableTrigger( gg_trg_Event_Count )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Event_Count, 1.00 )
    call TriggerAddAction( gg_trg_Event_Count, function Trig_Event_Count_Actions )
endfunction

//===========================================================================
// Trigger: DW Ancient Chaos
//===========================================================================
function Trig_DW_Ancient_Chaos_Actions takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(udg_Doom_Warden)
    set udg_TEMP_IntLoop1 = 1
    loop
        exitwhen udg_TEMP_IntLoop1 > GetRandomInt(1, 4)
        set udg_TEMP_Pos_Spell = GetRandomLocInRect(RectFromCenterSizeBJ(udg_TEMP_Pos2, 1200.00, 1200.00))
        call CreateNUnitsAtLoc( 1, 'h00O', GetOwningPlayer(udg_Doom_Warden), udg_TEMP_Pos2, bj_UNIT_FACING )
        call UnitApplyTimedLifeBJ( 3.00, 'BTLF', GetLastCreatedUnit() )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "dreadlordinferno", udg_TEMP_Pos_Spell )
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos_Spell )
        //! endusercode
        set udg_TEMP_IntLoop1 = udg_TEMP_IntLoop1 + 1
    endloop
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_DW_Ancient_Chaos takes nothing returns nothing
    set gg_trg_DW_Ancient_Chaos = CreateTrigger(  )
    call DisableTrigger( gg_trg_DW_Ancient_Chaos )
    call TriggerRegisterTimerEventPeriodic( gg_trg_DW_Ancient_Chaos, 20.00 )
    call TriggerAddAction( gg_trg_DW_Ancient_Chaos, function Trig_DW_Ancient_Chaos_Actions )
endfunction

//===========================================================================
// Trigger: DW Fire Hounds
//===========================================================================
function Trig_DW_Fire_Hounds_Actions takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(udg_Doom_Warden)
    call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(udg_Doom_Warden), udg_TEMP_Pos2, bj_UNIT_FACING )
    call UnitAddAbilityBJ( 'A04W', GetLastCreatedUnit() )
    call UnitApplyTimedLifeBJ( 3.00, 'BTLF', GetLastCreatedUnit() )
    call IssueImmediateOrderBJ( GetLastCreatedUnit(), "waterelemental" )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_DW_Fire_Hounds takes nothing returns nothing
    set gg_trg_DW_Fire_Hounds = CreateTrigger(  )
    call DisableTrigger( gg_trg_DW_Fire_Hounds )
    call TriggerRegisterTimerEventPeriodic( gg_trg_DW_Fire_Hounds, 4.00 )
    call TriggerAddAction( gg_trg_DW_Fire_Hounds, function Trig_DW_Fire_Hounds_Actions )
endfunction

//===========================================================================
// Trigger: Doom Warden End
//===========================================================================
function Trig_Doom_Warden_End_Conditions takes nothing returns boolean
    if ( not ( GetDyingUnit() == udg_Doom_Warden ) ) then
        return false
    endif
    return true
endfunction

function Trig_Doom_Warden_End_Actions takes nothing returns nothing
    call DisableTrigger( gg_trg_DW_Ancient_Chaos )
    call DisableTrigger( gg_trg_DW_Fire_Hounds )
    call StartTimerBJ( udg_EventTimer, false, 300.00 )
endfunction

//===========================================================================
function InitTrig_Doom_Warden_End takes nothing returns nothing
    set gg_trg_Doom_Warden_End = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Doom_Warden_End, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Doom_Warden_End, Condition( function Trig_Doom_Warden_End_Conditions ) )
    call TriggerAddAction( gg_trg_Doom_Warden_End, function Trig_Doom_Warden_End_Actions )
endfunction

//===========================================================================
// Trigger: testing LUA
//===========================================================================
function Trig_testing_LUA_Actions takes nothing returns nothing
endfunction

//===========================================================================
function InitTrig_testing_LUA takes nothing returns nothing
    set gg_trg_testing_LUA = CreateTrigger(  )
    call TriggerAddAction( gg_trg_testing_LUA, function Trig_testing_LUA_Actions )
endfunction

//===========================================================================
// Trigger: AI INIT Brawler
//===========================================================================
function Trig_AI_INIT_Brawler_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Index]) == 'E001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_INIT_Brawler_Actions takes nothing returns nothing
    // Brawler
    set udg_AI_Strategy[udg_AI_Index] = GetRandomInt(1, 1)
    //  
    set udg_AI_Strat_Heal_HealthFactor[udg_AI_Index] = 1.00
    set udg_AI_Strat_Heal_ManaFactor[udg_AI_Index] = 0.05
    //  
    set udg_AI_Strat_Heal_HighPercent[udg_AI_Index] = 65.00
    set udg_AI_Strat_Heal_LowPercent[udg_AI_Index] = 20.00
    set udg_AI_Strat_Heal_LowNumber[udg_AI_Index] = 450.00
    //  
    set udg_AI_Strat_HighDamageSingle[udg_AI_Index] = 17.00
    set udg_AI_Strat_HighDamageAverage[udg_AI_Index] = 25.00
    //  
    set udg_AI_Strat_Power_Base[udg_AI_Index] = 950.00
    set udg_AI_Strat_Power_LevelFactor[udg_AI_Index] = 250.00
    //  
    set udg_AI_Strat_CalculateClumpAlly[udg_AI_Index] = false
    set udg_AI_Strat_CalculateClumpComb[udg_AI_Index] = false
    set udg_AI_Strat_CalculateClumpEnemy[udg_AI_Index] = false
    set udg_AI_Strat_CalculateClumpRange[udg_AI_Index] = 0.00
    //  
    set udg_AI_Strat_CAN_Agressive[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Assasin[udg_AI_Index] = false
    set udg_AI_Strat_CAN_Creep[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Defence[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Support[udg_AI_Index] = true
endfunction

//===========================================================================
function InitTrig_AI_INIT_Brawler takes nothing returns nothing
    set gg_trg_AI_INIT_Brawler = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_AI_INIT_Brawler, Condition( function Trig_AI_INIT_Brawler_Conditions ) )
    call TriggerAddAction( gg_trg_AI_INIT_Brawler, function Trig_AI_INIT_Brawler_Actions )
endfunction

//===========================================================================
// Trigger: AI INIT Tactition
//===========================================================================
function Trig_AI_INIT_Tactition_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Index]) == 'H009' ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_INIT_Tactition_Actions takes nothing returns nothing
    // Tactition
    set udg_AI_Strategy[udg_AI_Index] = GetRandomInt(1, 1)
    //  
    set udg_AI_Strat_Heal_HealthFactor[udg_AI_Index] = 1.00
    set udg_AI_Strat_Heal_ManaFactor[udg_AI_Index] = 0.30
    //  
    set udg_AI_Strat_Heal_HighPercent[udg_AI_Index] = 75.00
    set udg_AI_Strat_Heal_LowPercent[udg_AI_Index] = 20.00
    set udg_AI_Strat_Heal_LowNumber[udg_AI_Index] = 400.00
    //  
    set udg_AI_Strat_HighDamageSingle[udg_AI_Index] = 17.00
    set udg_AI_Strat_HighDamageAverage[udg_AI_Index] = 25.00
    //  
    set udg_AI_Strat_Power_Base[udg_AI_Index] = 950.00
    set udg_AI_Strat_Power_LevelFactor[udg_AI_Index] = 250.00
    //  
    set udg_AI_Strat_CalculateClumpAlly[udg_AI_Index] = true
    set udg_AI_Strat_CalculateClumpComb[udg_AI_Index] = false
    set udg_AI_Strat_CalculateClumpEnemy[udg_AI_Index] = false
    set udg_AI_Strat_CalculateClumpRange[udg_AI_Index] = 200.00
    //  
    set udg_AI_Strat_CAN_Agressive[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Assasin[udg_AI_Index] = false
    set udg_AI_Strat_CAN_Creep[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Defence[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Support[udg_AI_Index] = true
endfunction

//===========================================================================
function InitTrig_AI_INIT_Tactition takes nothing returns nothing
    set gg_trg_AI_INIT_Tactition = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_AI_INIT_Tactition, Condition( function Trig_AI_INIT_Tactition_Conditions ) )
    call TriggerAddAction( gg_trg_AI_INIT_Tactition, function Trig_AI_INIT_Tactition_Actions )
endfunction

//===========================================================================
// Trigger: AI INIT Mana Addict
//===========================================================================
function Trig_AI_INIT_Mana_Addict_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Index]) == 'H00R' ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_INIT_Mana_Addict_Actions takes nothing returns nothing
    // Mana Addict
    set udg_AI_Strategy[udg_AI_Index] = GetRandomInt(1, 1)
    //  
    set udg_AI_Strat_Heal_HealthFactor[udg_AI_Index] = 1.00
    set udg_AI_Strat_Heal_ManaFactor[udg_AI_Index] = 0.75
    //  
    set udg_AI_Strat_Heal_HighPercent[udg_AI_Index] = 85.00
    set udg_AI_Strat_Heal_LowPercent[udg_AI_Index] = 25.00
    set udg_AI_Strat_Heal_LowNumber[udg_AI_Index] = 400.00
    //  
    set udg_AI_Strat_HighDamageSingle[udg_AI_Index] = 4.00
    set udg_AI_Strat_HighDamageAverage[udg_AI_Index] = 12.00
    //  
    set udg_AI_Strat_Power_Base[udg_AI_Index] = 1000.00
    set udg_AI_Strat_Power_LevelFactor[udg_AI_Index] = 250.00
    //  
    set udg_AI_Strat_CalculateClumpAlly[udg_AI_Index] = false
    set udg_AI_Strat_CalculateClumpComb[udg_AI_Index] = false
    set udg_AI_Strat_CalculateClumpEnemy[udg_AI_Index] = true
    set udg_AI_Strat_CalculateClumpRange[udg_AI_Index] = 200.00
    //  
    set udg_AI_Strat_CAN_Agressive[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Assasin[udg_AI_Index] = false
    set udg_AI_Strat_CAN_Creep[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Defence[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Support[udg_AI_Index] = true
endfunction

//===========================================================================
function InitTrig_AI_INIT_Mana_Addict takes nothing returns nothing
    set gg_trg_AI_INIT_Mana_Addict = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_AI_INIT_Mana_Addict, Condition( function Trig_AI_INIT_Mana_Addict_Conditions ) )
    call TriggerAddAction( gg_trg_AI_INIT_Mana_Addict, function Trig_AI_INIT_Mana_Addict_Actions )
endfunction

//===========================================================================
// Trigger: AI INIT Time Mage
//===========================================================================
function Trig_AI_INIT_Time_Mage_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Index]) == 'H00J' ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_INIT_Time_Mage_Actions takes nothing returns nothing
    // Time Mage
    set udg_AI_Strategy[udg_AI_Index] = GetRandomInt(1, 1)
    //  
    set udg_AI_Strat_Heal_HealthFactor[udg_AI_Index] = 1.00
    set udg_AI_Strat_Heal_ManaFactor[udg_AI_Index] = 0.10
    //  
    set udg_AI_Strat_Heal_HighPercent[udg_AI_Index] = 85.00
    set udg_AI_Strat_Heal_LowPercent[udg_AI_Index] = 25.00
    set udg_AI_Strat_Heal_LowNumber[udg_AI_Index] = 350.00
    //  
    set udg_AI_Strat_HighDamageSingle[udg_AI_Index] = 10.00
    set udg_AI_Strat_HighDamageAverage[udg_AI_Index] = 17.00
    //  
    set udg_AI_Strat_Power_Base[udg_AI_Index] = 1000.00
    set udg_AI_Strat_Power_LevelFactor[udg_AI_Index] = 300.00
    //  
    set udg_AI_Strat_CalculateClumpAlly[udg_AI_Index] = true
    set udg_AI_Strat_CalculateClumpComb[udg_AI_Index] = true
    set udg_AI_Strat_CalculateClumpEnemy[udg_AI_Index] = true
    set udg_AI_Strat_CalculateClumpRange[udg_AI_Index] = 250.00
    //  
    set udg_AI_Strat_CAN_Agressive[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Assasin[udg_AI_Index] = false
    set udg_AI_Strat_CAN_Creep[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Defence[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Support[udg_AI_Index] = true
endfunction

//===========================================================================
function InitTrig_AI_INIT_Time_Mage takes nothing returns nothing
    set gg_trg_AI_INIT_Time_Mage = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_AI_INIT_Time_Mage, Condition( function Trig_AI_INIT_Time_Mage_Conditions ) )
    call TriggerAddAction( gg_trg_AI_INIT_Time_Mage, function Trig_AI_INIT_Time_Mage_Actions )
endfunction

//===========================================================================
// Trigger: AI INIT Shifter
//===========================================================================
function Trig_AI_INIT_Shifter_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Index]) == 'E002' ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_INIT_Shifter_Actions takes nothing returns nothing
    // Shifter
    set udg_AI_Strategy[udg_AI_Index] = GetRandomInt(1, 1)
    //  
    set udg_AI_Strat_Heal_HealthFactor[udg_AI_Index] = 1.00
    set udg_AI_Strat_Heal_ManaFactor[udg_AI_Index] = 0.20
    //  
    set udg_AI_Strat_Heal_HighPercent[udg_AI_Index] = 70.00
    set udg_AI_Strat_Heal_LowPercent[udg_AI_Index] = 30.00
    set udg_AI_Strat_Heal_LowNumber[udg_AI_Index] = 350.00
    //  
    set udg_AI_Strat_HighDamageSingle[udg_AI_Index] = 17.00
    set udg_AI_Strat_HighDamageAverage[udg_AI_Index] = 25.00
    //  
    set udg_AI_Strat_Power_Base[udg_AI_Index] = 850.00
    set udg_AI_Strat_Power_LevelFactor[udg_AI_Index] = 210.00
    //  
    set udg_AI_Strat_CalculateClumpAlly[udg_AI_Index] = false
    set udg_AI_Strat_CalculateClumpComb[udg_AI_Index] = false
    set udg_AI_Strat_CalculateClumpEnemy[udg_AI_Index] = false
    set udg_AI_Strat_CalculateClumpRange[udg_AI_Index] = 0.00
    //  
    set udg_AI_Strat_CAN_Agressive[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Assasin[udg_AI_Index] = false
    set udg_AI_Strat_CAN_Creep[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Defence[udg_AI_Index] = true
    set udg_AI_Strat_CAN_Support[udg_AI_Index] = true
endfunction

//===========================================================================
function InitTrig_AI_INIT_Shifter takes nothing returns nothing
    set gg_trg_AI_INIT_Shifter = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_AI_INIT_Shifter, Condition( function Trig_AI_INIT_Shifter_Conditions ) )
    call TriggerAddAction( gg_trg_AI_INIT_Shifter, function Trig_AI_INIT_Shifter_Actions )
endfunction

//===========================================================================
// Trigger: AI Hero STATES
//===========================================================================
function Trig_AI_Hero_STATES_Func003C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Loop]) == 'E001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_Hero_STATES_Func006C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Loop]) == 'H00R' ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_Hero_STATES_Func009C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Loop]) == 'E002' ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_Hero_STATES_Func012C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Loop]) == 'H009' ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_Hero_STATES_Func015C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Loop]) == 'H00J' ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_Hero_STATES_Actions takes nothing returns nothing
    //  
    // Brawler
    if ( Trig_AI_Hero_STATES_Func003C() ) then
        call ConditionalTriggerExecute( gg_trg_AI_MAIN_Brawler )
    else
    endif
    //  
    // Mana Addict
    if ( Trig_AI_Hero_STATES_Func006C() ) then
        call ConditionalTriggerExecute( gg_trg_AI_MAIN_Mana_Addict )
    else
    endif
    //  
    // Shifter
    if ( Trig_AI_Hero_STATES_Func009C() ) then
        call ConditionalTriggerExecute( gg_trg_AI_MAIN_Shifter )
    else
    endif
    //  
    // Tactition
    if ( Trig_AI_Hero_STATES_Func012C() ) then
        call ConditionalTriggerExecute( gg_trg_AI_MAIN_Tactition )
    else
    endif
    //  
    // Time Mage
    if ( Trig_AI_Hero_STATES_Func015C() ) then
        call ConditionalTriggerExecute( gg_trg_AI_MAIN_Time_Mage )
    else
    endif
endfunction

//===========================================================================
function InitTrig_AI_Hero_STATES takes nothing returns nothing
    set gg_trg_AI_Hero_STATES = CreateTrigger(  )
    call TriggerAddAction( gg_trg_AI_Hero_STATES, function Trig_AI_Hero_STATES_Actions )
endfunction

//===========================================================================
// Trigger: AI MAIN Snapshot
//===========================================================================
function Trig_AI_MAIN_Snapshot_Func001Func010Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_AI_HealDestination[udg_AI_Loop]) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func010Func002C takes nothing returns boolean
    if ( ( udg_AI_B_Fleeing[udg_AI_Loop] == true ) ) then
        return true
    endif
    if ( ( udg_AI_B_Low_Health[udg_AI_Loop] == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func010Func003Func001C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_AI_Destination[udg_AI_Loop]) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func010Func003C takes nothing returns boolean
    if ( not ( udg_AI_B_Chasing[udg_AI_Loop] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func010C takes nothing returns boolean
    if ( not Trig_AI_MAIN_Snapshot_Func001Func010Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func018002003001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func018002003002 takes nothing returns boolean
    return ( GetFilterUnit() != udg_AI_Hero[udg_AI_Loop] )
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func018002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_AI_MAIN_Snapshot_Func001Func018002003001(), Trig_AI_MAIN_Snapshot_Func001Func018002003002() )
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func003Func003C takes nothing returns boolean
    if ( not ( IsUnitAlly(GetEnumUnit(), GetOwningPlayer(udg_AI_Hero[udg_AI_Loop])) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func003C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_HERO) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func016Func005C takes nothing returns boolean
    if ( not ( udg_TEMP_A_INT[1] > GetUnitPointValue(udg_AI_T_PowerfulUnitAlly) ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func016Func008C takes nothing returns boolean
    if ( not ( udg_TEMP_A_REAL[1] <= 500.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func016Func014C takes nothing returns boolean
    if ( not ( udg_TEMP_A_INT[1] > GetUnitPointValue(udg_AI_T_PowerfulUnitEnemy) ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func016Func017C takes nothing returns boolean
    if ( not ( udg_TEMP_A_REAL[1] <= 500.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func016C takes nothing returns boolean
    if ( not ( IsUnitAlly(GetEnumUnit(), GetOwningPlayer(udg_AI_Hero[udg_AI_Loop])) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func020Func008Func003Func006C takes nothing returns boolean
    if ( ( udg_AI_Strat_CalculateClumpAlly[udg_AI_Loop] == true ) ) then
        return true
    endif
    if ( ( udg_AI_Strat_CalculateClumpComb[udg_AI_Loop] == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func020Func008Func003C takes nothing returns boolean
    if ( not ( IsUnitAlly(GetEnumUnit(), GetOwningPlayer(udg_AI_Hero[udg_AI_Loop])) == true ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_AI_Hero[udg_AI_Loop] ) ) then
        return false
    endif
    if ( not Trig_AI_MAIN_Snapshot_Func001Func019Func020Func008Func003Func006C() ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func020Func008Func006Func006C takes nothing returns boolean
    if ( ( udg_AI_Strat_CalculateClumpComb[udg_AI_Loop] == true ) ) then
        return true
    endif
    if ( ( udg_AI_Strat_CalculateClumpEnemy[udg_AI_Loop] == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func020Func008Func006C takes nothing returns boolean
    if ( not ( IsUnitEnemy(GetEnumUnit(), GetOwningPlayer(udg_AI_Hero[udg_AI_Loop])) == true ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_AI_Hero[udg_AI_Loop] ) ) then
        return false
    endif
    if ( not Trig_AI_MAIN_Snapshot_Func001Func019Func020Func008Func006Func006C() ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func020Func008A takes nothing returns nothing
    //  
    // Ally Clumps
    if ( Trig_AI_MAIN_Snapshot_Func001Func019Func020Func008Func003C() ) then
        set udg_TEMP_A_REAL[4] = ( udg_TEMP_A_REAL[4] + SquareRoot(I2R(GetUnitPointValue(GetEnumUnit()))) )
    else
    endif
    //  
    // Enemy Clumps
    if ( Trig_AI_MAIN_Snapshot_Func001Func019Func020Func008Func006C() ) then
        set udg_TEMP_A_REAL[5] = ( udg_TEMP_A_REAL[5] + SquareRoot(I2R(GetUnitPointValue(GetEnumUnit()))) )
    else
    endif
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func020Func012Func004C takes nothing returns boolean
    if ( ( udg_AI_Strat_CalculateClumpAlly[udg_AI_Loop] == true ) ) then
        return true
    endif
    if ( ( udg_AI_Strat_CalculateClumpComb[udg_AI_Loop] == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func020Func012C takes nothing returns boolean
    if ( not ( udg_TEMP_A_REAL[4] > udg_AI_T_ClumpAllyScore ) ) then
        return false
    endif
    if ( not Trig_AI_MAIN_Snapshot_Func001Func019Func020Func012Func004C() ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func020Func015Func004C takes nothing returns boolean
    if ( ( udg_AI_Strat_CalculateClumpEnemy[udg_AI_Loop] == true ) ) then
        return true
    endif
    if ( ( udg_AI_Strat_CalculateClumpComb[udg_AI_Loop] == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func020Func015C takes nothing returns boolean
    if ( not ( udg_TEMP_A_REAL[5] > udg_AI_T_ClumpEnemyScore ) ) then
        return false
    endif
    if ( not Trig_AI_MAIN_Snapshot_Func001Func019Func020Func015Func004C() ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func020Func018C takes nothing returns boolean
    if ( not ( ( udg_TEMP_A_REAL[4] + udg_TEMP_A_REAL[5] ) > udg_AI_T_ClumpCombinedScore ) ) then
        return false
    endif
    if ( not ( udg_AI_Strat_CalculateClumpComb[udg_AI_Loop] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func020Func019C takes nothing returns boolean
    if ( ( udg_AI_Strat_CalculateClumpAlly[udg_AI_Loop] == true ) ) then
        return true
    endif
    if ( ( udg_AI_Strat_CalculateClumpComb[udg_AI_Loop] == true ) ) then
        return true
    endif
    if ( ( udg_AI_Strat_CalculateClumpEnemy[udg_AI_Loop] == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019Func020C takes nothing returns boolean
    if ( not Trig_AI_MAIN_Snapshot_Func001Func019Func020Func019C() ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Func001Func019A takes nothing returns nothing
    //  
    // Get Attributed of selected Unit
    if ( Trig_AI_MAIN_Snapshot_Func001Func019Func003C() ) then
        set udg_TEMP_A_INT[1] = ( GetHeroLevel(GetEnumUnit()) * 75 )
        set udg_TEMP_A_INT[2] = 1
        if ( Trig_AI_MAIN_Snapshot_Func001Func019Func003Func003C() ) then
            call GroupAddUnitSimple( GetEnumUnit(), udg_AI_T_HeroesInRangeFriendly )
        else
            call GroupAddUnitSimple( GetEnumUnit(), udg_AI_T_HeroesInRangeEnemy )
        endif
    else
        set udg_TEMP_A_INT[1] = GetUnitPointValue(GetEnumUnit())
        set udg_TEMP_A_INT[2] = 1
    endif
    //  
    //  
    set udg_TEMP_A_UNIT[1] = GetEnumUnit()
    set udg_TEMP_Pos2 = GetUnitLoc(GetEnumUnit())
    set udg_TEMP_A_REAL[1] = DistanceBetweenPoints(udg_AI_T_HeroPosition, udg_TEMP_Pos2)
    set udg_TEMP_A_REAL[2] = GetUnitLifePercent(GetEnumUnit())
    set udg_TEMP_A_REAL[3] = BlzGetUnitWeaponRealField(GetEnumUnit(), UNIT_WEAPON_RF_ATTACK_RANGE, 0)
    // Temp Clumb Size
    set udg_TEMP_A_REAL[4] = 0.00
    //  
    //  
    // Get General Calculations (Danger, Powerful Unit, Units very close)
    if ( Trig_AI_MAIN_Snapshot_Func001Func019Func016C() ) then
        //  
        // If PICKED UNIT is an Ally of AI
        //  
        // Check if unit is more powerful than the current Allies
        if ( Trig_AI_MAIN_Snapshot_Func001Func019Func016Func005C() ) then
            set udg_AI_T_PowerfulUnitAlly = GetEnumUnit()
        else
        endif
        //  
        // Unit is Closer than 500 away from AI Add 3 to close Enemies
        if ( Trig_AI_MAIN_Snapshot_Func001Func019Func016Func008C() ) then
            set udg_AI_T_CloseCountFriendly = ( udg_AI_T_CloseCountFriendly + udg_TEMP_A_INT[2] )
        else
        endif
        //  
        // Calculate Ally Danger Levels
        // Hero Calc ( HERO_LEVEL x 50 ) x ( LIFE% / 100 ) / ( DISTANCE_FROM_HERO / ATTACK_RANGE )
        // Unit Calc (POINT_VALUE ) x ( LIFE% / 100 ) / ( DISTANCE_FROM_HERO / ATTACK_RANGE )
        set udg_AI_T_PowerFriendly = ( udg_AI_T_PowerFriendly + R2I(( ( I2R(udg_TEMP_A_INT[1]) * ( udg_TEMP_A_REAL[2] / 100.00 ) ) / ( udg_TEMP_A_REAL[1] / udg_TEMP_A_REAL[3] ) )) )
    else
        //  
        //  
        // If PICKED UNIT is an ENEMY of AI
        //  
        // Check if unit is more powerful than the current Enemies
        if ( Trig_AI_MAIN_Snapshot_Func001Func019Func016Func014C() ) then
            set udg_AI_T_PowerfulUnitEnemy = GetEnumUnit()
        else
        endif
        //  
        // Unit is Closer than 500 away from AI Add to Close Enemy Count
        if ( Trig_AI_MAIN_Snapshot_Func001Func019Func016Func017C() ) then
            set udg_AI_T_CloseCountEnemy = ( udg_AI_T_CloseCountEnemy + udg_TEMP_A_INT[2] )
        else
        endif
        //  
        // Calculate Enemy Danger Levels
        // Hero Calc ( HERO_LEVEL x 50 ) x ( LIFE% / 100 ) / ( DISTANCE_FROM_HERO / ATTACK_RANGE )
        // Unit Calc (POINT_VALUE ) x ( LIFE% / 100 ) / ( DISTANCE_FROM_HERO / ATTACK_RANGE )
        set udg_AI_T_PowerEnemy = ( udg_AI_T_PowerEnemy + R2I(( ( I2R(udg_TEMP_A_INT[1]) * ( udg_TEMP_A_REAL[2] / 100.00 ) ) / ( udg_TEMP_A_REAL[1] / udg_TEMP_A_REAL[3] ) )) )
    endif
    //  
    //  
    // Find Unit Clumps
    if ( Trig_AI_MAIN_Snapshot_Func001Func019Func020C() ) then
        //  
        // Temp Clumb Size ALLY
        set udg_TEMP_A_REAL[4] = 0.00
        // Temp Clumb Size ENEMY
        set udg_TEMP_A_REAL[5] = 0.00
        //  
        set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocAll(udg_AI_Strat_CalculateClumpRange[udg_AI_Loop], udg_TEMP_Pos2)
        call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_AI_MAIN_Snapshot_Func001Func019Func020Func008A )
        //! beginusercode
        DestroyGroup ( udg_TEMP_UnitGroup )
        //! endusercode
        //  
        // Check to see if Ally Score is higher than Stored Score
        if ( Trig_AI_MAIN_Snapshot_Func001Func019Func020Func012C() ) then
            set udg_AI_T_ClumpAllyScore = udg_TEMP_A_REAL[4]
            set udg_AI_T_ClumpAllyUnit = udg_TEMP_A_UNIT[1]
        else
        endif
        //  
        // Check to see if Enemy Score is higher than Stored Score
        if ( Trig_AI_MAIN_Snapshot_Func001Func019Func020Func015C() ) then
            set udg_AI_T_ClumpEnemyScore = udg_TEMP_A_REAL[5]
            set udg_AI_T_ClumpEnemyUnit = udg_TEMP_A_UNIT[1]
        else
        endif
        //  
        // Check to see if Combined Score is higher than Stored Score
        if ( Trig_AI_MAIN_Snapshot_Func001Func019Func020Func018C() ) then
            set udg_AI_T_ClumpCombinedScore = ( udg_TEMP_A_REAL[4] + udg_TEMP_A_REAL[5] )
            set udg_AI_T_ClumpCombinedUnit = udg_TEMP_A_UNIT[1]
        else
        endif
    else
    endif
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

function Trig_AI_MAIN_Snapshot_Func001C takes nothing returns boolean
    if ( not ( udg_AI_B_Alive[udg_AI_Loop] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_MAIN_Snapshot_Actions takes nothing returns nothing
    if ( Trig_AI_MAIN_Snapshot_Func001C() ) then
        //  
        // Reset Unit Groups
        //  
        set udg_AI_T_HeroesInRangeFriendly = GetUnitsOfTypeIdAll(0)
        set udg_AI_T_HeroesInRangeEnemy = GetUnitsOfTypeIdAll(0)
        //  
        // Get Start Variables
        //  
        set udg_AI_T_HeroPosition = GetUnitLoc(udg_AI_Hero[udg_AI_Loop])
        if ( Trig_AI_MAIN_Snapshot_Func001Func010C() ) then
            if ( Trig_AI_MAIN_Snapshot_Func001Func010Func001C() ) then
                set udg_AI_T_DestinationPosition = GetUnitLoc(udg_AI_HealDestination[udg_AI_Loop])
            else
                call ConditionalTriggerExecute( gg_trg_AI_Go_To_Closest_Heal )
            endif
        else
            if ( Trig_AI_MAIN_Snapshot_Func001Func010Func003C() ) then
                set udg_AI_T_DestinationPosition = GetUnitLoc(udg_AI_ChaseHero[udg_AI_Loop])
            else
                if ( Trig_AI_MAIN_Snapshot_Func001Func010Func003Func001C() ) then
                    set udg_AI_T_DestinationPosition = GetUnitLoc(udg_AI_Destination[udg_AI_Loop])
                else
                    call ConditionalTriggerExecute( gg_trg_AI_Attack_a_Base )
                endif
            endif
        endif
        //  
        //  
        // Get Units / Heroes in Range
        // Get Unit Value
        //  
        //  
        // Find Units around AI
        set udg_AI_T_Units = GetUnitsInRangeOfLocMatching(1000.00, udg_AI_T_HeroPosition, Condition(function Trig_AI_MAIN_Snapshot_Func001Func018002003))
        call ForGroupBJ( udg_AI_T_Units, function Trig_AI_MAIN_Snapshot_Func001Func019A )
        //  
        //  
        // Get Current Life (Health + Mana)
        //  
        // Update historical Health information
        set udg_TEMP_IntLoop1 = 1
        loop
            exitwhen udg_TEMP_IntLoop1 > 3
            set udg_AI_Snaps_Health[( ( udg_AI_Loop * 3 ) + ( 3 - udg_TEMP_IntLoop1 ) )] = udg_AI_Snaps_Health[( ( udg_AI_Loop * 3 ) + ( 2 - udg_TEMP_IntLoop1 ) )]
            set udg_TEMP_IntLoop1 = udg_TEMP_IntLoop1 + 1
        endloop
        set udg_AI_Snaps_Health[( udg_AI_Loop * 3 )] = GetUnitLifePercent(udg_AI_Hero[udg_AI_Loop])
        //  
        // Health + Mana + Weighted Health and Mana
        set udg_AI_T_HealthCurrent = GetUnitStateSwap(UNIT_STATE_LIFE, udg_AI_Hero[udg_AI_Loop])
        set udg_AI_T_ManaCurrent = GetUnitStateSwap(UNIT_STATE_MANA, udg_AI_Hero[udg_AI_Loop])
        set udg_AI_T_SnapLifeCurrent = ( ( udg_AI_T_HealthCurrent * udg_AI_Strat_Heal_HealthFactor[udg_AI_Loop] ) + ( udg_AI_T_ManaCurrent * udg_AI_Strat_Heal_ManaFactor[udg_AI_Loop] ) )
        set udg_AI_T_SnapLifeMax = ( ( GetUnitStateSwap(UNIT_STATE_MAX_LIFE, udg_AI_Hero[udg_AI_Loop]) * udg_AI_Strat_Heal_HealthFactor[udg_AI_Loop] ) + ( GetUnitStateSwap(UNIT_STATE_MAX_MANA, udg_AI_Hero[udg_AI_Loop]) * udg_AI_Strat_Heal_ManaFactor[udg_AI_Loop] ) )
        set udg_AI_T_SnapLifePercent = ( ( udg_AI_T_SnapLifeCurrent / udg_AI_T_SnapLifeMax ) * 100.00 )
        //  
        // Average Damage over last three cycles and since last cycle
        set udg_AI_T_HealthLost1 = ( udg_AI_Snaps_Health[( ( udg_AI_Loop * 3 ) + 1 )] - udg_AI_Snaps_Health[( ( udg_AI_Loop * 3 ) + 0 )] )
        set udg_AI_T_HealthLostAll = ( udg_AI_Snaps_Health[( ( udg_AI_Loop * 3 ) + 2 )] - udg_AI_Snaps_Health[( ( udg_AI_Loop * 3 ) + 0 )] )
        //  
        // Boost enemy power based on AI's current Weighted Health
        set udg_AI_T_PowerEnemy = R2I(( I2R(udg_AI_T_PowerEnemy) * ( ( ( 100.00 - udg_AI_T_SnapLifePercent ) / 20.00 ) + 0.50 ) ))
        set udg_AI_T_PowerCount = ( udg_AI_T_PowerEnemy - udg_AI_T_PowerFriendly )
        //  
        // Give Hero confidence boost (Higher the level the more confidence.)
        set udg_AI_Strat_Power_Base[udg_AI_Loop] = ( udg_AI_Strat_Power_Base[udg_AI_Loop] + ( 0.25 * I2R(GetHeroLevel(udg_AI_Hero[udg_AI_Loop])) ) )
        set udg_AI_T_PowerHero = ( R2I(udg_AI_Strat_Power_Base[udg_AI_Loop]) + ( R2I(udg_AI_Strat_Power_LevelFactor[udg_AI_Loop]) * GetHeroLevel(udg_AI_Hero[udg_AI_Loop]) ) )
        //  
    else
    endif
endfunction

//===========================================================================
function InitTrig_AI_MAIN_Snapshot takes nothing returns nothing
    set gg_trg_AI_MAIN_Snapshot = CreateTrigger(  )
    call DisableTrigger( gg_trg_AI_MAIN_Snapshot )
    call TriggerAddAction( gg_trg_AI_MAIN_Snapshot, function Trig_AI_MAIN_Snapshot_Actions )
endfunction

//===========================================================================
// Trigger: AI MAIN END
//===========================================================================
function Trig_AI_MAIN_END_Actions takes nothing returns nothing
    set udg_AI_T_PowerFriendly = 0
    set udg_AI_T_PowerEnemy = 0
    set udg_AI_T_CloseCountFriendly = 0
    set udg_AI_T_CloseCountEnemy = 0
    set udg_AI_T_ClumpAllyScore = 0.00
    set udg_AI_T_ClumpEnemyScore = 0.00
    set udg_AI_T_ClumpCombinedScore = 0.00
    //  
    set udg_AI_T_ClumpAllyUnit = null
    set udg_AI_T_ClumpCombinedUnit = null
    set udg_AI_T_ClumpEnemyUnit = null
    set udg_AI_T_PowerfulUnitAlly = null
    set udg_AI_T_PowerfulUnitEnemy = null
    set udg_AI_T_PowerfulUnitCombined = null
    //  
    //! beginusercode
    DestroyGroup ( udg_AI_T_HeroesInRangeFriendly )
    //! endusercode
    //! beginusercode
    DestroyGroup ( udg_AI_T_HeroesInRangeEnemy )
    //! endusercode
    //! beginusercode
    DestroyGroup ( udg_AI_T_Units )
    //! endusercode
    //! beginusercode
    RemoveLocation ( udg_AI_T_HeroPosition )
    //! endusercode
    //! beginusercode
    RemoveLocation ( udg_AI_T_DestinationPosition )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_AI_MAIN_END takes nothing returns nothing
    set gg_trg_AI_MAIN_END = CreateTrigger(  )
    call DisableTrigger( gg_trg_AI_MAIN_END )
    call TriggerAddAction( gg_trg_AI_MAIN_END, function Trig_AI_MAIN_END_Actions )
endfunction

//===========================================================================
// Trigger: STATE Attack Hero
//===========================================================================
function Trig_STATE_Attack_Hero_Func002002003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == true )
endfunction

function Trig_STATE_Attack_Hero_Func002002003002 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(udg_UNIT_AI_CurHero)) == true )
endfunction

function Trig_STATE_Attack_Hero_Func002002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_STATE_Attack_Hero_Func002002003001(), Trig_STATE_Attack_Hero_Func002002003002() )
endfunction

function Trig_STATE_Attack_Hero_Actions takes nothing returns nothing
    //! beginusercode
    DestroyGroup ( udg_GRP_AI_HeroesAroundHero )
    //! endusercode
    set udg_GRP_AI_HeroesAroundHero = GetUnitsInRangeOfLocMatching(700.00, udg_TEMP_Pos_Hero, Condition(function Trig_STATE_Attack_Hero_Func002002003))
    set udg_AI_PursueHero[udg_INT_AI_Player] = GroupPickRandomUnit(udg_GRP_AI_HeroesAroundHero)
    //! beginusercode
    RemoveLocation ( udg_POINT_AI_PursueStart [ udg_INT_AI_Player ] )
    //! endusercode
    set udg_POINT_AI_PursueStart[udg_INT_AI_Player] = udg_TEMP_Pos_Hero
    set udg_BOOL_AI_AttackingHero[udg_INT_AI_Player] = true
    call IssueTargetOrderBJ( udg_UNIT_AI_CurHero, "attack", udg_AI_PursueHero[udg_INT_AI_Player] )
endfunction

//===========================================================================
function InitTrig_STATE_Attack_Hero takes nothing returns nothing
    set gg_trg_STATE_Attack_Hero = CreateTrigger(  )
    call TriggerAddAction( gg_trg_STATE_Attack_Hero, function Trig_STATE_Attack_Hero_Actions )
endfunction

//===========================================================================
// Trigger: STATE Stop Following Hero
//===========================================================================
function Trig_STATE_Stop_Following_Hero_Actions takes nothing returns nothing
    call IssuePointOrderLocBJ( udg_UNIT_AI_CurHero, "attack", udg_POINT_AI_Destination[udg_INT_AI_Player] )
    set udg_BOOL_AI_AttackingHero[udg_INT_AI_Player] = false
    call DisplayTextToForce( GetPlayersAll(), GetUnitName(udg_AI_PursueHero[udg_INT_AI_Player]) )
    call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_3910" )
endfunction

//===========================================================================
function InitTrig_STATE_Stop_Following_Hero takes nothing returns nothing
    set gg_trg_STATE_Stop_Following_Hero = CreateTrigger(  )
    call TriggerAddAction( gg_trg_STATE_Stop_Following_Hero, function Trig_STATE_Stop_Following_Hero_Actions )
endfunction

//===========================================================================
// Trigger: STATE High Health
//===========================================================================
function Trig_STATE_High_Health_Conditions takes nothing returns boolean
    if ( not ( udg_AI_B_Alive[udg_AI_Loop] == true ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Low_Health[udg_AI_Loop] == true ) ) then
        return false
    endif
    if ( not ( udg_AI_T_SnapLifePercent >= udg_AI_Strat_Heal_HighPercent[udg_AI_Loop] ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_High_Health_Func010C takes nothing returns boolean
    if ( not ( udg_TEMP_Int == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_High_Health_Actions takes nothing returns nothing
    set udg_AI_Strat_Heal_LowPercent[udg_AI_Index] = ( udg_AI_Strat_Heal_LowPercent[udg_AI_Loop] - 1.00 )
    set udg_AI_Strat_Heal_HighPercent[udg_AI_Loop] = ( udg_AI_Strat_Heal_HighPercent[udg_AI_Loop] - 1.00 )
    set udg_AI_B_Low_Health[udg_AI_Loop] = false
    set udg_AI_B_Fleeing[udg_AI_Loop] = false
    set udg_AI_T_DestinationPosition = GetUnitLoc(udg_AI_Destination[udg_AI_Loop])
    set udg_TEMP_Int = GetRandomInt(1, 3)
    if ( Trig_STATE_High_Health_Func010C() ) then
        call TriggerExecute( gg_trg_AI_Attack_a_Base )
    else
        call TriggerExecute( gg_trg_AI_Continue_to_Destination )
    endif
endfunction

//===========================================================================
function InitTrig_STATE_High_Health takes nothing returns nothing
    set gg_trg_STATE_High_Health = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_High_Health, Condition( function Trig_STATE_High_Health_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_High_Health, function Trig_STATE_High_Health_Actions )
endfunction

//===========================================================================
// Trigger: STATE Update Destination
//===========================================================================
function Trig_STATE_Update_Destination_Conditions takes nothing returns boolean
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Alive[udg_AI_Loop] == true ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Update_Dest[udg_AI_Loop] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Update_Destination_Func005C takes nothing returns boolean
    if ( not ( udg_AI_B_Low_Health[udg_AI_Loop] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Update_Destination_Actions takes nothing returns nothing
    set udg_AI_B_Update_Dest[udg_AI_Loop] = false
    if ( Trig_STATE_Update_Destination_Func005C() ) then
        call TriggerExecute( gg_trg_AI_Go_To_Closest_Heal )
    else
        call TriggerExecute( gg_trg_AI_Attack_a_Base )
    endif
endfunction

//===========================================================================
function InitTrig_STATE_Update_Destination takes nothing returns nothing
    set gg_trg_STATE_Update_Destination = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_Update_Destination, Condition( function Trig_STATE_Update_Destination_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_Update_Destination, function Trig_STATE_Update_Destination_Actions )
endfunction

//===========================================================================
// Trigger: STATE Spell Finished Casting
//===========================================================================
function Trig_STATE_Spell_Finished_Casting_Conditions takes nothing returns boolean
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Spell_Finished_Casting_Func001Func001C takes nothing returns boolean
    if ( not ( udg_AI_B_Cast_Spell_Counter[udg_AI_Loop] > 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Spell_Finished_Casting_Func001Func002C takes nothing returns boolean
    if ( not ( udg_AI_CurrentOrder[udg_AI_Loop] != OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop])) ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Spell_Finished_Casting_Func001C takes nothing returns boolean
    if ( not ( udg_AI_B_Cast_Spell_Counter[udg_AI_Loop] == -10.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Spell_Finished_Casting_Actions takes nothing returns nothing
    if ( Trig_STATE_Spell_Finished_Casting_Func001C() ) then
        if ( Trig_STATE_Spell_Finished_Casting_Func001Func002C() ) then
            call ConditionalTriggerExecute( gg_trg_AI_Continue_to_Destination )
            set udg_AI_B_Cast_Spell[udg_AI_Loop] = false
            set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
        else
        endif
    else
        if ( Trig_STATE_Spell_Finished_Casting_Func001Func001C() ) then
            set udg_AI_B_Cast_Spell_Counter[udg_AI_Loop] = ( udg_AI_B_Cast_Spell_Counter[udg_AI_Loop] - 1.50 )
        else
            call ConditionalTriggerExecute( gg_trg_AI_Continue_to_Destination )
            set udg_AI_B_Cast_Spell[udg_AI_Loop] = false
            set udg_AI_B_Cast_Spell_Counter[udg_AI_Loop] = -10.00
            set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
        endif
    endif
endfunction

//===========================================================================
function InitTrig_STATE_Spell_Finished_Casting takes nothing returns nothing
    set gg_trg_STATE_Spell_Finished_Casting = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_Spell_Finished_Casting, Condition( function Trig_STATE_Spell_Finished_Casting_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_Spell_Finished_Casting, function Trig_STATE_Spell_Finished_Casting_Actions )
endfunction

//===========================================================================
// Trigger: STATE Revives
//===========================================================================
function Trig_STATE_Revives_Conditions takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(udg_AI_Hero[udg_AI_Loop]) == true ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Alive[udg_AI_Loop] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Revives_Actions takes nothing returns nothing
    set udg_AI_B_Alive[udg_AI_Loop] = true
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = false
    set udg_AI_B_Cast_Spell_Counter[udg_AI_Loop] = -10.00
    set udg_AI_B_Cast_ULT[udg_AI_Loop] = false
    set udg_AI_B_Defending[udg_AI_Loop] = false
    set udg_AI_B_Fleeing[udg_AI_Loop] = false
    set udg_AI_B_Low_Health[udg_AI_Loop] = false
    set udg_AI_B_Update_Dest[udg_AI_Loop] = false
    set udg_AI_B_Taking_Heavy_Damage[udg_AI_Loop] = false
    call ConditionalTriggerExecute( gg_trg_AI_Attack_a_Base )
endfunction

//===========================================================================
function InitTrig_STATE_Revives takes nothing returns nothing
    set gg_trg_STATE_Revives = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_Revives, Condition( function Trig_STATE_Revives_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_Revives, function Trig_STATE_Revives_Actions )
endfunction

//===========================================================================
// Trigger: STATE Upgrade Hero
//===========================================================================
function Trig_STATE_Upgrade_Hero_Conditions takes nothing returns boolean
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Alive[udg_AI_Loop] == true ) ) then
        return false
    endif
    if ( not ( GetRandomInt(1, 30) == 20 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Upgrade_Hero_Func004C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Loop]) == 'H00R' ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Upgrade_Hero_Func005C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Loop]) == 'E001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Upgrade_Hero_Func006C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Loop]) == 'E002' ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Upgrade_Hero_Func007C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Loop]) == 'H009' ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Upgrade_Hero_Func008C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_AI_Hero[udg_AI_Loop]) == 'H00J' ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Upgrade_Hero_Actions takes nothing returns nothing
    if ( Trig_STATE_Upgrade_Hero_Func004C() ) then
        call IssueUpgradeOrderByIdBJ( udg_Alters[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))], 'R00C' )
        call IssueUpgradeOrderByIdBJ( udg_Alters[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))], 'R007' )
        call IssueUpgradeOrderByIdBJ( udg_Alters[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))], 'R000' )
    else
    endif
    if ( Trig_STATE_Upgrade_Hero_Func005C() ) then
        call IssueUpgradeOrderByIdBJ( udg_Alters[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))], 'R008' )
        call IssueUpgradeOrderByIdBJ( udg_Alters[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))], 'R00A' )
        call IssueUpgradeOrderByIdBJ( udg_Alters[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))], 'R000' )
    else
    endif
    if ( Trig_STATE_Upgrade_Hero_Func006C() ) then
        call IssueUpgradeOrderByIdBJ( udg_Alters[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))], 'R00D' )
        call IssueUpgradeOrderByIdBJ( udg_Alters[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))], 'R002' )
        call IssueUpgradeOrderByIdBJ( udg_Alters[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))], 'R000' )
    else
    endif
    if ( Trig_STATE_Upgrade_Hero_Func007C() ) then
        call IssueUpgradeOrderByIdBJ( udg_Alters[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))], 'R000' )
    else
    endif
    if ( Trig_STATE_Upgrade_Hero_Func008C() ) then
        call IssueUpgradeOrderByIdBJ( udg_Alters[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))], 'R000' )
    else
    endif
endfunction

//===========================================================================
function InitTrig_STATE_Upgrade_Hero takes nothing returns nothing
    set gg_trg_STATE_Upgrade_Hero = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_Upgrade_Hero, Condition( function Trig_STATE_Upgrade_Hero_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_Upgrade_Hero, function Trig_STATE_Upgrade_Hero_Actions )
endfunction

//===========================================================================
// Trigger: STATE Dead
//===========================================================================
function Trig_STATE_Dead_Conditions takes nothing returns boolean
    if ( not ( IsUnitDeadBJ(udg_AI_Hero[udg_AI_Loop]) == true ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Alive[udg_AI_Loop] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Dead_Func003C takes nothing returns boolean
    if ( not ( udg_AI_Strat_Heal_HighPercent[udg_AI_Loop] < 98.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Dead_Actions takes nothing returns nothing
    set udg_AI_Strat_Heal_LowPercent[udg_AI_Index] = ( udg_AI_Strat_Heal_LowPercent[udg_AI_Loop] + 4.00 )
    set udg_AI_Strat_Power_Base[udg_AI_Loop] = ( udg_AI_Strat_Power_Base[udg_AI_Loop] * 0.50 )
    if ( Trig_STATE_Dead_Func003C() ) then
        set udg_AI_Strat_Heal_HighPercent[udg_AI_Loop] = ( udg_AI_Strat_Heal_HighPercent[udg_AI_Loop] + 2.00 )
    else
    endif
    set udg_AI_B_Alive[udg_AI_Loop] = false
endfunction

//===========================================================================
function InitTrig_STATE_Dead takes nothing returns nothing
    set gg_trg_STATE_Dead = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_Dead, Condition( function Trig_STATE_Dead_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_Dead, function Trig_STATE_Dead_Actions )
endfunction

//===========================================================================
// Trigger: STATE Low Health
//===========================================================================
function Trig_STATE_Low_Health_Func003C takes nothing returns boolean
    if ( ( udg_AI_T_SnapLifePercent <= udg_AI_Strat_Heal_LowPercent[udg_AI_Loop] ) ) then
        return true
    endif
    if ( ( udg_AI_T_SnapLifeCurrent <= udg_AI_Strat_Heal_LowNumber[udg_AI_Loop] ) ) then
        return true
    endif
    return false
endfunction

function Trig_STATE_Low_Health_Conditions takes nothing returns boolean
    if ( not Trig_STATE_Low_Health_Func003C() ) then
        return false
    endif
    if ( not ( udg_AI_B_Low_Health[udg_AI_Loop] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Low_Health_Actions takes nothing returns nothing
    //  
    set udg_AI_Strat_Power_Base[udg_AI_Loop] = ( udg_AI_Strat_Power_Base[udg_AI_Loop] * 0.60 )
    set udg_AI_B_Low_Health[udg_AI_Loop] = true
    set udg_AI_B_Chasing[udg_AI_Loop] = false
    set udg_AI_B_Fleeing[udg_AI_Loop] = false
    call ConditionalTriggerExecute( gg_trg_AI_Go_To_Closest_Heal )
endfunction

//===========================================================================
function InitTrig_STATE_Low_Health takes nothing returns nothing
    set gg_trg_STATE_Low_Health = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_Low_Health, Condition( function Trig_STATE_Low_Health_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_Low_Health, function Trig_STATE_Low_Health_Actions )
endfunction

//===========================================================================
// Trigger: STATE Recieving Heavy Damage
//===========================================================================
function Trig_STATE_Recieving_Heavy_Damage_Func003C takes nothing returns boolean
    if ( ( udg_AI_T_HealthLost1 >= udg_AI_Strat_HighDamageSingle[udg_AI_Loop] ) ) then
        return true
    endif
    if ( ( udg_AI_T_HealthLostAll >= udg_AI_Strat_HighDamageAverage[udg_AI_Loop] ) ) then
        return true
    endif
    if ( ( udg_AI_T_PowerCount >= udg_AI_T_PowerHero ) ) then
        return true
    endif
    return false
endfunction

function Trig_STATE_Recieving_Heavy_Damage_Conditions takes nothing returns boolean
    if ( not ( udg_AI_B_Low_Health[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Fleeing[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not Trig_STATE_Recieving_Heavy_Damage_Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Recieving_Heavy_Damage_Actions takes nothing returns nothing
    set udg_AI_B_Fleeing[udg_AI_Loop] = true
    call ConditionalTriggerExecute( gg_trg_AI_Go_To_Closest_Heal )
endfunction

//===========================================================================
function InitTrig_STATE_Recieving_Heavy_Damage takes nothing returns nothing
    set gg_trg_STATE_Recieving_Heavy_Damage = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_Recieving_Heavy_Damage, Condition( function Trig_STATE_Recieving_Heavy_Damage_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_Recieving_Heavy_Damage, function Trig_STATE_Recieving_Heavy_Damage_Actions )
endfunction

//===========================================================================
// Trigger: STATE Stopped Recieving Heavy Damage
//===========================================================================
function Trig_STATE_Stopped_Recieving_Heavy_Damage_Func008C takes nothing returns boolean
    if ( ( udg_AI_T_HealthLost1 < 1.00 ) ) then
        return true
    endif
    if ( ( udg_AI_T_HealthLostAll < 4.00 ) ) then
        return true
    endif
    return false
endfunction

function Trig_STATE_Stopped_Recieving_Heavy_Damage_Conditions takes nothing returns boolean
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Low_Health[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Fleeing[udg_AI_Loop] == true ) ) then
        return false
    endif
    if ( not ( udg_AI_T_PowerCount <= udg_AI_T_PowerHero ) ) then
        return false
    endif
    if ( not Trig_STATE_Stopped_Recieving_Heavy_Damage_Func008C() ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Stopped_Recieving_Heavy_Damage_Func002C takes nothing returns boolean
    if ( not ( udg_AI_B_Chasing[udg_AI_Loop] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_Stopped_Recieving_Heavy_Damage_Actions takes nothing returns nothing
    if ( Trig_STATE_Stopped_Recieving_Heavy_Damage_Func002C() ) then
        set udg_AI_T_DestinationPosition = GetUnitLoc(udg_AI_ChaseHero[udg_AI_Loop])
    else
        set udg_AI_T_DestinationPosition = GetUnitLoc(udg_AI_Destination[udg_AI_Loop])
    endif
    set udg_AI_B_Fleeing[udg_AI_Loop] = false
    call ConditionalTriggerExecute( gg_trg_AI_Continue_to_Destination )
endfunction

//===========================================================================
function InitTrig_STATE_Stopped_Recieving_Heavy_Damage takes nothing returns nothing
    set gg_trg_STATE_Stopped_Recieving_Heavy_Damage = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_Stopped_Recieving_Heavy_Damage, Condition( function Trig_STATE_Stopped_Recieving_Heavy_Damage_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_Stopped_Recieving_Heavy_Damage, function Trig_STATE_Stopped_Recieving_Heavy_Damage_Actions )
endfunction

//===========================================================================
// Trigger: AI MAIN Tactition
//===========================================================================
function Trig_AI_MAIN_Tactition_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_STATE_CAST_Iron_Defense )
    call ConditionalTriggerExecute( gg_trg_STATE_CAST_Inspire )
    call ConditionalTriggerExecute( gg_trg_STATE_CAST_Attack )
endfunction

//===========================================================================
function InitTrig_AI_MAIN_Tactition takes nothing returns nothing
    set gg_trg_AI_MAIN_Tactition = CreateTrigger(  )
    call TriggerAddAction( gg_trg_AI_MAIN_Tactition, function Trig_AI_MAIN_Tactition_Actions )
endfunction

//===========================================================================
// Trigger: STATE CAST Iron Defense
//===========================================================================
function Trig_STATE_CAST_Iron_Defense_Func007C takes nothing returns boolean
    if ( ( udg_AI_T_CloseCountEnemy >= 6 ) ) then
        return true
    endif
    if ( ( udg_AI_T_SnapLifePercent <= 50.00 ) ) then
        return true
    endif
    if ( ( udg_AI_T_HealthLostAll >= udg_AI_Strat_HighDamageAverage[udg_AI_Loop] ) ) then
        return true
    endif
    return false
endfunction

function Trig_STATE_CAST_Iron_Defense_Conditions takes nothing returns boolean
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A019') == 0.00 ) ) then
        return false
    endif
    if ( not ( UnitHasBuffBJ(udg_AI_Hero[udg_AI_Loop], 'B005') == false ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( GetUnitAbilityLevelSwapped('A019', udg_AI_Hero[udg_AI_Loop]) >= 1 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_ManaCurrent >= I2R(BlzGetAbilityManaCost('A019', GetUnitAbilityLevelSwapped('A019', udg_AI_Hero[udg_AI_Loop]))) ) ) then
        return false
    endif
    if ( not ( udg_AI_T_SnapLifePercent <= 90.00 ) ) then
        return false
    endif
    if ( not Trig_STATE_CAST_Iron_Defense_Func007C() ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Iron_Defense_Actions takes nothing returns nothing
    call IssueImmediateOrderBJ( udg_AI_Hero[udg_AI_Loop], "battleroar" )
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
endfunction

//===========================================================================
function InitTrig_STATE_CAST_Iron_Defense takes nothing returns nothing
    set gg_trg_STATE_CAST_Iron_Defense = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_CAST_Iron_Defense, Condition( function Trig_STATE_CAST_Iron_Defense_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_CAST_Iron_Defense, function Trig_STATE_CAST_Iron_Defense_Actions )
endfunction

//===========================================================================
// Trigger: STATE CAST Inspire
//===========================================================================
function Trig_STATE_CAST_Inspire_Func004Func001C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('A042', udg_AI_Hero[udg_AI_Loop]) == 1 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_CloseCountFriendly >= 4 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Inspire_Func004Func002C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('A042', udg_AI_Hero[udg_AI_Loop]) == 2 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_CloseCountFriendly >= 7 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Inspire_Func004Func003C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('A042', udg_AI_Hero[udg_AI_Loop]) == 3 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_CloseCountFriendly >= 9 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Inspire_Func004C takes nothing returns boolean
    if ( Trig_STATE_CAST_Inspire_Func004Func001C() ) then
        return true
    endif
    if ( Trig_STATE_CAST_Inspire_Func004Func002C() ) then
        return true
    endif
    if ( Trig_STATE_CAST_Inspire_Func004Func003C() ) then
        return true
    endif
    return false
endfunction

function Trig_STATE_CAST_Inspire_Conditions takes nothing returns boolean
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A042') == 0.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( udg_AI_T_ManaCurrent >= I2R(BlzGetAbilityManaCost('A042', GetUnitAbilityLevelSwapped('A042', udg_AI_Hero[udg_AI_Loop]))) ) ) then
        return false
    endif
    if ( not Trig_STATE_CAST_Inspire_Func004C() ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Inspire_Actions takes nothing returns nothing
    call IssueImmediateOrderBJ( udg_AI_Hero[udg_AI_Loop], "tranquility" )
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
endfunction

//===========================================================================
function InitTrig_STATE_CAST_Inspire takes nothing returns nothing
    set gg_trg_STATE_CAST_Inspire = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_CAST_Inspire, Condition( function Trig_STATE_CAST_Inspire_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_CAST_Inspire, function Trig_STATE_CAST_Inspire_Actions )
endfunction

//===========================================================================
// Trigger: STATE CAST Attack
//===========================================================================
function Trig_STATE_CAST_Attack_Conditions takes nothing returns boolean
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A01B') == 0.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( GetUnitAbilityLevelSwapped('A01B', udg_AI_Hero[udg_AI_Loop]) >= 1 ) ) then
        return false
    endif
    if ( not ( ( udg_AI_T_ManaCurrent + 50.00 ) >= I2R(BlzGetAbilityManaCost('A01B', GetUnitAbilityLevelSwapped('A01B', udg_AI_Hero[udg_AI_Loop]))) ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(udg_AI_T_HeroesInRangeEnemy) >= 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Attack_Actions takes nothing returns nothing
    call IssueTargetOrderBJ( udg_AI_Hero[udg_AI_Loop], "firebolt", GroupPickRandomUnit(udg_AI_T_HeroesInRangeEnemy) )
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
endfunction

//===========================================================================
function InitTrig_STATE_CAST_Attack takes nothing returns nothing
    set gg_trg_STATE_CAST_Attack = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_CAST_Attack, Condition( function Trig_STATE_CAST_Attack_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_CAST_Attack, function Trig_STATE_CAST_Attack_Actions )
endfunction

//===========================================================================
// Trigger: AI MAIN Mana Addict
//===========================================================================
function Trig_AI_MAIN_Mana_Addict_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_STATE_CAST_Mana_Shield )
    call ConditionalTriggerExecute( gg_trg_STATE_CAST_Frost_Nova )
endfunction

//===========================================================================
function InitTrig_AI_MAIN_Mana_Addict takes nothing returns nothing
    set gg_trg_AI_MAIN_Mana_Addict = CreateTrigger(  )
    call TriggerAddAction( gg_trg_AI_MAIN_Mana_Addict, function Trig_AI_MAIN_Mana_Addict_Actions )
endfunction

//===========================================================================
// Trigger: STATE CAST Mana Shield
//===========================================================================
function Trig_STATE_CAST_Mana_Shield_Conditions takes nothing returns boolean
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A001') == 0.00 ) ) then
        return false
    endif
    if ( not ( UnitHasBuffBJ(udg_AI_Hero[udg_AI_Loop], 'BNms') == false ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Mana_Shield_Actions takes nothing returns nothing
    call IssueImmediateOrderBJ( udg_AI_Hero[udg_AI_Loop], "manashieldon" )
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
    set udg_AI_B_Cast_Spell_Counter[udg_AI_Loop] = 1.50
endfunction

//===========================================================================
function InitTrig_STATE_CAST_Mana_Shield takes nothing returns nothing
    set gg_trg_STATE_CAST_Mana_Shield = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_CAST_Mana_Shield, Condition( function Trig_STATE_CAST_Mana_Shield_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_CAST_Mana_Shield, function Trig_STATE_CAST_Mana_Shield_Actions )
endfunction

//===========================================================================
// Trigger: STATE CAST Frost Nova
//===========================================================================
function Trig_STATE_CAST_Frost_Nova_Conditions takes nothing returns boolean
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A03S') == 0.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( GetUnitAbilityLevelSwapped('A03S', udg_AI_Hero[udg_AI_Loop]) >= 1 ) ) then
        return false
    endif
    if ( not ( ( udg_AI_T_ManaCurrent + 50.00 ) >= I2R(BlzGetAbilityManaCost('A03S', GetUnitAbilityLevelSwapped('A03S', udg_AI_Hero[udg_AI_Loop]))) ) ) then
        return false
    endif
    if ( not ( udg_AI_T_ClumpEnemyScore >= 70.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Frost_Nova_Actions takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(udg_AI_T_ClumpEnemyUnit)
    call IssuePointOrderLocBJ( udg_AI_Hero[udg_AI_Loop], "flamestrike", udg_TEMP_Pos2 )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
    //  
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
endfunction

//===========================================================================
function InitTrig_STATE_CAST_Frost_Nova takes nothing returns nothing
    set gg_trg_STATE_CAST_Frost_Nova = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_CAST_Frost_Nova, Condition( function Trig_STATE_CAST_Frost_Nova_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_CAST_Frost_Nova, function Trig_STATE_CAST_Frost_Nova_Actions )
endfunction

//===========================================================================
// Trigger: AI MAIN Shifter
//===========================================================================
function Trig_AI_MAIN_Shifter_Func001002003001 takes nothing returns boolean
    return ( IsUnitIllusionBJ(GetFilterUnit()) == true )
endfunction

function Trig_AI_MAIN_Shifter_Func001002003002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]) )
endfunction

function Trig_AI_MAIN_Shifter_Func001002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_AI_MAIN_Shifter_Func001002003001(), Trig_AI_MAIN_Shifter_Func001002003002() )
endfunction

function Trig_AI_MAIN_Shifter_Actions takes nothing returns nothing
    set udg_AI_T_IllusionsNearby = GetUnitsInRangeOfLocMatching(512, udg_AI_T_HeroPosition, Condition(function Trig_AI_MAIN_Shifter_Func001002003))
    //  
    call ConditionalTriggerExecute( gg_trg_STATE_CAST_Shift_Back )
    call ConditionalTriggerExecute( gg_trg_STATE_CAST_Shift_Forward )
    call ConditionalTriggerExecute( gg_trg_STATE_CAST_Bladestorm )
    //  
    //! beginusercode
    DestroyGroup ( udg_AI_T_IllusionsNearby )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_AI_MAIN_Shifter takes nothing returns nothing
    set gg_trg_AI_MAIN_Shifter = CreateTrigger(  )
    call TriggerAddAction( gg_trg_AI_MAIN_Shifter, function Trig_AI_MAIN_Shifter_Actions )
endfunction

//===========================================================================
// Trigger: STATE CAST Shift Back
//===========================================================================
function Trig_STATE_CAST_Shift_Back_Conditions takes nothing returns boolean
    if ( not ( udg_AI_B_Low_Health[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A03U') == 0.00 ) ) then
        return false
    endif
    if ( not ( GetUnitAbilityLevelSwapped('A03U', udg_AI_Hero[udg_AI_Loop]) >= 1 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_ManaCurrent >= 40.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_CloseCountEnemy >= 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Shift_Back_Actions takes nothing returns nothing
    //! beginusercode
    IssueImmediateOrder ( udg_AI_Hero[udg_AI_Loop], "stomp" )
    //! endusercode
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
endfunction

//===========================================================================
function InitTrig_STATE_CAST_Shift_Back takes nothing returns nothing
    set gg_trg_STATE_CAST_Shift_Back = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_CAST_Shift_Back, Condition( function Trig_STATE_CAST_Shift_Back_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_CAST_Shift_Back, function Trig_STATE_CAST_Shift_Back_Actions )
endfunction

//===========================================================================
// Trigger: STATE CAST Shift Forward
//===========================================================================
function Trig_STATE_CAST_Shift_Forward_Conditions takes nothing returns boolean
    if ( not ( udg_AI_B_Low_Health[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A030') == 0.00 ) ) then
        return false
    endif
    if ( not ( GetUnitAbilityLevelSwapped('A030', udg_AI_Hero[udg_AI_Loop]) >= 1 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_ManaCurrent >= 40.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_CloseCountEnemy >= 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Shift_Forward_Actions takes nothing returns nothing
    //! beginusercode
    IssueImmediateOrder ( udg_AI_Hero[udg_AI_Loop], "thunderclap" )
    //! endusercode
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
endfunction

//===========================================================================
function InitTrig_STATE_CAST_Shift_Forward takes nothing returns nothing
    set gg_trg_STATE_CAST_Shift_Forward = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_CAST_Shift_Forward, Condition( function Trig_STATE_CAST_Shift_Forward_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_CAST_Shift_Forward, function Trig_STATE_CAST_Shift_Forward_Actions )
endfunction

//===========================================================================
// Trigger: STATE CAST Bladestorm
//===========================================================================
function Trig_STATE_CAST_Bladestorm_Conditions takes nothing returns boolean
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A03C') == 0.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_CloseCountEnemy >= 6 ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(udg_AI_T_IllusionsNearby) >= 2 ) ) then
        return false
    endif
    if ( not ( GetUnitAbilityLevelSwapped('A03C', udg_AI_Hero[udg_AI_Loop]) >= 1 ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Low_Health[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( udg_AI_T_ManaCurrent >= 110.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Bladestorm_Actions takes nothing returns nothing
    //! beginusercode
    IssueImmediateOrder ( udg_AI_Hero[udg_AI_Loop], "channel" )
    //! endusercode
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
endfunction

//===========================================================================
function InitTrig_STATE_CAST_Bladestorm takes nothing returns nothing
    set gg_trg_STATE_CAST_Bladestorm = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_CAST_Bladestorm, Condition( function Trig_STATE_CAST_Bladestorm_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_CAST_Bladestorm, function Trig_STATE_CAST_Bladestorm_Actions )
endfunction

//===========================================================================
// Trigger: AI MAIN Brawler
//===========================================================================
function Trig_AI_MAIN_Brawler_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_STATE_CAST_Drain )
    call ConditionalTriggerExecute( gg_trg_STATE_CAST_Unleash_Rage )
endfunction

//===========================================================================
function InitTrig_AI_MAIN_Brawler takes nothing returns nothing
    set gg_trg_AI_MAIN_Brawler = CreateTrigger(  )
    call TriggerAddAction( gg_trg_AI_MAIN_Brawler, function Trig_AI_MAIN_Brawler_Actions )
endfunction

//===========================================================================
// Trigger: STATE CAST Drain
//===========================================================================
function Trig_STATE_CAST_Drain_Conditions takes nothing returns boolean
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A01Y') == 0.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_CloseCountEnemy >= 4 ) ) then
        return false
    endif
    if ( not ( GetUnitAbilityLevelSwapped('A01Y', udg_AI_Hero[udg_AI_Loop]) >= 1 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_ManaCurrent >= 85.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_SnapLifePercent <= 90.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Drain_Actions takes nothing returns nothing
    call IssueImmediateOrderBJ( udg_AI_Hero[udg_AI_Loop], "thunderclap" )
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
endfunction

//===========================================================================
function InitTrig_STATE_CAST_Drain takes nothing returns nothing
    set gg_trg_STATE_CAST_Drain = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_CAST_Drain, Condition( function Trig_STATE_CAST_Drain_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_CAST_Drain, function Trig_STATE_CAST_Drain_Actions )
endfunction

//===========================================================================
// Trigger: STATE CAST Unleash Rage
//===========================================================================
function Trig_STATE_CAST_Unleash_Rage_Conditions takes nothing returns boolean
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A01V') == 0.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_T_CloseCountEnemy >= 6 ) ) then
        return false
    endif
    if ( not ( GetUnitAbilityLevelSwapped('A029', udg_AI_Hero[udg_AI_Loop]) >= 1 ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Low_Health[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( udg_AI_T_ManaCurrent >= 110.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Unleash_Rage_Actions takes nothing returns nothing
    call IssueImmediateOrderBJ( udg_AI_Hero[udg_AI_Loop], "channel" )
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
endfunction

//===========================================================================
function InitTrig_STATE_CAST_Unleash_Rage takes nothing returns nothing
    set gg_trg_STATE_CAST_Unleash_Rage = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_CAST_Unleash_Rage, Condition( function Trig_STATE_CAST_Unleash_Rage_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_CAST_Unleash_Rage, function Trig_STATE_CAST_Unleash_Rage_Actions )
endfunction

//===========================================================================
// Trigger: AI MAIN Time Mage
//===========================================================================
function Trig_AI_MAIN_Time_Mage_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_STATE_CAST_Time_Travel )
    call ConditionalTriggerExecute( gg_trg_STATE_CAST_Chrono_Atrophy )
endfunction

//===========================================================================
function InitTrig_AI_MAIN_Time_Mage takes nothing returns nothing
    set gg_trg_AI_MAIN_Time_Mage = CreateTrigger(  )
    call TriggerAddAction( gg_trg_AI_MAIN_Time_Mage, function Trig_AI_MAIN_Time_Mage_Actions )
endfunction

//===========================================================================
// Trigger: STATE CAST Time Travel
//===========================================================================
function Trig_STATE_CAST_Time_Travel_Conditions takes nothing returns boolean
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A04P') == 0.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( GetUnitAbilityLevelSwapped('A04P', udg_AI_Hero[udg_AI_Loop]) >= 1 ) ) then
        return false
    endif
    if ( not ( ( udg_AI_T_ManaCurrent + 50.00 ) >= I2R(BlzGetAbilityManaCost('A04P', GetUnitAbilityLevelSwapped('A04P', udg_AI_Hero[udg_AI_Loop]))) ) ) then
        return false
    endif
    if ( not ( udg_AI_T_ClumpCombinedScore >= 70.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Time_Travel_Actions takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(udg_AI_T_ClumpCombinedUnit)
    call IssuePointOrderLocBJ( udg_AI_Hero[udg_AI_Loop], "clusterrockets", udg_TEMP_Pos2 )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
    //  
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
endfunction

//===========================================================================
function InitTrig_STATE_CAST_Time_Travel takes nothing returns nothing
    set gg_trg_STATE_CAST_Time_Travel = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_CAST_Time_Travel, Condition( function Trig_STATE_CAST_Time_Travel_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_CAST_Time_Travel, function Trig_STATE_CAST_Time_Travel_Actions )
endfunction

//===========================================================================
// Trigger: STATE CAST Chrono Atrophy
//===========================================================================
function Trig_STATE_CAST_Chrono_Atrophy_Conditions takes nothing returns boolean
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A04K') == 0.00 ) ) then
        return false
    endif
    if ( not ( udg_AI_B_Cast_Spell[udg_AI_Loop] == false ) ) then
        return false
    endif
    if ( not ( GetUnitAbilityLevelSwapped('A04K', udg_AI_Hero[udg_AI_Loop]) >= 1 ) ) then
        return false
    endif
    if ( not ( ( udg_AI_T_ManaCurrent + 50.00 ) >= I2R(BlzGetAbilityManaCost('A04K', GetUnitAbilityLevelSwapped('A04K', udg_AI_Hero[udg_AI_Loop]))) ) ) then
        return false
    endif
    if ( not ( udg_AI_T_ClumpCombinedScore >= 70.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_STATE_CAST_Chrono_Atrophy_Actions takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(udg_AI_T_ClumpCombinedUnit)
    call IssuePointOrderLocBJ( udg_AI_Hero[udg_AI_Loop], "flamestrike", udg_TEMP_Pos2 )
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
    set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
endfunction

//===========================================================================
function InitTrig_STATE_CAST_Chrono_Atrophy takes nothing returns nothing
    set gg_trg_STATE_CAST_Chrono_Atrophy = CreateTrigger(  )
    call TriggerAddCondition( gg_trg_STATE_CAST_Chrono_Atrophy, Condition( function Trig_STATE_CAST_Chrono_Atrophy_Conditions ) )
    call TriggerAddAction( gg_trg_STATE_CAST_Chrono_Atrophy, function Trig_STATE_CAST_Chrono_Atrophy_Actions )
endfunction

//===========================================================================
// Trigger: EVENT Casts a Spell
//===========================================================================
function Trig_EVENT_Casts_a_Spell_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetTriggerUnit(), GetUnitsInRectAll(GetPlayableMapRect())) == true ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetSpellAbilityUnit(), UNIT_TYPE_HERO) == true ) ) then
        return false
    endif
    if ( not ( GetPlayerController(GetOwningPlayer(GetSpellAbilityUnit())) == MAP_CONTROL_COMPUTER ) ) then
        return false
    endif
    return true
endfunction

function Trig_EVENT_Casts_a_Spell_Actions takes nothing returns nothing
    set udg_AI_B_Cast_Spell[GetUnitUserData(GetSpellAbilityUnit())] = true
    set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
endfunction

//===========================================================================
function InitTrig_EVENT_Casts_a_Spell takes nothing returns nothing
    set gg_trg_EVENT_Casts_a_Spell = CreateTrigger(  )
    call DisableTrigger( gg_trg_EVENT_Casts_a_Spell )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_EVENT_Casts_a_Spell, EVENT_PLAYER_UNIT_SPELL_FINISH )
    call TriggerAddCondition( gg_trg_EVENT_Casts_a_Spell, Condition( function Trig_EVENT_Casts_a_Spell_Conditions ) )
    call TriggerAddAction( gg_trg_EVENT_Casts_a_Spell, function Trig_EVENT_Casts_a_Spell_Actions )
endfunction

//===========================================================================
// Trigger: EVENT Base Dies
//===========================================================================
function Trig_EVENT_Base_Dies_Func004C takes nothing returns boolean
    if ( ( IsUnitInGroup(GetDyingUnit(), udg_UNIT_Bases[1]) == true ) ) then
        return true
    endif
    if ( ( IsUnitInGroup(GetDyingUnit(), udg_UNIT_Bases[2]) == true ) ) then
        return true
    endif
    if ( ( IsUnitInGroup(GetDyingUnit(), udg_UNIT_Healing[1]) == true ) ) then
        return true
    endif
    if ( ( IsUnitInGroup(GetDyingUnit(), udg_UNIT_Healing[2]) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_EVENT_Base_Dies_Conditions takes nothing returns boolean
    if ( not Trig_EVENT_Base_Dies_Func004C() ) then
        return false
    endif
    return true
endfunction

function Trig_EVENT_Base_Dies_Func002Func007A takes nothing returns nothing
    call SetPlayerHandicapXPBJ( GetEnumPlayer(), ( GetPlayerHandicapXPBJ(GetEnumPlayer()) + 10.00 ) )
endfunction

function Trig_EVENT_Base_Dies_Func002Func014A takes nothing returns nothing
    call SetPlayerHandicapXPBJ( GetEnumPlayer(), ( GetPlayerHandicapXPBJ(GetEnumPlayer()) + 10.00 ) )
endfunction

function Trig_EVENT_Base_Dies_Func002C takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetDyingUnit(), udg_UNIT_Bases[1]) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_EVENT_Base_Dies_Actions takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(GetDyingUnit())
    if ( Trig_EVENT_Base_Dies_Func002C() ) then
        call CreateNUnitsAtLoc( 1, 'h00W', Player(20), udg_TEMP_Pos2, bj_UNIT_FACING )
        call GroupAddUnitSimple( GetLastCreatedUnit(), udg_UNIT_Bases_Teleport[2] )
        call GroupRemoveUnitSimple( GetDyingUnit(), udg_UNIT_Bases[1] )
        call GroupRemoveUnitSimple( GetDyingUnit(), udg_UNIT_Bases_Teleport[1] )
        call GroupRemoveUnitSimple( GetDyingUnit(), udg_UNIT_Healing[2] )
        call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_3912" )
        call ForForce( udg_PLAYERGRPalliedUsers, function Trig_EVENT_Base_Dies_Func002Func014A )
    else
        call CreateNUnitsAtLoc( 1, 'h00W', Player(23), udg_TEMP_Pos2, bj_UNIT_FACING )
        call GroupAddUnitSimple( GetLastCreatedUnit(), udg_UNIT_Bases_Teleport[1] )
        call GroupRemoveUnitSimple( GetDyingUnit(), udg_UNIT_Bases_Teleport[2] )
        call GroupRemoveUnitSimple( GetDyingUnit(), udg_UNIT_Bases[2] )
        call GroupRemoveUnitSimple( GetDyingUnit(), udg_UNIT_Healing[1] )
        call DisplayTextToForce( GetPlayersAll(), "TRIGSTR_3911" )
        call ForForce( udg_PLAYERGRPfederationUsers, function Trig_EVENT_Base_Dies_Func002Func007A )
    endif
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_EVENT_Base_Dies takes nothing returns nothing
    set gg_trg_EVENT_Base_Dies = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_EVENT_Base_Dies, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_EVENT_Base_Dies, Condition( function Trig_EVENT_Base_Dies_Conditions ) )
    call TriggerAddAction( gg_trg_EVENT_Base_Dies, function Trig_EVENT_Base_Dies_Actions )
endfunction

//===========================================================================
// Trigger: AI Attack a Base
//===========================================================================
function Trig_AI_Attack_a_Base_Func006Func006Func002C takes nothing returns boolean
    if ( not ( DistanceBetweenPoints(udg_AI_T_DestinationPosition, udg_FUNC_Base_Point_TEMP) <= udg_FUNC_Base_REAL_Distance ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_Attack_a_Base_Func006Func006A takes nothing returns nothing
    set udg_FUNC_Base_Point_TEMP = GetUnitLoc(GetEnumUnit())
    if ( Trig_AI_Attack_a_Base_Func006Func006Func002C() ) then
        set udg_FUNC_Base_Unit = GetEnumUnit()
        set udg_FUNC_Base_REAL_Distance = DistanceBetweenPoints(udg_AI_T_DestinationPosition, udg_FUNC_Base_Point_TEMP)
    else
    endif
    //! beginusercode
    RemoveLocation ( udg_FUNC_Base_Point_TEMP )
    //! endusercode
    //  
endfunction

function Trig_AI_Attack_a_Base_Func006Func009C takes nothing returns boolean
    if ( not ( udg_FUNC_Base_REAL_Distance <= DistanceBetweenPoints(udg_AI_T_DestinationPosition, udg_AI_T_HeroPosition) ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_Attack_a_Base_Func006C takes nothing returns boolean
    if ( not ( UnitHasItemOfTypeBJ(udg_AI_Hero[udg_AI_Loop], 'I000') == true ) ) then
        return false
    endif
    if ( not ( BlzGetUnitAbilityCooldownRemaining(udg_AI_Hero[udg_AI_Loop], 'A01M') == 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_Attack_a_Base_Actions takes nothing returns nothing
    //  
    set udg_AI_Destination[udg_AI_Loop] = GroupPickRandomUnit(udg_UNIT_Bases[udg_INT_TeamNumber[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))]])
    //! beginusercode
    RemoveLocation ( udg_AI_T_DestinationPosition )
    //! endusercode
    set udg_AI_T_DestinationPosition = GetUnitLoc(udg_AI_Destination[udg_AI_Loop])
    //  
    if ( Trig_AI_Attack_a_Base_Func006C() ) then
        //  
        //  
        // Find base Closest to the Destination
        set udg_FUNC_Base_REAL_Distance = 100000000.00
        call ForGroupBJ( udg_UNIT_Bases_Teleport[( 3 - udg_INT_TeamNumber[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))] )], function Trig_AI_Attack_a_Base_Func006Func006A )
        //  
        //  
        if ( Trig_AI_Attack_a_Base_Func006Func009C() ) then
            call UnitUseItemTarget( udg_AI_Hero[udg_AI_Loop], GetItemOfTypeFromUnitBJ(udg_AI_Hero[udg_AI_Loop], 'I000'), udg_FUNC_Base_Unit )
            set udg_AI_CurrentOrder[udg_AI_Loop] = OrderId2StringBJ(GetUnitCurrentOrder(udg_AI_Hero[udg_AI_Loop]))
            set udg_AI_B_Cast_Spell[udg_AI_Loop] = true
            set udg_AI_B_Cast_Spell_Counter[udg_AI_Loop] = 6.00
        else
            call IssuePointOrderLocBJ( udg_AI_Hero[udg_AI_Loop], "attack", udg_AI_T_DestinationPosition )
        endif
    else
        call IssuePointOrderLocBJ( udg_AI_Hero[udg_AI_Loop], "attack", udg_AI_T_DestinationPosition )
    endif
endfunction

//===========================================================================
function InitTrig_AI_Attack_a_Base takes nothing returns nothing
    set gg_trg_AI_Attack_a_Base = CreateTrigger(  )
    call TriggerAddAction( gg_trg_AI_Attack_a_Base, function Trig_AI_Attack_a_Base_Actions )
endfunction

//===========================================================================
// Trigger: AI Go To Closest Heal
//===========================================================================
function Trig_AI_Go_To_Closest_Heal_Func002Func002002003001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_AI_Go_To_Closest_Heal_Func002Func002002003002 takes nothing returns boolean
    return ( IsUnitAlly(GetFilterUnit(), GetOwningPlayer(GetEnumUnit())) == false )
endfunction

function Trig_AI_Go_To_Closest_Heal_Func002Func002002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_AI_Go_To_Closest_Heal_Func002Func002002003001(), Trig_AI_Go_To_Closest_Heal_Func002Func002002003002() )
endfunction

function Trig_AI_Go_To_Closest_Heal_Func002Func003C takes nothing returns boolean
    if ( not ( DistanceBetweenPoints(udg_AI_T_HeroPosition, udg_TEMP_Pos2) <= udg_REAL_AI_Distance ) ) then
        return false
    endif
    if ( not ( GetUnitStateSwap(UNIT_STATE_MANA, GetEnumUnit()) >= 100.00 ) ) then
        return false
    endif
    if ( not ( CountUnitsInGroup(udg_TEMP_UnitGroup) < 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_Go_To_Closest_Heal_Func002A takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(GetEnumUnit())
    set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocMatching(1000.00, udg_TEMP_Pos2, Condition(function Trig_AI_Go_To_Closest_Heal_Func002Func002002003))
    if ( Trig_AI_Go_To_Closest_Heal_Func002Func003C() ) then
        set udg_AI_HealDestination[udg_AI_Loop] = GetEnumUnit()
        set udg_REAL_AI_Distance = DistanceBetweenPoints(udg_AI_T_HeroPosition, udg_TEMP_Pos2)
    else
    endif
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
endfunction

function Trig_AI_Go_To_Closest_Heal_Actions takes nothing returns nothing
    set udg_REAL_AI_Distance = 100000000.00
    call ForGroupBJ( udg_UNIT_Healing[udg_INT_TeamNumber[GetConvertedPlayerId(GetOwningPlayer(udg_AI_Hero[udg_AI_Loop]))]], function Trig_AI_Go_To_Closest_Heal_Func002A )
    //! beginusercode
    RemoveLocation ( udg_AI_T_DestinationPosition )
    //! endusercode
    set udg_AI_T_DestinationPosition = GetUnitLoc(udg_AI_HealDestination[udg_AI_Loop])
    call IssuePointOrderLocBJ( udg_AI_Hero[udg_AI_Loop], "move", udg_AI_T_DestinationPosition )
endfunction

//===========================================================================
function InitTrig_AI_Go_To_Closest_Heal takes nothing returns nothing
    set gg_trg_AI_Go_To_Closest_Heal = CreateTrigger(  )
    call TriggerAddAction( gg_trg_AI_Go_To_Closest_Heal, function Trig_AI_Go_To_Closest_Heal_Actions )
endfunction

//===========================================================================
// Trigger: AI Continue to Destination
//===========================================================================
function Trig_AI_Continue_to_Destination_Func001Func001C takes nothing returns boolean
    if ( ( udg_AI_B_Low_Health[udg_AI_Loop] == true ) ) then
        return true
    endif
    if ( ( udg_AI_B_Fleeing[udg_AI_Loop] == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_AI_Continue_to_Destination_Func001Func002C takes nothing returns boolean
    if ( not ( udg_AI_B_Chasing[udg_AI_Loop] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_AI_Continue_to_Destination_Func001C takes nothing returns boolean
    if ( not Trig_AI_Continue_to_Destination_Func001Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_AI_Continue_to_Destination_Actions takes nothing returns nothing
    if ( Trig_AI_Continue_to_Destination_Func001C() ) then
        call IssuePointOrderLocBJ( udg_AI_Hero[udg_AI_Loop], "move", udg_AI_T_DestinationPosition )
    else
        if ( Trig_AI_Continue_to_Destination_Func001Func002C() ) then
            call IssueTargetOrderBJ( udg_AI_Hero[udg_AI_Loop], "attack", udg_AI_Destination[udg_AI_Loop] )
        else
            call IssuePointOrderLocBJ( udg_AI_Hero[udg_AI_Loop], "attack", udg_AI_T_DestinationPosition )
        endif
    endif
endfunction

//===========================================================================
function InitTrig_AI_Continue_to_Destination takes nothing returns nothing
    set gg_trg_AI_Continue_to_Destination = CreateTrigger(  )
    call TriggerAddAction( gg_trg_AI_Continue_to_Destination, function Trig_AI_Continue_to_Destination_Actions )
endfunction

//===========================================================================
// Trigger: Camera Reset
//===========================================================================
function Trig_Camera_Reset_Actions takes nothing returns nothing
    call ResetToGameCameraForPlayer( GetTriggerPlayer(), 0 )
    call SetCameraFieldForPlayer( GetTriggerPlayer(), CAMERA_FIELD_ZOFFSET, S2R(SubStringBJ(GetEventPlayerChatString(), 7, StringLength(GetEventPlayerChatString()))), 0.00 )
endfunction

//===========================================================================
function InitTrig_Camera_Reset takes nothing returns nothing
    set gg_trg_Camera_Reset = CreateTrigger(  )
    call TriggerRegisterPlayerChatEvent( gg_trg_Camera_Reset, Player(0), "-zoom", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_Camera_Reset, Player(1), "-zoom", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_Camera_Reset, Player(2), "-zoom", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_Camera_Reset, Player(3), "-zoom", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_Camera_Reset, Player(4), "-zoom", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_Camera_Reset, Player(5), "-zoom", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_Camera_Reset, Player(6), "-zoom", false )
    call TriggerRegisterPlayerChatEvent( gg_trg_Camera_Reset, Player(7), "-zoom", false )
    call TriggerAddAction( gg_trg_Camera_Reset, function Trig_Camera_Reset_Actions )
endfunction

//===========================================================================
// Trigger: Zombie Infect
//===========================================================================
function Trig_Zombie_Infect_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetAttacker()) == 'uabo' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Zombie_Infect_Func002002003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Zombie_Infect_Func002002003002001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetAttacker())) == true )
endfunction

function Trig_Zombie_Infect_Func002002003002002 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Zombie_Infect_Func002002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Zombie_Infect_Func002002003002001(), Trig_Zombie_Infect_Func002002003002002() )
endfunction

function Trig_Zombie_Infect_Func002002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Zombie_Infect_Func002002003001(), Trig_Zombie_Infect_Func002002003002() )
endfunction

function Trig_Zombie_Infect_Func003C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_TEMP_UnitGroup) > 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Zombie_Infect_Actions takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(GetAttacker())
    set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocMatching(200.00, udg_TEMP_Pos2, Condition(function Trig_Zombie_Infect_Func002002003))
    if ( Trig_Zombie_Infect_Func003C() ) then
        set udg_TEMP_IntLoop1 = 1
        loop
            exitwhen udg_TEMP_IntLoop1 > 3
            call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(GetAttacker()), udg_TEMP_Pos2, bj_UNIT_FACING )
            call UnitApplyTimedLifeBJ( 2.00, 'BTLF', GetLastCreatedUnit() )
            call UnitAddAbilityBJ( 'A04B', GetLastCreatedUnit() )
            call IssueTargetOrderBJ( GetLastCreatedUnit(), "parasite", GroupPickRandomUnit(udg_TEMP_UnitGroup) )
            set udg_TEMP_IntLoop1 = udg_TEMP_IntLoop1 + 1
        endloop
    else
    endif
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Zombie_Infect takes nothing returns nothing
    set gg_trg_Zombie_Infect = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Zombie_Infect, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Zombie_Infect, Condition( function Trig_Zombie_Infect_Conditions ) )
    call TriggerAddAction( gg_trg_Zombie_Infect, function Trig_Zombie_Infect_Actions )
endfunction

//===========================================================================
// Trigger: Base Heal Spell
//===========================================================================
function Trig_Base_Heal_Spell_Func001Func001Func002002003001 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(GetEnumUnit())) == true )
endfunction

function Trig_Base_Heal_Spell_Func001Func001Func002002003002 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Base_Heal_Spell_Func001Func001Func002002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Base_Heal_Spell_Func001Func001Func002002003001(), Trig_Base_Heal_Spell_Func001Func001Func002002003002() )
endfunction

function Trig_Base_Heal_Spell_Func001Func001Func003Func003002003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == true )
endfunction

function Trig_Base_Heal_Spell_Func001Func001Func003Func003002003002 takes nothing returns boolean
    return ( IsUnitAlly(GetFilterUnit(), GetOwningPlayer(GetEnumUnit())) == true )
endfunction

function Trig_Base_Heal_Spell_Func001Func001Func003Func003002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Base_Heal_Spell_Func001Func001Func003Func003002003001(), Trig_Base_Heal_Spell_Func001Func001Func003Func003002003002() )
endfunction

function Trig_Base_Heal_Spell_Func001Func001Func003Func007Func003C takes nothing returns boolean
    if ( ( GetUnitLifePercent(udg_TEMP_Unit) <= 90.00 ) ) then
        return true
    endif
    if ( ( GetUnitManaPercent(udg_TEMP_Unit) <= 90.00 ) ) then
        return true
    endif
    return false
endfunction

function Trig_Base_Heal_Spell_Func001Func001Func003Func007C takes nothing returns boolean
    if ( not ( UnitHasBuffBJ(udg_TEMP_Unit, 'Brej') == false ) ) then
        return false
    endif
    if ( not Trig_Base_Heal_Spell_Func001Func001Func003Func007Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Base_Heal_Spell_Func001Func001Func003C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_TEMP_UnitGroup2) == 0 ) ) then
        return false
    endif
    if ( not ( BlzGetUnitAbilityCooldownRemaining(GetEnumUnit(), 'A027') == 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Base_Heal_Spell_Func001Func001A takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(GetEnumUnit())
    set udg_TEMP_UnitGroup2 = GetUnitsInRangeOfLocMatching(1200.00, udg_TEMP_Pos2, Condition(function Trig_Base_Heal_Spell_Func001Func001Func002002003))
    if ( Trig_Base_Heal_Spell_Func001Func001Func003C() ) then
        set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocMatching(500.00, udg_TEMP_Pos2, Condition(function Trig_Base_Heal_Spell_Func001Func001Func003Func003002003))
        set udg_TEMP_Unit = GroupPickRandomUnit(udg_TEMP_UnitGroup)
        //! beginusercode
        DestroyGroup ( udg_TEMP_UnitGroup )
        //! endusercode
        call SetUnitAbilityLevelSwapped( 'A027', GetEnumUnit(), udg_INTcreepLevel )
        if ( Trig_Base_Heal_Spell_Func001Func001Func003Func007C() ) then
            call IssueTargetOrderBJ( GetEnumUnit(), "rejuvination", udg_TEMP_Unit )
        else
        endif
    else
    endif
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup2 )
    //! endusercode
endfunction

function Trig_Base_Heal_Spell_Actions takes nothing returns nothing
    set udg_TEMP_IntLoop1 = 1
    loop
        exitwhen udg_TEMP_IntLoop1 > 2
        call ForGroupBJ( udg_UNIT_Healing[udg_TEMP_IntLoop1], function Trig_Base_Heal_Spell_Func001Func001A )
        set udg_TEMP_IntLoop1 = udg_TEMP_IntLoop1 + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Base_Heal_Spell takes nothing returns nothing
    set gg_trg_Base_Heal_Spell = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Base_Heal_Spell, 1.00 )
    call TriggerAddAction( gg_trg_Base_Heal_Spell, function Trig_Base_Heal_Spell_Actions )
endfunction

//===========================================================================
// Trigger: Upgrade to Footman
//===========================================================================
function Trig_Upgrade_to_Footman_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A03J' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Upgrade_to_Footman_Actions takes nothing returns nothing
    set udg_TEMP_Int = GetUnitUserData(GetSpellAbilityUnit())
    call ReplaceUnitBJ( GetSpellAbilityUnit(), 'hfoo', bj_UNIT_STATE_METHOD_RELATIVE )
    call SetUnitManaPercentBJ( GetLastReplacedUnitBJ(), 0.00 )
    call SetUnitUserData( GetLastReplacedUnitBJ(), udg_TEMP_Int )
    set udg_TEMP_Unit = GetLastReplacedUnitBJ()
    call ConditionalTriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Upgrade_to_Footman takes nothing returns nothing
    set gg_trg_Upgrade_to_Footman = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Upgrade_to_Footman, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Upgrade_to_Footman, Condition( function Trig_Upgrade_to_Footman_Conditions ) )
    call TriggerAddAction( gg_trg_Upgrade_to_Footman, function Trig_Upgrade_to_Footman_Actions )
endfunction

//===========================================================================
// Trigger: Upgrade to Fel Orc
//===========================================================================
function Trig_Upgrade_to_Fel_Orc_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetKillingUnitBJ()) == 'o002' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Upgrade_to_Fel_Orc_Actions takes nothing returns nothing
    set udg_TEMP_Int = GetUnitUserData(GetKillingUnitBJ())
    call ReplaceUnitBJ( GetKillingUnitBJ(), 'n00W', bj_UNIT_STATE_METHOD_RELATIVE )
    call SetUnitUserData( GetLastReplacedUnitBJ(), udg_TEMP_Int )
    set udg_TEMP_Unit = GetLastReplacedUnitBJ()
    call ConditionalTriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Upgrade_to_Fel_Orc takes nothing returns nothing
    set gg_trg_Upgrade_to_Fel_Orc = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Upgrade_to_Fel_Orc, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Upgrade_to_Fel_Orc, Condition( function Trig_Upgrade_to_Fel_Orc_Conditions ) )
    call TriggerAddAction( gg_trg_Upgrade_to_Fel_Orc, function Trig_Upgrade_to_Fel_Orc_Actions )
endfunction

//===========================================================================
// Trigger: Upgrade to Captian
//===========================================================================
function Trig_Upgrade_to_Captian_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A03K' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Upgrade_to_Captian_Actions takes nothing returns nothing
    set udg_TEMP_Int = GetUnitUserData(GetSpellAbilityUnit())
    call ReplaceUnitBJ( GetSpellAbilityUnit(), 'hcth', bj_UNIT_STATE_METHOD_RELATIVE )
    call SetUnitManaPercentBJ( GetLastReplacedUnitBJ(), 0.00 )
    call SetUnitUserData( GetLastReplacedUnitBJ(), udg_TEMP_Int )
    set udg_TEMP_Unit = GetLastReplacedUnitBJ()
    call ConditionalTriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Upgrade_to_Captian takes nothing returns nothing
    set gg_trg_Upgrade_to_Captian = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Upgrade_to_Captian, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Upgrade_to_Captian, Condition( function Trig_Upgrade_to_Captian_Conditions ) )
    call TriggerAddAction( gg_trg_Upgrade_to_Captian, function Trig_Upgrade_to_Captian_Actions )
endfunction

//===========================================================================
// Trigger: Upgrade to Scarlet Captian
//===========================================================================
function Trig_Upgrade_to_Scarlet_Captian_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A04V' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Upgrade_to_Scarlet_Captian_Actions takes nothing returns nothing
    set udg_TEMP_Int = GetUnitUserData(GetSpellAbilityUnit())
    call ReplaceUnitBJ( GetSpellAbilityUnit(), 'h012', bj_UNIT_STATE_METHOD_RELATIVE )
    call SetUnitManaPercentBJ( GetLastReplacedUnitBJ(), 0.00 )
    call SetUnitUserData( GetLastReplacedUnitBJ(), udg_TEMP_Int )
    set udg_TEMP_Unit = GetLastReplacedUnitBJ()
    call ConditionalTriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Upgrade_to_Scarlet_Captian takes nothing returns nothing
    set gg_trg_Upgrade_to_Scarlet_Captian = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Upgrade_to_Scarlet_Captian, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Upgrade_to_Scarlet_Captian, Condition( function Trig_Upgrade_to_Scarlet_Captian_Conditions ) )
    call TriggerAddAction( gg_trg_Upgrade_to_Scarlet_Captian, function Trig_Upgrade_to_Scarlet_Captian_Actions )
endfunction

//===========================================================================
// Trigger: Upgrade to Commander
//===========================================================================
function Trig_Upgrade_to_Commander_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A03L' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Upgrade_to_Commander_Actions takes nothing returns nothing
    set udg_TEMP_Int = GetUnitUserData(GetSpellAbilityUnit())
    call ReplaceUnitBJ( GetSpellAbilityUnit(), 'h00S', bj_UNIT_STATE_METHOD_RELATIVE )
    call SetUnitManaPercentBJ( GetLastReplacedUnitBJ(), 0.00 )
    call SetUnitUserData( GetLastReplacedUnitBJ(), udg_TEMP_Int )
    set udg_TEMP_Unit = GetLastReplacedUnitBJ()
    call ConditionalTriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Upgrade_to_Commander takes nothing returns nothing
    set gg_trg_Upgrade_to_Commander = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Upgrade_to_Commander, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Upgrade_to_Commander, Condition( function Trig_Upgrade_to_Commander_Conditions ) )
    call TriggerAddAction( gg_trg_Upgrade_to_Commander, function Trig_Upgrade_to_Commander_Actions )
endfunction

//===========================================================================
// Trigger: Automation Dies
//===========================================================================
function Trig_Automation_Dies_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'n00F' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Automation_Dies_Actions takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(GetDyingUnit())
    call CreateNUnitsAtLoc( 3, 'ncg2', GetOwningPlayer(GetDyingUnit()), udg_TEMP_Pos2, bj_UNIT_FACING )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Automation_Dies takes nothing returns nothing
    set gg_trg_Automation_Dies = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Automation_Dies, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Automation_Dies, Condition( function Trig_Automation_Dies_Conditions ) )
    call TriggerAddAction( gg_trg_Automation_Dies, function Trig_Automation_Dies_Actions )
endfunction

//===========================================================================
// Trigger: Boat Dies
//===========================================================================
function Trig_Boat_Dies_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'edes' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Boat_Dies_Func002C takes nothing returns boolean
    if ( not ( IsTerrainPathableBJ(udg_TEMP_Pos2, PATHING_TYPE_WALKABILITY) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Boat_Dies_Actions takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(GetDyingUnit())
    if ( Trig_Boat_Dies_Func002C() ) then
        call CreateNUnitsAtLoc( 2, 'hhes', GetOwningPlayer(GetDyingUnit()), udg_TEMP_Pos2, bj_UNIT_FACING )
        call CreateNUnitsAtLoc( 1, 'earc', GetOwningPlayer(GetDyingUnit()), udg_TEMP_Pos2, bj_UNIT_FACING )
    else
    endif
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Boat_Dies takes nothing returns nothing
    set gg_trg_Boat_Dies = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Boat_Dies, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Boat_Dies, Condition( function Trig_Boat_Dies_Conditions ) )
    call TriggerAddAction( gg_trg_Boat_Dies, function Trig_Boat_Dies_Actions )
endfunction

//===========================================================================
// Trigger: Knight Dies
//===========================================================================
function Trig_Knight_Dies_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetDyingUnit()) == 'h00L' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Knight_Dies_Actions takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(GetDyingUnit())
    call CreateNUnitsAtLoc( 1, 'h002', GetOwningPlayer(GetDyingUnit()), udg_TEMP_Pos2, bj_UNIT_FACING )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Knight_Dies takes nothing returns nothing
    set gg_trg_Knight_Dies = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Knight_Dies, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Knight_Dies, Condition( function Trig_Knight_Dies_Conditions ) )
    call TriggerAddAction( gg_trg_Knight_Dies, function Trig_Knight_Dies_Actions )
endfunction

//===========================================================================
// Trigger: Tree Treants
//===========================================================================
function Trig_Tree_Treants_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetAttackedUnitBJ()) == 'e003' ) ) then
        return false
    endif
    if ( not ( BlzGetUnitAbilityCooldownRemaining(GetAttackedUnitBJ(), 'A00L') == 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Tree_Treants_Actions takes nothing returns nothing
    call IssueImmediateOrderBJ( GetAttackedUnitBJ(), "waterelemental" )
endfunction

//===========================================================================
function InitTrig_Tree_Treants takes nothing returns nothing
    set gg_trg_Tree_Treants = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Tree_Treants, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Tree_Treants, Condition( function Trig_Tree_Treants_Conditions ) )
    call TriggerAddAction( gg_trg_Tree_Treants, function Trig_Tree_Treants_Actions )
endfunction

//===========================================================================
// Trigger: Chain Lightning
//===========================================================================
function Trig_Chain_Lightning_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetAttacker()) == 'n007' ) ) then
        return false
    endif
    if ( not ( BlzGetUnitAbilityCooldownRemaining(GetAttacker(), 'A00I') == 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Chain_Lightning_Actions takes nothing returns nothing
    call IssueTargetOrderBJ( GetAttacker(), "chainlightning", GetAttackedUnitBJ() )
endfunction

//===========================================================================
function InitTrig_Chain_Lightning takes nothing returns nothing
    set gg_trg_Chain_Lightning = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Chain_Lightning, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Chain_Lightning, Condition( function Trig_Chain_Lightning_Conditions ) )
    call TriggerAddAction( gg_trg_Chain_Lightning, function Trig_Chain_Lightning_Actions )
endfunction

//===========================================================================
// Trigger: Summon Rogues
//===========================================================================
function Trig_Summon_Rogues_Func003C takes nothing returns boolean
    if ( ( BlzGetUnitAbilityCooldownRemaining(GetAttacker(), 'A03G') == 0.00 ) ) then
        return true
    endif
    if ( ( BlzGetUnitAbilityCooldownRemaining(GetAttacker(), 'A03F') == 0.00 ) ) then
        return true
    endif
    return false
endfunction

function Trig_Summon_Rogues_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetAttacker()) == 'n00M' ) ) then
        return false
    endif
    if ( not Trig_Summon_Rogues_Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Summon_Rogues_Actions takes nothing returns nothing
    call IssueImmediateOrderBJ( GetAttacker(), "waterelemental" )
endfunction

//===========================================================================
function InitTrig_Summon_Rogues takes nothing returns nothing
    set gg_trg_Summon_Rogues = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Summon_Rogues, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Summon_Rogues, Condition( function Trig_Summon_Rogues_Conditions ) )
    call TriggerAddAction( gg_trg_Summon_Rogues, function Trig_Summon_Rogues_Actions )
endfunction

//===========================================================================
// Trigger: Energy Tower
//===========================================================================
function Trig_Energy_Tower_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetAttacker()) == 'n007' ) ) then
        return false
    endif
    if ( not ( BlzGetUnitAbilityCooldownRemaining(GetAttacker(), 'A03D') == 0.00 ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetAttackedUnitBJ(), UNIT_TYPE_GROUND) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Energy_Tower_Actions takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(GetAttackedUnitBJ())
    call IssuePointOrderLocBJ( GetAttacker(), "clusterrockets", udg_TEMP_Pos2 )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Energy_Tower takes nothing returns nothing
    set gg_trg_Energy_Tower = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Energy_Tower, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Energy_Tower, Condition( function Trig_Energy_Tower_Conditions ) )
    call TriggerAddAction( gg_trg_Energy_Tower, function Trig_Energy_Tower_Actions )
endfunction

//===========================================================================
// Trigger: Watch Tower Mana Shield
//===========================================================================
function Trig_Watch_Tower_Mana_Shield_Conditions takes nothing returns boolean
    if ( not ( GetUnitStateSwap(UNIT_STATE_MANA, GetAttacker()) >= 250.00 ) ) then
        return false
    endif
    if ( not ( UnitHasBuffBJ(GetAttacker(), 'BNms') == false ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetAttacker()) == 'n007' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Watch_Tower_Mana_Shield_Actions takes nothing returns nothing
    call IssueImmediateOrderBJ( GetAttacker(), "manashieldon" )
endfunction

//===========================================================================
function InitTrig_Watch_Tower_Mana_Shield takes nothing returns nothing
    set gg_trg_Watch_Tower_Mana_Shield = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Watch_Tower_Mana_Shield, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Watch_Tower_Mana_Shield, Condition( function Trig_Watch_Tower_Mana_Shield_Conditions ) )
    call TriggerAddAction( gg_trg_Watch_Tower_Mana_Shield, function Trig_Watch_Tower_Mana_Shield_Actions )
endfunction

//===========================================================================
// Trigger: Regrow Trees
//===========================================================================
function Trig_Regrow_Trees_Func001002 takes nothing returns nothing
    call DestructableRestoreLife( GetEnumDestructable(), GetDestructableMaxLife(GetEnumDestructable()), true )
endfunction

function Trig_Regrow_Trees_Actions takes nothing returns nothing
    call EnumDestructablesInRectAll( GetPlayableMapRect(), function Trig_Regrow_Trees_Func001002 )
endfunction

//===========================================================================
function InitTrig_Regrow_Trees takes nothing returns nothing
    set gg_trg_Regrow_Trees = CreateTrigger(  )
    call DisableTrigger( gg_trg_Regrow_Trees )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Regrow_Trees, 200.00 )
    call TriggerAddAction( gg_trg_Regrow_Trees, function Trig_Regrow_Trees_Actions )
endfunction

//===========================================================================
// Trigger: Pathing INIT
//===========================================================================
function Trig_Pathing_INIT_Actions takes nothing returns nothing
    call InitHashtableBJ(  )
    set udg_Ordered_Unit_Queue = GetLastCreatedHashtableBJ()
endfunction

//===========================================================================
function InitTrig_Pathing_INIT takes nothing returns nothing
    set gg_trg_Pathing_INIT = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Pathing_INIT, function Trig_Pathing_INIT_Actions )
endfunction

//===========================================================================
// Trigger: Set Creeps to Attack Base Left
//===========================================================================
function Trig_Set_Creeps_to_Attack_Base_Left_Conditions takes nothing returns boolean
    if ( not ( IsPlayerInForce(GetOwningPlayer(GetEnteringUnit()), udg_PLAYERGRPallied) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Set_Creeps_to_Attack_Base_Left_Actions takes nothing returns nothing
    call SetUnitUserData( GetEnteringUnit(), 4 )
    set udg_TEMP_Unit = GetEnteringUnit()
    call TriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Set_Creeps_to_Attack_Base_Left takes nothing returns nothing
    set gg_trg_Set_Creeps_to_Attack_Base_Left = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Set_Creeps_to_Attack_Base_Left, gg_rct_Right_Start )
    call TriggerRegisterEnterRectSimple( gg_trg_Set_Creeps_to_Attack_Base_Left, gg_rct_Right_Start_Top )
    call TriggerAddCondition( gg_trg_Set_Creeps_to_Attack_Base_Left, Condition( function Trig_Set_Creeps_to_Attack_Base_Left_Conditions ) )
    call TriggerAddAction( gg_trg_Set_Creeps_to_Attack_Base_Left, function Trig_Set_Creeps_to_Attack_Base_Left_Actions )
endfunction

//===========================================================================
// Trigger: Set Creeps to Attack Elf Base Right
//===========================================================================
function Trig_Set_Creeps_to_Attack_Elf_Base_Right_Conditions takes nothing returns boolean
    if ( not ( IsPlayerInForce(GetOwningPlayer(GetEnteringUnit()), udg_PLAYERGRPallied) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Set_Creeps_to_Attack_Elf_Base_Right_Func001C takes nothing returns boolean
    return true
endfunction

function Trig_Set_Creeps_to_Attack_Elf_Base_Right_Actions takes nothing returns nothing
    if ( Trig_Set_Creeps_to_Attack_Elf_Base_Right_Func001C() ) then
        call SetUnitUserData( GetEnteringUnit(), 11 )
    else
        call SetUnitUserData( GetEnteringUnit(), 4 )
    endif
    set udg_TEMP_Unit = GetEnteringUnit()
    call TriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Set_Creeps_to_Attack_Elf_Base_Right takes nothing returns nothing
    set gg_trg_Set_Creeps_to_Attack_Elf_Base_Right = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Set_Creeps_to_Attack_Elf_Base_Right, gg_rct_Right_Start_Bottom )
    call TriggerAddCondition( gg_trg_Set_Creeps_to_Attack_Elf_Base_Right, Condition( function Trig_Set_Creeps_to_Attack_Elf_Base_Right_Conditions ) )
    call TriggerAddAction( gg_trg_Set_Creeps_to_Attack_Elf_Base_Right, function Trig_Set_Creeps_to_Attack_Elf_Base_Right_Actions )
endfunction

//===========================================================================
// Trigger: Set Creeps to Attack Base Right
//===========================================================================
function Trig_Set_Creeps_to_Attack_Base_Right_Conditions takes nothing returns boolean
    if ( not ( IsPlayerInForce(GetOwningPlayer(GetEnteringUnit()), udg_PLAYERGRPfederation) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Set_Creeps_to_Attack_Base_Right_Actions takes nothing returns nothing
    call SetUnitUserData( GetEnteringUnit(), 4 )
    set udg_TEMP_Unit = GetEnteringUnit()
    call TriggerExecute( gg_trg_FUNC_Move_Creeps )
    call SetUnitUserData( GetEnteringUnit(), 11 )
endfunction

//===========================================================================
function InitTrig_Set_Creeps_to_Attack_Base_Right takes nothing returns nothing
    set gg_trg_Set_Creeps_to_Attack_Base_Right = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Set_Creeps_to_Attack_Base_Right, gg_rct_Left_Start_Bottom )
    call TriggerRegisterEnterRectSimple( gg_trg_Set_Creeps_to_Attack_Base_Right, gg_rct_Left_Start )
    call TriggerAddCondition( gg_trg_Set_Creeps_to_Attack_Base_Right, Condition( function Trig_Set_Creeps_to_Attack_Base_Right_Conditions ) )
    call TriggerAddAction( gg_trg_Set_Creeps_to_Attack_Base_Right, function Trig_Set_Creeps_to_Attack_Base_Right_Actions )
endfunction

//===========================================================================
// Trigger: Set Creeps to Attack Elf Base Left
//===========================================================================
function Trig_Set_Creeps_to_Attack_Elf_Base_Left_Conditions takes nothing returns boolean
    if ( not ( IsPlayerInForce(GetOwningPlayer(GetEnteringUnit()), udg_PLAYERGRPfederation) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Set_Creeps_to_Attack_Elf_Base_Left_Func001C takes nothing returns boolean
    return true
endfunction

function Trig_Set_Creeps_to_Attack_Elf_Base_Left_Actions takes nothing returns nothing
    if ( Trig_Set_Creeps_to_Attack_Elf_Base_Left_Func001C() ) then
        call SetUnitUserData( GetEnteringUnit(), 11 )
    else
        call SetUnitUserData( GetEnteringUnit(), 4 )
    endif
    set udg_TEMP_Unit = GetEnteringUnit()
    call TriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Set_Creeps_to_Attack_Elf_Base_Left takes nothing returns nothing
    set gg_trg_Set_Creeps_to_Attack_Elf_Base_Left = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Set_Creeps_to_Attack_Elf_Base_Left, gg_rct_Left_Start_Top )
    call TriggerAddCondition( gg_trg_Set_Creeps_to_Attack_Elf_Base_Left, Condition( function Trig_Set_Creeps_to_Attack_Elf_Base_Left_Conditions ) )
    call TriggerAddAction( gg_trg_Set_Creeps_to_Attack_Elf_Base_Left, function Trig_Set_Creeps_to_Attack_Elf_Base_Left_Actions )
endfunction

//===========================================================================
// Trigger: Set Creeps to Attack Castle from Elf Left
//===========================================================================
function Trig_Set_Creeps_to_Attack_Castle_from_Elf_Left_Conditions takes nothing returns boolean
    if ( not ( IsPlayerInForce(GetOwningPlayer(GetEnteringUnit()), udg_PLAYERGRPallied) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Set_Creeps_to_Attack_Castle_from_Elf_Left_Actions takes nothing returns nothing
    call SetUnitUserData( GetEnteringUnit(), 4 )
    set udg_TEMP_Unit = GetEnteringUnit()
    call TriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Set_Creeps_to_Attack_Castle_from_Elf_Left takes nothing returns nothing
    set gg_trg_Set_Creeps_to_Attack_Castle_from_Elf_Left = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Set_Creeps_to_Attack_Castle_from_Elf_Left, gg_rct_Elf_Base_Left )
    call TriggerAddCondition( gg_trg_Set_Creeps_to_Attack_Castle_from_Elf_Left, Condition( function Trig_Set_Creeps_to_Attack_Castle_from_Elf_Left_Conditions ) )
    call TriggerAddAction( gg_trg_Set_Creeps_to_Attack_Castle_from_Elf_Left, function Trig_Set_Creeps_to_Attack_Castle_from_Elf_Left_Actions )
endfunction

//===========================================================================
// Trigger: Set Creeps to Attack Castle from Elf Right
//===========================================================================
function Trig_Set_Creeps_to_Attack_Castle_from_Elf_Right_Conditions takes nothing returns boolean
    if ( not ( IsPlayerInForce(GetOwningPlayer(GetEnteringUnit()), udg_PLAYERGRPfederation) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Set_Creeps_to_Attack_Castle_from_Elf_Right_Actions takes nothing returns nothing
    call SetUnitUserData( GetEnteringUnit(), 4 )
    set udg_TEMP_Unit = GetEnteringUnit()
    call TriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Set_Creeps_to_Attack_Castle_from_Elf_Right takes nothing returns nothing
    set gg_trg_Set_Creeps_to_Attack_Castle_from_Elf_Right = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Set_Creeps_to_Attack_Castle_from_Elf_Right, gg_rct_Elf_Base_Right )
    call TriggerAddCondition( gg_trg_Set_Creeps_to_Attack_Castle_from_Elf_Right, Condition( function Trig_Set_Creeps_to_Attack_Castle_from_Elf_Right_Conditions ) )
    call TriggerAddAction( gg_trg_Set_Creeps_to_Attack_Castle_from_Elf_Right, function Trig_Set_Creeps_to_Attack_Castle_from_Elf_Right_Actions )
endfunction

//===========================================================================
// Trigger: Aspect of Tides End
//===========================================================================
function Trig_Aspect_of_Tides_End_Conditions takes nothing returns boolean
    if ( not ( GetUnitUserData(GetEnteringUnit()) == 8 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Aspect_of_Tides_End_Actions takes nothing returns nothing
    call SetUnitUserData( GetEnteringUnit(), 1 )
    set udg_TEMP_Unit = GetEnteringUnit()
    call TriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Aspect_of_Tides_End takes nothing returns nothing
    set gg_trg_Aspect_of_Tides_End = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Aspect_of_Tides_End, gg_rct_Murloc_Left )
    call TriggerRegisterEnterRectSimple( gg_trg_Aspect_of_Tides_End, gg_rct_Murloc_Right )
    call TriggerAddCondition( gg_trg_Aspect_of_Tides_End, Condition( function Trig_Aspect_of_Tides_End_Conditions ) )
    call TriggerAddAction( gg_trg_Aspect_of_Tides_End, function Trig_Aspect_of_Tides_End_Actions )
endfunction

//===========================================================================
// Trigger: Aspect of Death End
//===========================================================================
function Trig_Aspect_of_Death_End_Conditions takes nothing returns boolean
    if ( not ( GetUnitUserData(GetEnteringUnit()) == 10 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Aspect_of_Death_End_Actions takes nothing returns nothing
    call SetUnitUserData( GetEnteringUnit(), 2 )
    set udg_TEMP_Unit = GetEnteringUnit()
    call TriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Aspect_of_Death_End takes nothing returns nothing
    set gg_trg_Aspect_of_Death_End = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Aspect_of_Death_End, gg_rct_Zombie_End_Left )
    call TriggerRegisterEnterRectSimple( gg_trg_Aspect_of_Death_End, gg_rct_Zombie_End_Right )
    call TriggerAddCondition( gg_trg_Aspect_of_Death_End, Condition( function Trig_Aspect_of_Death_End_Conditions ) )
    call TriggerAddAction( gg_trg_Aspect_of_Death_End, function Trig_Aspect_of_Death_End_Actions )
endfunction

//===========================================================================
// Trigger: Aspect of Forest End
//===========================================================================
function Trig_Aspect_of_Forest_End_Conditions takes nothing returns boolean
    if ( not ( GetUnitUserData(GetEnteringUnit()) == 9 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Aspect_of_Forest_End_Actions takes nothing returns nothing
    call SetUnitUserData( GetEnteringUnit(), 1 )
    set udg_TEMP_Unit = GetEnteringUnit()
    call TriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Aspect_of_Forest_End takes nothing returns nothing
    set gg_trg_Aspect_of_Forest_End = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Aspect_of_Forest_End, gg_rct_Aspect_of_Forest_Left )
    call TriggerRegisterEnterRectSimple( gg_trg_Aspect_of_Forest_End, gg_rct_Aspect_of_Forest_Right )
    call TriggerAddCondition( gg_trg_Aspect_of_Forest_End, Condition( function Trig_Aspect_of_Forest_End_Conditions ) )
    call TriggerAddAction( gg_trg_Aspect_of_Forest_End, function Trig_Aspect_of_Forest_End_Actions )
endfunction

//===========================================================================
// Trigger: Aspect of Air End
//===========================================================================
function Trig_Aspect_of_Air_End_Conditions takes nothing returns boolean
    if ( not ( GetUnitUserData(GetEnteringUnit()) == 7 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Aspect_of_Air_End_Actions takes nothing returns nothing
    call SetUnitUserData( GetEnteringUnit(), 3 )
    set udg_TEMP_Unit = GetEnteringUnit()
    call TriggerExecute( gg_trg_FUNC_Move_Creeps )
endfunction

//===========================================================================
function InitTrig_Aspect_of_Air_End takes nothing returns nothing
    set gg_trg_Aspect_of_Air_End = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Aspect_of_Air_End, gg_rct_Left_Elemental_Start )
    call TriggerRegisterEnterRectSimple( gg_trg_Aspect_of_Air_End, gg_rct_Right_Elemental_Start )
    call TriggerAddCondition( gg_trg_Aspect_of_Air_End, Condition( function Trig_Aspect_of_Air_End_Conditions ) )
    call TriggerAddAction( gg_trg_Aspect_of_Air_End, function Trig_Aspect_of_Air_End_Actions )
endfunction

//===========================================================================
// Trigger: Shipyard Left End
//===========================================================================
function Trig_Shipyard_Left_End_Conditions takes nothing returns boolean
    if ( not ( IsPlayerInForce(GetOwningPlayer(GetEnteringUnit()), udg_PLAYERGRPfederation) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'edes' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Shipyard_Left_End_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_FUNC_Shipyard )
endfunction

//===========================================================================
function InitTrig_Shipyard_Left_End takes nothing returns nothing
    set gg_trg_Shipyard_Left_End = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Shipyard_Left_End, gg_rct_Shipyard_End_Right )
    call TriggerAddCondition( gg_trg_Shipyard_Left_End, Condition( function Trig_Shipyard_Left_End_Conditions ) )
    call TriggerAddAction( gg_trg_Shipyard_Left_End, function Trig_Shipyard_Left_End_Actions )
endfunction

//===========================================================================
// Trigger: Shipyard Right End
//===========================================================================
function Trig_Shipyard_Right_End_Conditions takes nothing returns boolean
    if ( not ( IsPlayerInForce(GetOwningPlayer(GetEnteringUnit()), udg_PLAYERGRPallied) == true ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnteringUnit()) == 'edes' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Shipyard_Right_End_Actions takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_FUNC_Shipyard )
endfunction

//===========================================================================
function InitTrig_Shipyard_Right_End takes nothing returns nothing
    set gg_trg_Shipyard_Right_End = CreateTrigger(  )
    call TriggerRegisterEnterRectSimple( gg_trg_Shipyard_Right_End, gg_rct_Shipyard_End_Left )
    call TriggerAddCondition( gg_trg_Shipyard_Right_End, Condition( function Trig_Shipyard_Right_End_Conditions ) )
    call TriggerAddAction( gg_trg_Shipyard_Right_End, function Trig_Shipyard_Right_End_Actions )
endfunction

//===========================================================================
// Trigger: Creeps keep going after Order
//===========================================================================
function Trig_Creeps_keep_going_after_Order_Conditions takes nothing returns boolean
    if ( not ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetTriggerUnit(), UNIT_TYPE_HERO) == false ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'uloc' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h000' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h00V' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h00N' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h00O' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'h00M' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'n00R' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'n00S' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'n00Q' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'n00P' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'n00O' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetTriggerUnit()) != 'o006' ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetTriggerUnit()) != Player(17) ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetTriggerUnit()) != Player(PLAYER_NEUTRAL_AGGRESSIVE) ) ) then
        return false
    endif
    if ( not ( UnitHasBuffBJ(GetTriggerUnit(), 'B006') == false ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("waterelemental") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("resurrection") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("forkedlightning") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("frostarmor") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("stomp") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("disenchant") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("faeriefire") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("purge") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("rainoffire") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("attack") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("stop") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("grabtree") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("rejuvination") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("bloodlust") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("heal") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("defend") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("undefend") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("lightningshield") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("spellsteal") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("roar") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("slow") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("dispel") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("bearform") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("unbearform") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("polymorph") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("breathoffrost") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("curse") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("parasite") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("innerfire") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("recharge") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("carrionswarm") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("thunderclap") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("submerge") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("holybolt") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("shockwave") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("thunderbolt") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("berserk") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("spiritlink") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("ancestralspirit") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("magicleash") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("locustswarm") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("chainlightning") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("coldarrows") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("ensnare") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("darkportal") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("magicdefense") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("magicundefense") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("devourmagic") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("summonwareagle") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("wateryminion") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("raisedead") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("tranquility") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("summongrizzly") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("whirlwind") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("monsoon") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("flamingarrows") ) ) then
        return false
    endif
    if ( not ( GetIssuedOrderIdBJ() != String2OrderIdBJ("parasiteon") ) ) then
        return false
    endif
    return true
endfunction

function Trig_Creeps_keep_going_after_Order_Actions takes nothing returns nothing
    call GroupAddUnitSimple( GetTriggerUnit(), udg_Ordered_Unit_Group )
    call SaveRealBJ( 0.00, 0, GetHandleIdBJ(GetTriggerUnit()), udg_Ordered_Unit_Queue )
endfunction

//===========================================================================
function InitTrig_Creeps_keep_going_after_Order takes nothing returns nothing
    set gg_trg_Creeps_keep_going_after_Order = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Creeps_keep_going_after_Order, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Creeps_keep_going_after_Order, EVENT_PLAYER_UNIT_ISSUED_ORDER )
    call TriggerAddCondition( gg_trg_Creeps_keep_going_after_Order, Condition( function Trig_Creeps_keep_going_after_Order_Conditions ) )
    call TriggerAddAction( gg_trg_Creeps_keep_going_after_Order, function Trig_Creeps_keep_going_after_Order_Actions )
endfunction

//===========================================================================
// Trigger: Creeps keep going after Spell
//===========================================================================
function Trig_Creeps_keep_going_after_Spell_Func011C takes nothing returns boolean
    if ( ( IsPlayerInForce(GetOwningPlayer(GetSpellAbilityUnit()), udg_PLAYERGRPallied) == true ) ) then
        return true
    endif
    if ( ( IsPlayerInForce(GetOwningPlayer(GetSpellAbilityUnit()), udg_PLAYERGRPfederation) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Creeps_keep_going_after_Spell_Conditions takes nothing returns boolean
    if ( not ( GetOwningPlayer(GetTriggerUnit()) != Player(PLAYER_NEUTRAL_AGGRESSIVE) ) ) then
        return false
    endif
    if ( not ( UnitHasBuffBJ(GetSpellAbilityUnit(), 'B006') == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetSpellAbilityUnit(), UNIT_TYPE_HERO) == false ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetSpellAbilityUnit()) != 'h00N' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetSpellAbilityUnit()) != 'h00O' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetSpellAbilityUnit()) != 'h00M' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetOrderedUnit()) != 'h000' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetOrderedUnit()) != 'h00V' ) ) then
        return false
    endif
    if ( not Trig_Creeps_keep_going_after_Spell_Func011C() ) then
        return false
    endif
    return true
endfunction

function Trig_Creeps_keep_going_after_Spell_Actions takes nothing returns nothing
    call GroupAddUnitSimple( GetTriggerUnit(), udg_Ordered_Unit_Group )
    call SaveRealBJ( 0.00, 0, GetHandleIdBJ(GetTriggerUnit()), udg_Ordered_Unit_Queue )
endfunction

//===========================================================================
function InitTrig_Creeps_keep_going_after_Spell takes nothing returns nothing
    set gg_trg_Creeps_keep_going_after_Spell = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Creeps_keep_going_after_Spell, EVENT_PLAYER_UNIT_SPELL_ENDCAST )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Creeps_keep_going_after_Spell, EVENT_PLAYER_UNIT_SPELL_FINISH )
    call TriggerAddCondition( gg_trg_Creeps_keep_going_after_Spell, Condition( function Trig_Creeps_keep_going_after_Spell_Conditions ) )
    call TriggerAddAction( gg_trg_Creeps_keep_going_after_Spell, function Trig_Creeps_keep_going_after_Spell_Actions )
endfunction

//===========================================================================
// Trigger: Order Units LOOP
//===========================================================================
function Trig_Order_Units_LOOP_Func001Func002Func002C takes nothing returns boolean
    if ( not ( UnitHasBuffBJ(GetOrderedUnit(), 'BSTN') == false ) ) then
        return false
    endif
    if ( not ( UnitHasBuffBJ(GetOrderedUnit(), 'BPSE') == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Order_Units_LOOP_Func001Func002C takes nothing returns boolean
    if ( not ( udg_TEMP_Real >= 1.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Order_Units_LOOP_Func001A takes nothing returns nothing
    set udg_TEMP_Real = LoadRealBJ(0, GetHandleIdBJ(GetEnumUnit()), udg_Ordered_Unit_Queue)
    if ( Trig_Order_Units_LOOP_Func001Func002C() ) then
        if ( Trig_Order_Units_LOOP_Func001Func002Func002C() ) then
            set udg_TEMP_Unit = GetEnumUnit()
            call TriggerExecute( gg_trg_FUNC_Move_Creeps )
            call FlushChildHashtableBJ( GetHandleIdBJ(GetEnumUnit()), udg_Ordered_Unit_Queue )
            call GroupRemoveUnitSimple( GetEnumUnit(), udg_Ordered_Unit_Group )
        else
        endif
    else
        call SaveRealBJ( ( udg_TEMP_Real + 1 ), 0, GetHandleIdBJ(GetEnumUnit()), udg_Ordered_Unit_Queue )
    endif
endfunction

function Trig_Order_Units_LOOP_Actions takes nothing returns nothing
    call ForGroupBJ( udg_Ordered_Unit_Group, function Trig_Order_Units_LOOP_Func001A )
endfunction

//===========================================================================
function InitTrig_Order_Units_LOOP takes nothing returns nothing
    set gg_trg_Order_Units_LOOP = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Order_Units_LOOP, 1.00 )
    call TriggerAddAction( gg_trg_Order_Units_LOOP, function Trig_Order_Units_LOOP_Actions )
endfunction

//===========================================================================
// Trigger: FUNC Move Creeps
//===========================================================================
function Trig_FUNC_Move_Creeps_Func002Func001Func002Func001C takes nothing returns boolean
    if ( ( RectContainsUnit(gg_rct_Big_Top_Left, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Top_Left_Center, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Top_Right_Center, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Top_Right, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_FUNC_Move_Creeps_Func002Func001Func002Func002Func001C takes nothing returns boolean
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Left, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Left_Center, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Right_Center, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Right, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_FUNC_Move_Creeps_Func002Func001Func002Func002Func002Func001C takes nothing returns boolean
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Left, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Left_Center, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Right_Center, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Right, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_FUNC_Move_Creeps_Func002Func001Func002Func002Func002C takes nothing returns boolean
    if ( not Trig_FUNC_Move_Creeps_Func002Func001Func002Func002Func002Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_FUNC_Move_Creeps_Func002Func001Func002Func002C takes nothing returns boolean
    if ( not Trig_FUNC_Move_Creeps_Func002Func001Func002Func002Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_FUNC_Move_Creeps_Func002Func001Func002C takes nothing returns boolean
    if ( not Trig_FUNC_Move_Creeps_Func002Func001Func002Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_FUNC_Move_Creeps_Func002Func001Func003Func001C takes nothing returns boolean
    if ( ( RectContainsUnit(gg_rct_Big_Top_Left, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Top_Left_Center, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Top_Right_Center, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Top_Right, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_FUNC_Move_Creeps_Func002Func001Func003Func002Func001C takes nothing returns boolean
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Left, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Left_Center, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Right_Center, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Right, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_FUNC_Move_Creeps_Func002Func001Func003Func002Func002Func001C takes nothing returns boolean
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Left, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Left_Center, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Right_Center, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Bottom_Right, udg_TEMP_Unit) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_FUNC_Move_Creeps_Func002Func001Func003Func002Func002C takes nothing returns boolean
    if ( not Trig_FUNC_Move_Creeps_Func002Func001Func003Func002Func002Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_FUNC_Move_Creeps_Func002Func001Func003Func002C takes nothing returns boolean
    if ( not Trig_FUNC_Move_Creeps_Func002Func001Func003Func002Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_FUNC_Move_Creeps_Func002Func001Func003C takes nothing returns boolean
    if ( not Trig_FUNC_Move_Creeps_Func002Func001Func003Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_FUNC_Move_Creeps_Func002Func001C takes nothing returns boolean
    if ( not ( IsUnitAlly(udg_TEMP_Unit, ForcePickRandomPlayer(udg_PLAYERGRPallied)) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_FUNC_Move_Creeps_Func002C takes nothing returns boolean
    if ( not ( GetUnitUserData(udg_TEMP_Unit) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_FUNC_Move_Creeps_Func004C takes nothing returns boolean
    if ( not ( IsUnitAlly(udg_TEMP_Unit, ForcePickRandomPlayer(udg_PLAYERGRPallied)) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_FUNC_Move_Creeps_Actions takes nothing returns nothing
    // If no Value has been set, set a value
    if ( Trig_FUNC_Move_Creeps_Func002C() ) then
        if ( Trig_FUNC_Move_Creeps_Func002Func001C() ) then
            if ( Trig_FUNC_Move_Creeps_Func002Func001Func003C() ) then
                call SetUnitUserData( udg_TEMP_Unit, 1 )
            else
                if ( Trig_FUNC_Move_Creeps_Func002Func001Func003Func002C() ) then
                    call SetUnitUserData( udg_TEMP_Unit, 2 )
                else
                    if ( Trig_FUNC_Move_Creeps_Func002Func001Func003Func002Func002C() ) then
                        call SetUnitUserData( udg_TEMP_Unit, 3 )
                    else
                    endif
                endif
            endif
        else
            if ( Trig_FUNC_Move_Creeps_Func002Func001Func002C() ) then
                call SetUnitUserData( udg_TEMP_Unit, 3 )
            else
                if ( Trig_FUNC_Move_Creeps_Func002Func001Func002Func002C() ) then
                    call SetUnitUserData( udg_TEMP_Unit, 2 )
                else
                    if ( Trig_FUNC_Move_Creeps_Func002Func001Func002Func002Func002C() ) then
                        call SetUnitUserData( udg_TEMP_Unit, 1 )
                    else
                    endif
                endif
            endif
        endif
    else
    endif
    // Move unit to destination
    if ( Trig_FUNC_Move_Creeps_Func004C() ) then
        set udg_TEMP_Pos_Move = GetRandomLocInRect(udg_EndRegionsSpawn[GetUnitUserData(udg_TEMP_Unit)])
    else
        set udg_TEMP_Pos_Move = GetRandomLocInRect(udg_EndRegionsSpawn[( GetUnitUserData(udg_TEMP_Unit) + 20 )])
    endif
    call DisableTrigger( gg_trg_Creeps_keep_going_after_Order )
    call IssuePointOrderLocBJ( udg_TEMP_Unit, "attack", udg_TEMP_Pos_Move )
    call EnableTrigger( gg_trg_Creeps_keep_going_after_Order )
    //! beginusercode
    RemoveLocation (udg_TEMP_Pos_Move)
    //! endusercode
endfunction

//===========================================================================
function InitTrig_FUNC_Move_Creeps takes nothing returns nothing
    set gg_trg_FUNC_Move_Creeps = CreateTrigger(  )
    call TriggerAddAction( gg_trg_FUNC_Move_Creeps, function Trig_FUNC_Move_Creeps_Actions )
endfunction

//===========================================================================
// Trigger: FUNC Shipyard
//===========================================================================
function Trig_FUNC_Shipyard_Actions takes nothing returns nothing
    set udg_TEMP_Player = GetOwningPlayer(GetEnteringUnit())
    set udg_TEMP_Pos2 = GetUnitLoc(GetEnteringUnit())
    call CreateNUnitsAtLoc( 1, 'hhes', udg_TEMP_Player, udg_TEMP_Pos2, bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 1, 'h010', udg_TEMP_Player, udg_TEMP_Pos2, bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 2, 'earc', udg_TEMP_Player, udg_TEMP_Pos2, bj_UNIT_FACING )
    call CreateNUnitsAtLoc( 1, 'e000', udg_TEMP_Player, udg_TEMP_Pos2, bj_UNIT_FACING )
    call RemoveUnit( GetEnteringUnit() )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_FUNC_Shipyard takes nothing returns nothing
    set gg_trg_FUNC_Shipyard = CreateTrigger(  )
    call TriggerAddAction( gg_trg_FUNC_Shipyard, function Trig_FUNC_Shipyard_Actions )
endfunction

//===========================================================================
// Trigger: Brawler No Mana
//===========================================================================
function Trig_Brawler_No_Mana_Func001Func001C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_UNIT_pickedHero[udg_TEMP_IntLoop1]) == 'E001' ) ) then
        return false
    endif
    if ( not ( GetUnitStateSwap(UNIT_STATE_MANA, udg_UNIT_pickedHero[udg_TEMP_IntLoop1]) >= udg_BrawlerMana[udg_TEMP_IntLoop1] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Brawler_No_Mana_Actions takes nothing returns nothing
    set udg_TEMP_IntLoop1 = 1
    loop
        exitwhen udg_TEMP_IntLoop1 > 12
        if ( Trig_Brawler_No_Mana_Func001Func001C() ) then
            call SetUnitManaBJ( udg_UNIT_pickedHero[udg_TEMP_IntLoop1], udg_BrawlerMana[udg_TEMP_IntLoop1] )
        else
            set udg_BrawlerMana[udg_TEMP_IntLoop1] = GetUnitStateSwap(UNIT_STATE_MANA, udg_UNIT_pickedHero[udg_TEMP_IntLoop1])
        endif
        set udg_TEMP_IntLoop1 = udg_TEMP_IntLoop1 + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Brawler_No_Mana takes nothing returns nothing
    set gg_trg_Brawler_No_Mana = CreateTrigger(  )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Brawler_No_Mana, 1.00 )
    call TriggerAddAction( gg_trg_Brawler_No_Mana, function Trig_Brawler_No_Mana_Actions )
endfunction

//===========================================================================
// Trigger: Brawler Rage GUI
//===========================================================================
function Trig_Brawler_Rage_GUI_Conditions takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetAttackedUnitBJ()) == 'E001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Brawler_Rage_GUI_Actions takes nothing returns nothing
    call SetUnitManaBJ( GetTriggerUnit(), 0 )
    set udg_BrawlerMana[GetConvertedPlayerId(GetOwningPlayer(GetAttackedUnitBJ()))] = GetUnitStateSwap(UNIT_STATE_MANA, GetAttackedUnitBJ())
endfunction

//===========================================================================
function InitTrig_Brawler_Rage_GUI takes nothing returns nothing
    set gg_trg_Brawler_Rage_GUI = CreateTrigger(  )
    call DisableTrigger( gg_trg_Brawler_Rage_GUI )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Brawler_Rage_GUI, EVENT_PLAYER_UNIT_ATTACKED )
    call TriggerAddCondition( gg_trg_Brawler_Rage_GUI, Condition( function Trig_Brawler_Rage_GUI_Conditions ) )
    call TriggerAddAction( gg_trg_Brawler_Rage_GUI, function Trig_Brawler_Rage_GUI_Actions )
endfunction

//===========================================================================
// Trigger: Drain Start
//===========================================================================
function Trig_Drain_Start_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A01Y' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drain_Start_Func004C takes nothing returns boolean
    if ( not ( udg_DL_Index == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drain_Start_Actions takes nothing returns nothing
    set udg_DL_Index = ( udg_DL_Index + 1 )
    set udg_DL_Caster[udg_DL_Index] = GetSpellAbilityUnit()
    set udg_DL_Counter[udg_DL_Loop] = 0.00
    if ( Trig_Drain_Start_Func004C() ) then
        call EnableTrigger( gg_trg_Drain_Loop )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Drain_Start takes nothing returns nothing
    set gg_trg_Drain_Start = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Drain_Start, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Drain_Start, Condition( function Trig_Drain_Start_Conditions ) )
    call TriggerAddAction( gg_trg_Drain_Start, function Trig_Drain_Start_Actions )
endfunction

//===========================================================================
// Trigger: Drain Loop
//===========================================================================
function Trig_Drain_Loop_Func001Func003002003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Drain_Loop_Func001Func003002003002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Drain_Loop_Func001Func003002003002002 takes nothing returns boolean
    return ( IsUnitEnemy(GetFilterUnit(), GetOwningPlayer(udg_DL_Caster[udg_DL_Loop])) == true )
endfunction

function Trig_Drain_Loop_Func001Func003002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Drain_Loop_Func001Func003002003002001(), Trig_Drain_Loop_Func001Func003002003002002() )
endfunction

function Trig_Drain_Loop_Func001Func003002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Drain_Loop_Func001Func003002003001(), Trig_Drain_Loop_Func001Func003002003002() )
endfunction

function Trig_Drain_Loop_Func001Func006A takes nothing returns nothing
    call UnitDamageTargetBJ( udg_DL_Caster[udg_DL_Loop], GetEnumUnit(), ( 5.00 * I2R(udg_TEMP_Int) ), ATTACK_TYPE_NORMAL, DAMAGE_TYPE_NORMAL )
    call SetUnitLifeBJ( udg_DL_Caster[udg_DL_Loop], ( GetUnitStateSwap(UNIT_STATE_LIFE, udg_DL_Caster[udg_DL_Loop]) + ( 5.00 * I2R(udg_TEMP_Int) ) ) )
    call AddSpecialEffectTargetUnitBJ( "chest", GetEnumUnit(), "Abilities\\Spells\\Other\\Drain\\DrainTarget.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
endfunction

function Trig_Drain_Loop_Func001Func010Func005C takes nothing returns boolean
    if ( not ( udg_DL_Index == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drain_Loop_Func001Func010C takes nothing returns boolean
    if ( not ( udg_DL_Counter[udg_DL_Loop] >= 5.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Drain_Loop_Actions takes nothing returns nothing
    set udg_DL_Loop = 1
    loop
        exitwhen udg_DL_Loop > udg_DL_Index
        set udg_TEMP_Pos_Hero = GetUnitLoc(udg_DL_Caster[udg_DL_Loop])
        set udg_TEMP_Int = GetUnitAbilityLevelSwapped('A01Y', udg_DL_Caster[udg_DL_Loop])
        set udg_DrainLifeTargets = GetUnitsInRangeOfLocMatching(( 300.00 + ( 15.00 * I2R(udg_TEMP_Int) ) ), udg_TEMP_Pos_Hero, Condition(function Trig_Drain_Loop_Func001Func003002003))
        call AddSpecialEffectTargetUnitBJ( "chest", udg_DL_Caster[udg_DL_Loop], "Abilities\\Spells\\Other\\Drain\\DrainCaster.mdl" )
        call DestroyEffectBJ( GetLastCreatedEffectBJ() )
        call ForGroupBJ( udg_DrainLifeTargets, function Trig_Drain_Loop_Func001Func006A )
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos_Hero )
        //! endusercode
        //! beginusercode
        DestroyGroup ( udg_DrainLifeTargets )
        //! endusercode
        set udg_DL_Counter[udg_DL_Loop] = ( udg_DL_Counter[udg_DL_Loop] + 0.50 )
        if ( Trig_Drain_Loop_Func001Func010C() ) then
            set udg_DL_Caster[udg_DL_Loop] = udg_DL_Caster[udg_DL_Index]
            set udg_DL_Counter[udg_DL_Loop] = udg_DL_Counter[udg_DL_Index]
            set udg_DL_Index = ( udg_DL_Index - 1 )
            set udg_DL_Loop = ( udg_DL_Loop - 1 )
            if ( Trig_Drain_Loop_Func001Func010Func005C() ) then
                call DisableTrigger( GetTriggeringTrigger() )
            else
            endif
        else
        endif
        set udg_DL_Loop = udg_DL_Loop + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Drain_Loop takes nothing returns nothing
    set gg_trg_Drain_Loop = CreateTrigger(  )
    call DisableTrigger( gg_trg_Drain_Loop )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Drain_Loop, 0.50 )
    call TriggerAddAction( gg_trg_Drain_Loop, function Trig_Drain_Loop_Actions )
endfunction

//===========================================================================
// Trigger: Unleash Rage Start
//===========================================================================
function Trig_Unleash_Rage_Start_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A029' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Unleash_Rage_Start_Func004C takes nothing returns boolean
    if ( not ( udg_UR_Index == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Unleash_Rage_Start_Actions takes nothing returns nothing
    set udg_UR_Index = ( udg_UR_Index + 1 )
    set udg_UR_Caster[udg_UR_Index] = GetSpellAbilityUnit()
    set udg_UR_Counter[udg_UR_Index] = 0.00
    if ( Trig_Unleash_Rage_Start_Func004C() ) then
        call EnableTrigger( gg_trg_Unleash_Rage )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Unleash_Rage_Start takes nothing returns nothing
    set gg_trg_Unleash_Rage_Start = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Unleash_Rage_Start, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Unleash_Rage_Start, Condition( function Trig_Unleash_Rage_Start_Conditions ) )
    call TriggerAddAction( gg_trg_Unleash_Rage_Start, function Trig_Unleash_Rage_Start_Actions )
endfunction

//===========================================================================
// Trigger: Unleash Rage
//===========================================================================
function Trig_Unleash_Rage_Func001Func008C takes nothing returns boolean
    if ( not ( udg_UR_Counter[udg_UR_Loop] != 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Unleash_Rage_Func001Func012Func005C takes nothing returns boolean
    if ( not ( udg_UR_Index == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Unleash_Rage_Func001Func012C takes nothing returns boolean
    if ( not ( udg_UR_Counter[udg_UR_Loop] > 3.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Unleash_Rage_Actions takes nothing returns nothing
    set udg_UR_Loop = 1
    loop
        exitwhen udg_UR_Loop > udg_UR_Index
        set udg_TEMP_Pos_Hero = GetUnitLoc(udg_UR_Caster[udg_UR_Loop])
        set udg_TEMP_Pos2 = PolarProjectionBJ(udg_TEMP_Pos_Hero, 150.00, ( 360.00 - ( udg_UR_Counter[udg_UR_Loop] * 120.00 ) ))
        call CreateNUnitsAtLoc( 1, 'h00N', GetOwningPlayer(udg_UR_Caster[udg_UR_Loop]), udg_TEMP_Pos_Hero, bj_UNIT_FACING )
        call SetUnitAbilityLevelSwapped( 'A01V', GetLastCreatedUnit(), GetUnitAbilityLevelSwapped('A029', udg_UR_Caster[udg_UR_Loop]) )
        call UnitApplyTimedLifeBJ( 1.50, 'BTLF', GetLastCreatedUnit() )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "shockwave", udg_TEMP_Pos2 )
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos2 )
        //! endusercode
        if ( Trig_Unleash_Rage_Func001Func008C() ) then
            set udg_TEMP_Pos2 = PolarProjectionBJ(udg_TEMP_Pos_Hero, 150.00, ( udg_UR_Counter[udg_UR_Loop] * 120.00 ))
            call CreateNUnitsAtLoc( 1, 'h00N', GetOwningPlayer(udg_UR_Caster[udg_UR_Loop]), udg_TEMP_Pos_Hero, bj_UNIT_FACING )
            call SetUnitAbilityLevelSwapped( 'A01V', GetLastCreatedUnit(), GetUnitAbilityLevelSwapped('A029', udg_UR_Caster[udg_UR_Loop]) )
            call UnitApplyTimedLifeBJ( 1.50, 'BTLF', GetLastCreatedUnit() )
            call IssuePointOrderLocBJ( GetLastCreatedUnit(), "shockwave", udg_TEMP_Pos2 )
        else
        endif
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos2 )
        //! endusercode
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos_Hero )
        //! endusercode
        set udg_UR_Counter[udg_UR_Loop] = ( udg_UR_Counter[udg_UR_Loop] + 0.25 )
        if ( Trig_Unleash_Rage_Func001Func012C() ) then
            set udg_UR_Caster[udg_UR_Loop] = udg_UR_Caster[udg_UR_Index]
            set udg_UR_Counter[udg_UR_Loop] = udg_UR_Counter[udg_UR_Index]
            set udg_UR_Index = ( udg_UR_Index - 1 )
            set udg_UR_Loop = ( udg_UR_Loop - 1 )
            if ( Trig_Unleash_Rage_Func001Func012Func005C() ) then
                call DisableTrigger( GetTriggeringTrigger() )
            else
            endif
        else
        endif
        set udg_UR_Loop = udg_UR_Loop + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Unleash_Rage takes nothing returns nothing
    set gg_trg_Unleash_Rage = CreateTrigger(  )
    call DisableTrigger( gg_trg_Unleash_Rage )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Unleash_Rage, 0.25 )
    call TriggerAddAction( gg_trg_Unleash_Rage, function Trig_Unleash_Rage_Actions )
endfunction

//===========================================================================
// Trigger: Falling Strike CAST
//===========================================================================
function Trig_Falling_Strike_CAST_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A03T' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Falling_Strike_CAST_Actions takes nothing returns nothing
    // This are the actions to apply in your spell to use an effect of this system.
    //  
    set udg_JDA_JumpHigh_Distance = 0.50
    // This variable returns the base value of the high of the jump.
    // The Jump´s high is calculated by the distance jumped and by this value.
    // The higher this value is, the higher is the jump. I recommend to leave it at 1.00 .
    //  
    set udg_JDA_DestroyTrees_Dash = false
    // !Don´t pay attention to this variable if you have choosen the Jump effect!
    // This variable returns whether the hero should destroy trees while dashing.
    // Set this variable toTrue to destroy trees in the dashing unit´s way.
    //  
    set udg_JDA_TargetPoint = GetSpellTargetLoc()
    // This returns where the target position of the Jump/Dash should be.
    //  
    set udg_JDA_Unit = GetTriggerUnit()
    // This returns the unit which shall jump/dash.
    //  
    set udg_JDA_Speed = 28.00
    // This returns the speed of the jump/dash.
    //  
    set udg_JDA_SpecialEffect = "Abilities\\Weapons\\FaerieDragonMissile\\FaerieDragonMissile.mdl"
    // This returns the path for the used special effect.
    //  
    set udg_JDA_Animation = "attack, slam"
    // This returns the animation of the unit jumping/dashing.
    //  
    set udg_JDA_AnimationSpeed = 0.40
    // This returns the animation speed of the jumping/dashing unit.
    //  
    call ConditionalTriggerExecute( gg_trg_Jump_System_1 )
    // After setting all needed variables, this calls the system to execute the choosen effects on the choosen unit/units.
    //  
endfunction

//===========================================================================
function InitTrig_Falling_Strike_CAST takes nothing returns nothing
    set gg_trg_Falling_Strike_CAST = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Falling_Strike_CAST, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Falling_Strike_CAST, Condition( function Trig_Falling_Strike_CAST_Conditions ) )
    call TriggerAddAction( gg_trg_Falling_Strike_CAST, function Trig_Falling_Strike_CAST_Actions )
endfunction

//===========================================================================
// Trigger: Jump System 1
//===========================================================================
function Trig_Jump_System_1_Func001C takes nothing returns boolean
    if ( not ( udg_JD_Integers[1] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Jump_System_1_Actions takes nothing returns nothing
    if ( Trig_Jump_System_1_Func001C() ) then
        call EnableTrigger( gg_trg_Jump_System_2 )
    else
    endif
    set udg_JD_Integers[1] = ( udg_JD_Integers[1] + 1 )
    set udg_JD_Integers[2] = ( udg_JD_Integers[2] + 1 )
    set udg_JD_TempPoint[1] = GetUnitLoc(udg_JDA_Unit)
    set udg_JD_Distances[udg_JD_Integers[2]] = DistanceBetweenPoints(udg_JD_TempPoint[1], udg_JDA_TargetPoint)
    set udg_JD_ReachedDistance[udg_JD_Integers[2]] = 0.00
    set udg_JD_SpeedUnits[udg_JD_Integers[2]] = udg_JDA_Speed
    set udg_JD_Unit[udg_JD_Integers[2]] = udg_JDA_Unit
    set udg_JD_Angle[udg_JD_Integers[2]] = AngleBetweenPoints(udg_JD_TempPoint[1], udg_JDA_TargetPoint)
    set udg_JD_Effect[udg_JD_Integers[2]] = udg_JDA_SpecialEffect
    set udg_JD_Animations[udg_JD_Integers[2]] = udg_JDA_Animation
    set udg_JD_TreesDestroy[udg_JD_Integers[2]] = udg_JDA_DestroyTrees_Dash
    set udg_JD_HighSettings[udg_JD_Integers[2]] = ( udg_JDA_JumpHigh_Distance * udg_JD_Distances[udg_JD_Integers[2]] )
    call SetUnitPathing( udg_JDA_Unit, false )
    call SetUnitTimeScalePercent( udg_JDA_Unit, ( udg_JDA_AnimationSpeed * 100.00 ) )
    call SetUnitAnimation( udg_JDA_Unit, udg_JDA_Animation )
    call GroupAddUnitSimple( udg_JDA_Unit, udg_JD_Group )
    call UnitAddAbilityBJ( 'Arav', udg_JDA_Unit )
    call UnitRemoveAbilityBJ( 'Arav', udg_JDA_Unit )
    //! beginusercode
    RemoveLocation (udg_JD_TempPoint[1])
    //! endusercode
    //! beginusercode
    RemoveLocation (udg_JDA_TargetPoint)
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Jump_System_1 takes nothing returns nothing
    set gg_trg_Jump_System_1 = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Jump_System_1, function Trig_Jump_System_1_Actions )
endfunction

//===========================================================================
// Trigger: Jump System 2
//===========================================================================
function Trig_Jump_System_2_Func001Func001Func001Func018C takes nothing returns boolean
    if ( not ( udg_JD_Integers[1] == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Jump_System_2_Func001Func001Func001Func021Func001003 takes nothing returns nothing
    call KillDestructable( GetEnumDestructable() )
endfunction

function Trig_Jump_System_2_Func001Func001Func001Func021C takes nothing returns boolean
    if ( not ( udg_JD_TreesDestroy[udg_JD_Integers[3]] == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Jump_System_2_Func001Func001Func001Func024C takes nothing returns boolean
    if ( not ( GetRandomInt(1, 5) == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Jump_System_2_Func001Func001Func001C takes nothing returns boolean
    if ( not ( udg_JD_ReachedDistance[udg_JD_Integers[3]] < udg_JD_Distances[udg_JD_Integers[3]] ) ) then
        return false
    endif
    return true
endfunction

function Trig_Jump_System_2_Func001Func001C takes nothing returns boolean
    if ( not ( IsUnitInGroup(udg_JD_Unit[udg_JD_Integers[3]], udg_JD_Group) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Jump_System_2_Actions takes nothing returns nothing
    set udg_JD_Integers[3] = 1
    loop
        exitwhen udg_JD_Integers[3] > udg_JD_Integers[2]
        if ( Trig_Jump_System_2_Func001Func001C() ) then
            if ( Trig_Jump_System_2_Func001Func001Func001C() ) then
                call SetUnitAnimation( udg_JD_Unit[udg_JD_Integers[3]], "attack slam 1" )
                set udg_JD_TempPoint[1] = GetUnitLoc(udg_JD_Unit[udg_JD_Integers[3]])
                set udg_JD_TempPoint[2] = PolarProjectionBJ(udg_JD_TempPoint[1], udg_JD_SpeedUnits[udg_JD_Integers[3]], udg_JD_Angle[udg_JD_Integers[3]])
                if ( Trig_Jump_System_2_Func001Func001Func001Func021C() ) then
                    call EnumDestructablesInCircleBJ( 150.00, udg_JD_TempPoint[2], function Trig_Jump_System_2_Func001Func001Func001Func021Func001003 )
                else
                endif
                call SetUnitPositionLoc( udg_JD_Unit[udg_JD_Integers[3]], udg_JD_TempPoint[2] )
                set udg_JD_ReachedDistance[udg_JD_Integers[3]] = ( udg_JD_ReachedDistance[udg_JD_Integers[3]] + udg_JD_SpeedUnits[udg_JD_Integers[3]] )
                if ( Trig_Jump_System_2_Func001Func001Func001Func024C() ) then
                    call AddSpecialEffectTargetUnitBJ( "chest", udg_JD_Unit[udg_JD_Integers[3]], udg_JD_Effect[udg_JD_Integers[3]] )
                    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
                else
                endif
                set udg_JD_RealTimer[udg_JD_Integers[3]] = ( udg_JD_RealTimer[udg_JD_Integers[3]] + ( 180.00 / ( udg_JD_Distances[udg_JD_Integers[3]] / udg_JD_SpeedUnits[udg_JD_Integers[3]] ) ) )
                set udg_JD_JumpHigh[udg_JD_Integers[3]] = ( SinBJ(udg_JD_RealTimer[udg_JD_Integers[3]]) * udg_JD_HighSettings[udg_JD_Integers[3]] )
                call SetUnitFlyHeightBJ( udg_JD_Unit[udg_JD_Integers[3]], udg_JD_JumpHigh[udg_JD_Integers[3]], 1000000000.00 )
                //! beginusercode
                RemoveLocation (udg_JD_TempPoint[1])
                //! endusercode
                //! beginusercode
                RemoveLocation (udg_JD_TempPoint[2])
                //! endusercode
            else
                call QueueUnitAnimationBJ( udg_JD_Unit[udg_JD_Integers[3]], "stand" )
                set udg_TEMP_Pos2 = GetUnitLoc(udg_JD_Unit[udg_JD_Integers[3]])
                call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(udg_JD_Unit[udg_JD_Integers[3]]), udg_TEMP_Pos2, bj_UNIT_FACING )
                call UnitApplyTimedLifeBJ( 2.00, 'BTLF', GetLastCreatedUnit() )
                //! beginusercode
                RemoveLocation (udg_TEMP_Pos2)
                //! endusercode
                call UnitAddAbilityBJ( 'A00F', GetLastCreatedUnit() )
                call SetUnitAbilityLevelSwapped( 'A00F', GetLastCreatedUnit(), GetUnitAbilityLevelSwapped('A027', udg_JD_Unit[udg_JD_Integers[3]]) )
                call IssueImmediateOrderBJ( GetLastCreatedUnit(), "creepthunderclap" )
                call AddSpecialEffectLocBJ( udg_TEMP_Pos2, "Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl" )
                call DestroyEffectBJ( GetLastCreatedEffectBJ() )
                call SetUnitPathing( udg_JD_Unit[udg_JD_Integers[3]], true )
                call GroupRemoveUnitSimple( udg_JD_Unit[udg_JD_Integers[3]], udg_JD_Group )
                call SetUnitTimeScalePercent( udg_JD_Unit[udg_JD_Integers[3]], 100.00 )
                call ResetUnitAnimation( udg_JD_Unit[udg_JD_Integers[3]] )
                set udg_JD_RealTimer[udg_JD_Integers[3]] = 0.00
                set udg_JD_Integers[1] = ( udg_JD_Integers[1] - 1 )
                if ( Trig_Jump_System_2_Func001Func001Func001Func018C() ) then
                    set udg_JD_Integers[2] = 0
                    call DisableTrigger( GetTriggeringTrigger() )
                else
                endif
            endif
        else
        endif
        set udg_JD_Integers[3] = udg_JD_Integers[3] + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Jump_System_2 takes nothing returns nothing
    set gg_trg_Jump_System_2 = CreateTrigger(  )
    call DisableTrigger( gg_trg_Jump_System_2 )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Jump_System_2, 0.02 )
    call TriggerAddAction( gg_trg_Jump_System_2, function Trig_Jump_System_2_Actions )
endfunction

//===========================================================================
// Trigger: FA Start
//===========================================================================
function Trig_FA_Start_Func001C takes nothing returns boolean
    if ( ( GetSpellAbilityId() == 'A03U' ) ) then
        return true
    endif
    if ( ( GetSpellAbilityId() == 'A030' ) ) then
        return true
    endif
    return false
endfunction

function Trig_FA_Start_Conditions takes nothing returns boolean
    if ( not Trig_FA_Start_Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_FA_Start_Func006C takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A03U' ) ) then
        return false
    endif
    return true
endfunction

function Trig_FA_Start_Func016C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('A037', udg_FA_Caster[udg_FA_Index]) == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_FA_Start_Func017C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('A037', udg_FA_Caster[udg_FA_Index]) == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_FA_Start_Func018C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('A037', udg_FA_Caster[udg_FA_Index]) == 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_FA_Start_Func019C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('A037', udg_FA_Caster[udg_FA_Index]) == 4 ) ) then
        return false
    endif
    return true
endfunction

function Trig_FA_Start_Func021C takes nothing returns boolean
    if ( not ( udg_FA_Index == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_FA_Start_Actions takes nothing returns nothing
    set udg_FA_Index = ( udg_FA_Index + 1 )
    set udg_FA_Caster[udg_FA_Index] = GetSpellAbilityUnit()
    set udg_FA_Counter[udg_FA_Index] = 0.00
    set udg_FA_StartPoint[udg_FA_Index] = GetUnitLoc(udg_FA_Caster[udg_FA_Index])
    if ( Trig_FA_Start_Func006C() ) then
        set udg_FA_Facing[udg_FA_Index] = ( 160.00 + GetUnitFacing(udg_FA_Caster[udg_FA_Index]) )
        set udg_FA_Level = GetUnitAbilityLevelSwapped('A03U', udg_FA_Caster[udg_FA_Index])
        set udg_FA_Distance[udg_FA_Index] = ( 400.00 + ( 50.00 * I2R(udg_FA_Level) ) )
    else
        set udg_FA_Facing[udg_FA_Index] = ( 0.00 + GetUnitFacing(udg_FA_Caster[udg_FA_Index]) )
        set udg_FA_Level = GetUnitAbilityLevelSwapped('A030', udg_FA_Caster[udg_FA_Index])
        set udg_FA_Distance[udg_FA_Index] = ( 400.00 + ( 50.00 * I2R(udg_FA_Level) ) )
    endif
    set udg_FA_Duration[udg_FA_Index] = 0.40
    call SetUnitPathing( udg_FA_Caster[udg_FA_Index], false )
    call UnitAddAbilityBJ( 'Agho', udg_FA_Caster[udg_FA_Index] )
    call AddSpecialEffectLocBJ( udg_FA_StartPoint[udg_FA_Index], "Abilities\\Spells\\Orc\\FeralSpirit\\feralspiritdone.mdl" )
    call BlzSetSpecialEffectScale( GetLastCreatedEffectBJ(), 2.00 )
    call BlzSetSpecialEffectZ( GetLastCreatedEffectBJ(), 10.00 )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(udg_FA_Caster[udg_FA_Index]), udg_FA_StartPoint[udg_FA_Index], bj_UNIT_FACING )
    call UnitApplyTimedLifeBJ( 1.00, 'BTLF', GetLastCreatedUnit() )
    if ( Trig_FA_Start_Func016C() ) then
        call UnitAddAbilityBJ( 'AIil', GetLastCreatedUnit() )
        call SetUnitAbilityLevelSwapped( 'AIil', GetLastCreatedUnit(), udg_FA_Level )
    else
    endif
    if ( Trig_FA_Start_Func017C() ) then
        call UnitAddAbilityBJ( 'A039', GetLastCreatedUnit() )
        call SetUnitAbilityLevelSwapped( 'A039', GetLastCreatedUnit(), udg_FA_Level )
    else
    endif
    if ( Trig_FA_Start_Func018C() ) then
        call UnitAddAbilityBJ( 'A03B', GetLastCreatedUnit() )
        call SetUnitAbilityLevelSwapped( 'A03B', GetLastCreatedUnit(), udg_FA_Level )
    else
    endif
    if ( Trig_FA_Start_Func019C() ) then
        call UnitAddAbilityBJ( 'A03A', GetLastCreatedUnit() )
        call SetUnitAbilityLevelSwapped( 'A03A', GetLastCreatedUnit(), udg_FA_Level )
    else
    endif
    //! beginusercode
    IssueTargetOrderById( bj_lastCreatedUnit, 852274, udg_FA_Caster[ udg_FA_Index ] )
    //! endusercode
    if ( Trig_FA_Start_Func021C() ) then
        call EnableTrigger( gg_trg_FA_Loop )
    else
    endif
endfunction

//===========================================================================
function InitTrig_FA_Start takes nothing returns nothing
    set gg_trg_FA_Start = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_FA_Start, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_FA_Start, Condition( function Trig_FA_Start_Conditions ) )
    call TriggerAddAction( gg_trg_FA_Start, function Trig_FA_Start_Actions )
endfunction

//===========================================================================
// Trigger: FA Loop
//===========================================================================
function Trig_FA_Loop_Func001Func003C takes nothing returns boolean
    if ( not ( IsTerrainPathableBJ(udg_TEMP_Pos2, PATHING_TYPE_WALKABILITY) == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_FA_Loop_Func001Func006Func013C takes nothing returns boolean
    if ( not ( udg_FA_Index == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_FA_Loop_Func001Func006C takes nothing returns boolean
    if ( not ( udg_FA_Counter[udg_FA_Loop] >= ( udg_FA_Duration[udg_FA_Loop] + 0.00 ) ) ) then
        return false
    endif
    return true
endfunction

function Trig_FA_Loop_Actions takes nothing returns nothing
    set udg_FA_Loop = 1
    loop
        exitwhen udg_FA_Loop > udg_FA_Index
        set udg_TEMP_Pos2 = PolarProjectionBJ(udg_FA_StartPoint[udg_FA_Loop], ( udg_FA_Distance[udg_FA_Loop] * ( udg_FA_Counter[udg_FA_Loop] / udg_FA_Duration[udg_FA_Loop] ) ), udg_FA_Facing[udg_FA_Loop])
        set udg_TEMP_Pos_Spell = PolarProjectionBJ(udg_FA_StartPoint[udg_FA_Loop], ( udg_FA_Distance[udg_FA_Loop] * ( ( udg_FA_Counter[udg_FA_Loop] + 0.00 ) / udg_FA_Duration[udg_FA_Loop] ) ), udg_FA_Facing[udg_FA_Loop])
        if ( Trig_FA_Loop_Func001Func003C() ) then
            call SetUnitPositionLoc( udg_FA_Caster[udg_FA_Loop], udg_TEMP_Pos_Spell )
            set udg_FA_Counter[udg_FA_Loop] = ( udg_FA_Counter[udg_FA_Loop] + 0.02 )
        else
            set udg_FA_Counter[udg_FA_Loop] = udg_FA_Duration[udg_FA_Loop]
        endif
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos2 )
        //! endusercode
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos_Spell )
        //! endusercode
        if ( Trig_FA_Loop_Func001Func006C() ) then
            call UnitRemoveAbilityBJ( 'Agho', udg_FA_Caster[udg_FA_Loop] )
            call SetUnitPathing( udg_FA_Caster[udg_FA_Loop], true )
            call PauseUnitBJ( false, udg_FA_Caster[udg_FA_Loop] )
            //! beginusercode
            RemoveLocation ( udg_FA_StartPoint [ udg_FA_Loop ]  )
            //! endusercode
            set udg_FA_Caster[udg_FA_Loop] = udg_FA_Caster[udg_FA_Index]
            set udg_FA_Counter[udg_FA_Loop] = udg_FA_Counter[udg_FA_Index]
            set udg_FA_Distance[udg_FA_Loop] = udg_FA_Distance[udg_FA_Index]
            set udg_FA_StartPoint[udg_FA_Loop] = udg_FA_StartPoint[udg_FA_Index]
            set udg_FA_Duration[udg_FA_Loop] = udg_FA_Duration[udg_FA_Index]
            set udg_FA_Facing[udg_FA_Loop] = udg_FA_Facing[udg_FA_Index]
            set udg_FA_Index = ( udg_FA_Index - 1 )
            set udg_FA_Loop = ( udg_FA_Loop - 1 )
            if ( Trig_FA_Loop_Func001Func006Func013C() ) then
                call DisableTrigger( GetTriggeringTrigger() )
            else
            endif
        else
        endif
        set udg_FA_Loop = udg_FA_Loop + 1
    endloop
endfunction

//===========================================================================
function InitTrig_FA_Loop takes nothing returns nothing
    set gg_trg_FA_Loop = CreateTrigger(  )
    call DisableTrigger( gg_trg_FA_Loop )
    call TriggerRegisterTimerEventPeriodic( gg_trg_FA_Loop, 0.02 )
    call TriggerAddAction( gg_trg_FA_Loop, function Trig_FA_Loop_Actions )
endfunction

//===========================================================================
// Trigger: Shifter Bladestorm START
//===========================================================================
function Trig_Shifter_Bladestorm_START_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A03C' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Shifter_Bladestorm_START_Func004002003001 takes nothing returns boolean
    return ( IsUnitIllusionBJ(GetFilterUnit()) == true )
endfunction

function Trig_Shifter_Bladestorm_START_Func004002003002 takes nothing returns boolean
    return ( GetOwningPlayer(GetFilterUnit()) == GetOwningPlayer(udg_SB_Caster) )
endfunction

function Trig_Shifter_Bladestorm_START_Func004002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Shifter_Bladestorm_START_Func004002003001(), Trig_Shifter_Bladestorm_START_Func004002003002() )
endfunction

function Trig_Shifter_Bladestorm_START_Func006A takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(GetEnumUnit())
    call AddSpecialEffectLocBJ( udg_TEMP_Pos2, "Abilities\\Spells\\Undead\\DarkRitual\\DarkRitualTarget.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    call RemoveUnit( GetEnumUnit() )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

function Trig_Shifter_Bladestorm_START_Func008Func007Func001Func002C takes nothing returns boolean
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Left, GetLastCreatedUnit()) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Left_Center, GetLastCreatedUnit()) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Right_Center, GetLastCreatedUnit()) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Middle_Right, GetLastCreatedUnit()) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Shifter_Bladestorm_START_Func008Func007Func001C takes nothing returns boolean
    if ( not Trig_Shifter_Bladestorm_START_Func008Func007Func001Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Shifter_Bladestorm_START_Func008Func007Func002C takes nothing returns boolean
    if ( ( RectContainsUnit(gg_rct_Big_Top_Left, GetLastCreatedUnit()) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Top_Left_Center, GetLastCreatedUnit()) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Top_Right_Center, GetLastCreatedUnit()) == true ) ) then
        return true
    endif
    if ( ( RectContainsUnit(gg_rct_Big_Top_Right, GetLastCreatedUnit()) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Shifter_Bladestorm_START_Func008Func007C takes nothing returns boolean
    if ( not Trig_Shifter_Bladestorm_START_Func008Func007Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Shifter_Bladestorm_START_Actions takes nothing returns nothing
    set udg_SB_Caster = GetSpellAbilityUnit()
    set udg_TEMP_Pos_Hero = GetUnitLoc(udg_SB_Caster)
    set udg_TEMP_Int = GetUnitAbilityLevelSwapped('A03C', udg_SB_Caster)
    set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocMatching(( 500.00 + ( 100.00 * I2R(udg_TEMP_Int) ) ), udg_TEMP_Pos_Hero, Condition(function Trig_Shifter_Bladestorm_START_Func004002003))
    set udg_TEMP_Int2 = CountUnitsInGroup(udg_TEMP_UnitGroup)
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Shifter_Bladestorm_START_Func006A )
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
    set udg_TEMP_IntLoop1 = 1
    loop
        exitwhen udg_TEMP_IntLoop1 > udg_TEMP_Int2
        set udg_TEMP_Pos2 = PolarProjectionBJ(udg_TEMP_Pos_Hero, 150.00, GetRandomDirectionDeg())
        call CreateNUnitsAtLoc( 1, 'o006', GetOwningPlayer(udg_SB_Caster), udg_TEMP_Pos2, GetRandomDirectionDeg() )
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos2 )
        //! endusercode
        call SetUnitAbilityLevelSwapped( 'A03O', GetLastCreatedUnit(), udg_TEMP_Int )
        call UnitApplyTimedLifeBJ( 14.00, 'BTLF', GetLastCreatedUnit() )
        call IssueImmediateOrderBJ( GetLastCreatedUnit(), "whirlwind" )
        if ( Trig_Shifter_Bladestorm_START_Func008Func007C() ) then
            call SetUnitUserData( GetLastCreatedUnit(), 1 )
        else
            if ( Trig_Shifter_Bladestorm_START_Func008Func007Func001C() ) then
                call SetUnitUserData( GetLastCreatedUnit(), 2 )
            else
                call SetUnitUserData( GetLastCreatedUnit(), 3 )
            endif
        endif
        set udg_TEMP_Unit = GetLastCreatedUnit()
        call ConditionalTriggerExecute( gg_trg_FUNC_Move_Creeps )
        set udg_TEMP_IntLoop1 = udg_TEMP_IntLoop1 + 1
    endloop
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos_Hero )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Shifter_Bladestorm_START takes nothing returns nothing
    set gg_trg_Shifter_Bladestorm_START = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Shifter_Bladestorm_START, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Shifter_Bladestorm_START, Condition( function Trig_Shifter_Bladestorm_START_Conditions ) )
    call TriggerAddAction( gg_trg_Shifter_Bladestorm_START, function Trig_Shifter_Bladestorm_START_Actions )
endfunction

//===========================================================================
// Trigger: Mana Overload START
//===========================================================================
function Trig_Mana_Overload_START_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A018' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Overload_START_Func014Func001C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_FLYING) == false ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_RESISTANT) == false ) ) then
        return false
    endif
    if ( not ( IsUnitEnemy(GetEnumUnit(), GetOwningPlayer(udg_MO_Caster[udg_MO_Index])) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Overload_START_Func014A takes nothing returns nothing
    if ( Trig_Mana_Overload_START_Func014Func001C() ) then
        set udg_MO_UnitCount[udg_MO_Index] = ( udg_MO_UnitCount[udg_MO_Index] + 1 )
        call UnitDamageTargetBJ( udg_MO_Caster[udg_MO_Index], GetEnumUnit(), ( I2R(udg_MO_AbilityLevel[udg_MO_Index]) * 25.00 ), ATTACK_TYPE_NORMAL, DAMAGE_TYPE_MAGIC )
        call AddSpecialEffectTargetUnitBJ( "chest", GetEnumUnit(), "Abilities\\Spells\\Undead\\DarkRitual\\DarkRitualTarget.mdl" )
        call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    else
    endif
endfunction

function Trig_Mana_Overload_START_Func018C takes nothing returns boolean
    if ( not ( udg_MO_Index == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Overload_START_Actions takes nothing returns nothing
    // Set up Index
    set udg_MO_Index = ( udg_MO_Index + 1 )
    set udg_MO_Caster[udg_MO_Index] = GetSpellAbilityUnit()
    set udg_MO_Counter[udg_MO_Index] = 0.00
    set udg_MO_UnitCount[udg_MO_Index] = 0.00
    set udg_MO_AbilityLevel[udg_MO_Index] = GetUnitAbilityLevelSwapped('A018', udg_MO_Caster[udg_MO_Index])
    set udg_MO_AbilityLevel[udg_MO_Index] = GetUnitAbilityLevelSwapped('A018', udg_MO_Caster[udg_MO_Index])
    set udg_MO_Pushback[udg_MO_Index] = ( 200.00 + ( I2R(udg_MO_AbilityLevel[udg_MO_Index]) * 35.00 ) )
    call AddSpecialEffectLocBJ( udg_TEMP_Pos_Hero, "war3mapImported\\FreezingRing.mdx" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    // Get Group
    set udg_TEMP_Pos_Hero = GetUnitLoc(udg_MO_Caster[udg_MO_Index])
    set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocAll(udg_MO_Pushback[udg_MO_Index], udg_TEMP_Pos_Hero)
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Mana_Overload_START_Func014A )
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos_Hero )
    //! endusercode
    call SetUnitManaBJ( udg_MO_Caster[udg_MO_Index], ( GetUnitStateSwap(UNIT_STATE_MANA, udg_MO_Caster[udg_MO_Index]) + ( udg_MO_UnitCount[udg_MO_Index] * ( 17.00 * I2R(udg_MO_AbilityLevel[udg_MO_Index]) ) ) ) )
    if ( Trig_Mana_Overload_START_Func018C() ) then
        call EnableTrigger( gg_trg_Mana_Overload_LOOP )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Mana_Overload_START takes nothing returns nothing
    set gg_trg_Mana_Overload_START = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Mana_Overload_START, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Mana_Overload_START, Condition( function Trig_Mana_Overload_START_Conditions ) )
    call TriggerAddAction( gg_trg_Mana_Overload_START, function Trig_Mana_Overload_START_Actions )
endfunction

//===========================================================================
// Trigger: Mana Overload LOOP
//===========================================================================
function Trig_Mana_Overload_LOOP_Func001Func001Func003Func001C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_FLYING) == false ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_MAGIC_IMMUNE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_RESISTANT) == false ) ) then
        return false
    endif
    if ( not ( IsUnitEnemy(GetEnumUnit(), GetOwningPlayer(udg_MO_Caster[udg_MO_Index])) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Overload_LOOP_Func001Func001Func003A takes nothing returns nothing
    if ( Trig_Mana_Overload_LOOP_Func001Func001Func003Func001C() ) then
        set udg_TEMP_Pos2 = GetUnitLoc(GetEnumUnit())
        set udg_TEMP_Pos_Spell = PolarProjectionBJ(udg_TEMP_Pos2, ( ( ( udg_MO_Pushback[udg_MO_Loop] + 40.00 ) - DistanceBetweenPoints(udg_TEMP_Pos_Hero, udg_TEMP_Pos2) ) * 0.10 ), AngleBetweenPoints(udg_TEMP_Pos_Hero, udg_TEMP_Pos2))
        call SetUnitPositionLoc( GetEnumUnit(), udg_TEMP_Pos_Spell )
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos2 )
        //! endusercode
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos_Spell )
        //! endusercode
    else
    endif
endfunction

function Trig_Mana_Overload_LOOP_Func001Func001C takes nothing returns boolean
    if ( not ( udg_MO_Counter[udg_MO_Loop] >= 0.20 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Overload_LOOP_Func001Func004Func006C takes nothing returns boolean
    if ( not ( udg_MO_Index == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Overload_LOOP_Func001Func004C takes nothing returns boolean
    if ( not ( udg_MO_Counter[udg_MO_Loop] > 0.80 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Overload_LOOP_Actions takes nothing returns nothing
    set udg_MO_Loop = 1
    loop
        exitwhen udg_MO_Loop > udg_MO_Index
        if ( Trig_Mana_Overload_LOOP_Func001Func001C() ) then
            set udg_TEMP_Pos_Hero = GetUnitLoc(udg_MO_Caster[udg_MO_Loop])
            set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocAll(( udg_MO_Pushback[udg_MO_Loop] + 40.00 ), udg_TEMP_Pos_Hero)
            call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Mana_Overload_LOOP_Func001Func001Func003A )
            //! beginusercode
            DestroyGroup ( udg_TEMP_UnitGroup )
            //! endusercode
            //! beginusercode
            RemoveLocation ( udg_TEMP_Pos_Hero )
            //! endusercode
        else
        endif
        // END EFFECTS
        set udg_MO_Counter[udg_MO_Loop] = ( udg_MO_Counter[udg_MO_Loop] + 0.04 )
        if ( Trig_Mana_Overload_LOOP_Func001Func004C() ) then
            set udg_MO_Caster[udg_MO_Loop] = udg_MO_Caster[udg_MO_Index]
            set udg_MO_Counter[udg_MO_Loop] = udg_MO_Counter[udg_MO_Index]
            set udg_MO_AbilityLevel[udg_MO_Loop] = udg_MO_AbilityLevel[udg_MO_Index]
            set udg_MO_Index = ( udg_MO_Index - 1 )
            set udg_MO_Loop = ( udg_MO_Loop - 1 )
            if ( Trig_Mana_Overload_LOOP_Func001Func004Func006C() ) then
                call DisableTrigger( GetTriggeringTrigger() )
            else
            endif
        else
        endif
        set udg_MO_Loop = udg_MO_Loop + 1
    endloop
endfunction

//===========================================================================
function InitTrig_Mana_Overload_LOOP takes nothing returns nothing
    set gg_trg_Mana_Overload_LOOP = CreateTrigger(  )
    call DisableTrigger( gg_trg_Mana_Overload_LOOP )
    call TriggerRegisterTimerEventPeriodic( gg_trg_Mana_Overload_LOOP, 0.04 )
    call TriggerAddAction( gg_trg_Mana_Overload_LOOP, function Trig_Mana_Overload_LOOP_Actions )
endfunction

//===========================================================================
// Trigger: Frost INIT
//===========================================================================
function Trig_Frost_INIT_Actions takes nothing returns nothing
    call InitHashtableBJ(  )
    set udg_FN_Hash = GetLastCreatedHashtableBJ()
    set udg_FN_Interval = 0.10
    call TriggerRegisterTimerEventPeriodic( gg_trg_Frost_LOOP, udg_FN_Interval )
endfunction

//===========================================================================
function InitTrig_Frost_INIT takes nothing returns nothing
    set gg_trg_Frost_INIT = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Frost_INIT, function Trig_Frost_INIT_Actions )
endfunction

//===========================================================================
// Trigger: Frost CAST
//===========================================================================
function Trig_Frost_CAST_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A03S' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_CAST_Func018C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_FN_Group) == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_CAST_Actions takes nothing returns nothing
    set udg_Spell_LOC_Cast = GetUnitLoc(GetSpellAbilityUnit())
    set udg_Spell_LOC_Spell = GetSpellTargetLoc()
    set udg_Spell_Level = GetUnitAbilityLevelSwapped('A03S', GetSpellAbilityUnit())
    set udg_Spell_Duration = 3.00
    set udg_Spell_Speed = ( 35.00 + ( 5.00 * I2R(udg_Spell_Level) ) )
    set udg_Spell_Distance = DistanceBetweenPoints(udg_Spell_LOC_Cast, udg_Spell_LOC_Spell)
    //  
    call GroupAddUnitSimple( GetSpellAbilityUnit(), udg_FN_Group )
    call SaveRealBJ( 0.00, 0, GetHandleIdBJ(GetSpellAbilityUnit()), udg_FN_Hash )
    call SaveLocationHandleBJ( udg_Spell_LOC_Cast, 1, GetHandleIdBJ(GetSpellAbilityUnit()), udg_FN_Hash )
    call SaveLocationHandleBJ( udg_Spell_LOC_Spell, 2, GetHandleIdBJ(GetSpellAbilityUnit()), udg_FN_Hash )
    call SaveIntegerBJ( udg_Spell_Level, 3, GetHandleIdBJ(GetSpellAbilityUnit()), udg_FN_Hash )
    call SaveRealBJ( udg_Spell_Duration, 4, GetHandleIdBJ(GetSpellAbilityUnit()), udg_FN_Hash )
    call SaveRealBJ( udg_Spell_Speed, 5, GetHandleIdBJ(GetSpellAbilityUnit()), udg_FN_Hash )
    call SaveRealBJ( udg_Spell_Distance, 6, GetHandleIdBJ(GetSpellAbilityUnit()), udg_FN_Hash )
    call SaveIntegerBJ( 1, 7, GetHandleIdBJ(GetSpellAbilityUnit()), udg_FN_Hash )
    //  
    if ( Trig_Frost_CAST_Func018C() ) then
        call EnableTrigger( gg_trg_Frost_LOOP )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Frost_CAST takes nothing returns nothing
    set gg_trg_Frost_CAST = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Frost_CAST, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Frost_CAST, Condition( function Trig_Frost_CAST_Conditions ) )
    call TriggerAddAction( gg_trg_Frost_CAST, function Trig_Frost_CAST_Actions )
endfunction

//===========================================================================
// Trigger: Frost LOOP
//===========================================================================
function Trig_Frost_LOOP_Func001Func011Func004Func005C takes nothing returns boolean
    if ( not ( GetUnitManaPercent(GetEnumUnit()) >= 66.66 ) ) then
        return false
    endif
    if ( not ( udg_Mana_Overload_Researched[GetConvertedPlayerId(GetOwningPlayer(GetEnumUnit()))] >= 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_LOOP_Func001Func011Func004Func007C takes nothing returns boolean
    if ( not ( GetUnitManaPercent(GetEnumUnit()) >= 33.33 ) ) then
        return false
    endif
    if ( not ( udg_Mana_Overload_Researched[GetConvertedPlayerId(GetOwningPlayer(GetEnumUnit()))] >= 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_LOOP_Func001Func011Func004Func008C takes nothing returns boolean
    if ( not ( udg_Mana_Overload_Researched[GetConvertedPlayerId(GetOwningPlayer(GetEnumUnit()))] >= 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_LOOP_Func001Func011Func004C takes nothing returns boolean
    if ( not ( udg_Spell_Counter < udg_Spell_Duration ) ) then
        return false
    endif
    if ( not ( DistanceBetweenPoints(udg_TEMP_Pos2, udg_Spell_LOC_Spell) > udg_Spell_Speed ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_LOOP_Func001Func011C takes nothing returns boolean
    if ( not ( udg_Spell_Phase == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_LOOP_Func001Func014Func001Func001C takes nothing returns boolean
    if ( not ( IsUnitAlly(GetEnumUnit(), ForcePickRandomPlayer(udg_PLAYERGRPallied)) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_LOOP_Func001Func014Func001C takes nothing returns boolean
    if ( not ( udg_Spell_Counter == 0.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_LOOP_Func001Func014Func002Func001Func002C takes nothing returns boolean
    if ( not ( IsUnitAlly(GetEnumUnit(), ForcePickRandomPlayer(udg_PLAYERGRPallied)) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_LOOP_Func001Func014Func002Func001C takes nothing returns boolean
    if ( not ( udg_Spell_Counter >= 0.40 ) ) then
        return false
    endif
    if ( not ( ModuloInteger(R2I(( udg_Spell_Counter * 10.00 )), 2) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_LOOP_Func001Func014Func002Func005C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_FN_Group) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_LOOP_Func001Func014Func002C takes nothing returns boolean
    if ( not ( udg_Spell_Counter < udg_Spell_Duration ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_LOOP_Func001Func014C takes nothing returns boolean
    if ( not ( udg_Spell_Phase == 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Frost_LOOP_Func001A takes nothing returns nothing
    set udg_Spell_Counter = LoadRealBJ(0, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash)
    set udg_Spell_LOC_Cast = LoadLocationHandleBJ(1, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash)
    set udg_Spell_LOC_Spell = LoadLocationHandleBJ(2, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash)
    set udg_Spell_Level = LoadIntegerBJ(3, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash)
    set udg_Spell_Duration = LoadRealBJ(4, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash)
    set udg_Spell_Speed = LoadRealBJ(5, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash)
    set udg_Spell_Distance = LoadRealBJ(6, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash)
    set udg_Spell_Phase = LoadIntegerBJ(7, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash)
    //  
    // Phase 1
    if ( Trig_Frost_LOOP_Func001Func011C() ) then
        set udg_TEMP_Real = ( udg_Spell_Speed * ( udg_Spell_Counter / udg_FN_Interval ) )
        set udg_TEMP_Pos2 = PolarProjectionBJ(udg_Spell_LOC_Cast, udg_TEMP_Real, AngleBetweenPoints(udg_Spell_LOC_Cast, udg_Spell_LOC_Spell))
        //  
        if ( Trig_Frost_LOOP_Func001Func011Func004C() ) then
            call AddSpecialEffectLocBJ( udg_TEMP_Pos2, "Abilities\\Spells\\Undead\\DeathandDecay\\DeathandDecayDamage.mdl" )
            call DestroyEffectBJ( GetLastCreatedEffectBJ() )
            call SaveRealBJ( ( udg_Spell_Counter + udg_FN_Interval ), 0, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash )
        else
            call SaveRealBJ( 0.00, 0, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash )
            call SaveIntegerBJ( 2, 7, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash )
            set udg_Spell_Duration = 0.40
            // Mana Greater than 66%
            if ( Trig_Frost_LOOP_Func001Func011Func004Func005C() ) then
                set udg_Spell_Duration = ( udg_Spell_Duration + 0.60 )
            else
            endif
            // Mana Greater than 33%
            if ( Trig_Frost_LOOP_Func001Func011Func004Func007C() ) then
                set udg_Spell_Duration = ( udg_Spell_Duration + 0.60 )
            else
            endif
            if ( Trig_Frost_LOOP_Func001Func011Func004Func008C() ) then
                set udg_Spell_Duration = ( udg_Spell_Duration + 0.60 )
            else
            endif
            call SaveRealBJ( udg_Spell_Duration, 4, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash )
        endif
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos2 )
        //! endusercode
    else
    endif
    //  
    // Phase 2
    if ( Trig_Frost_LOOP_Func001Func014C() ) then
        if ( Trig_Frost_LOOP_Func001Func014Func001C() ) then
            if ( Trig_Frost_LOOP_Func001Func014Func001Func001C() ) then
                call CreateNUnitsAtLoc( 1, 'h00V', Player(23), udg_Spell_LOC_Spell, bj_UNIT_FACING )
                call UnitApplyTimedLifeBJ( 0.05, 'BTLF', GetLastCreatedUnit() )
            else
                call CreateNUnitsAtLoc( 1, 'h00V', Player(20), udg_Spell_LOC_Spell, bj_UNIT_FACING )
                call UnitApplyTimedLifeBJ( 0.05, 'BTLF', GetLastCreatedUnit() )
            endif
            //  
            set udg_TEMP_Unit = GetLastCreatedUnit()
            call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(GetEnumUnit()), udg_Spell_LOC_Spell, bj_UNIT_FACING )
            call UnitAddAbilityBJ( 'A014', GetLastCreatedUnit() )
            call SetUnitAbilityLevelSwapped( 'A014', GetLastCreatedUnit(), udg_Spell_Level )
            call IssueTargetOrderBJ( GetLastCreatedUnit(), "frostnova", udg_TEMP_Unit )
            call UnitApplyTimedLifeBJ( 3.00, 'BTLF', GetLastCreatedUnit() )
            call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(GetEnumUnit()), udg_Spell_LOC_Spell, bj_UNIT_FACING )
            call UnitAddAbilityBJ( 'A016', GetLastCreatedUnit() )
            call SetUnitAbilityLevelSwapped( 'A016', GetLastCreatedUnit(), udg_Spell_Level )
            call IssueTargetOrderBJ( GetLastCreatedUnit(), "frostnova", udg_TEMP_Unit )
            call UnitApplyTimedLifeBJ( 3.00, 'BTLF', GetLastCreatedUnit() )
        else
        endif
        if ( Trig_Frost_LOOP_Func001Func014Func002C() ) then
            if ( Trig_Frost_LOOP_Func001Func014Func002Func001C() ) then
                set udg_TEMP_Pos2 = GetRandomLocInRect(RectFromCenterSizeBJ(udg_Spell_LOC_Spell, 550.00, 550.00))
                if ( Trig_Frost_LOOP_Func001Func014Func002Func001Func002C() ) then
                    call CreateNUnitsAtLoc( 1, 'h00V', Player(23), udg_TEMP_Pos2, bj_UNIT_FACING )
                    call UnitApplyTimedLifeBJ( 0.05, 'BTLF', GetLastCreatedUnit() )
                else
                    call CreateNUnitsAtLoc( 1, 'h00V', Player(20), udg_TEMP_Pos2, bj_UNIT_FACING )
                    call UnitApplyTimedLifeBJ( 0.05, 'BTLF', GetLastCreatedUnit() )
                endif
                //  
                set udg_TEMP_Unit = GetLastCreatedUnit()
                call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(GetEnumUnit()), udg_Spell_LOC_Spell, bj_UNIT_FACING )
                call UnitAddAbilityBJ( 'A017', GetLastCreatedUnit() )
                call SetUnitAbilityLevelSwapped( 'A017', GetLastCreatedUnit(), udg_Spell_Level )
                call IssueTargetOrderBJ( GetLastCreatedUnit(), "frostnova", udg_TEMP_Unit )
                call UnitApplyTimedLifeBJ( 3.00, 'BTLF', GetLastCreatedUnit() )
                //! beginusercode
                RemoveLocation ( udg_TEMP_Pos2 )
                //! endusercode
            else
            endif
            call SaveRealBJ( ( udg_Spell_Counter + udg_FN_Interval ), 0, GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash )
        else
            call FlushChildHashtableBJ( GetHandleIdBJ(GetEnumUnit()), udg_FN_Hash )
            call GroupRemoveUnitSimple( GetEnumUnit(), udg_FN_Group )
            if ( Trig_Frost_LOOP_Func001Func014Func002Func005C() ) then
                call DisableTrigger( GetTriggeringTrigger() )
            else
            endif
        endif
    else
    endif
endfunction

function Trig_Frost_LOOP_Actions takes nothing returns nothing
    call ForGroupBJ( udg_FN_Group, function Trig_Frost_LOOP_Func001A )
endfunction

//===========================================================================
function InitTrig_Frost_LOOP takes nothing returns nothing
    set gg_trg_Frost_LOOP = CreateTrigger(  )
    call DisableTrigger( gg_trg_Frost_LOOP )
    call TriggerAddAction( gg_trg_Frost_LOOP, function Trig_Frost_LOOP_Actions )
endfunction

//===========================================================================
// Trigger: Mana Burst Secondary
//===========================================================================
function Trig_Mana_Burst_Secondary_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A02B' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Burst_Secondary_Func003C takes nothing returns boolean
    if ( not ( GetUnitManaPercent(GetSpellAbilityUnit()) >= 66.67 ) ) then
        return false
    endif
    if ( not ( GetUnitAbilityLevelSwapped('A02N', GetSpellAbilityUnit()) > 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Burst_Secondary_Func004C takes nothing returns boolean
    if ( not ( GetUnitManaPercent(GetSpellAbilityUnit()) >= 33.33 ) ) then
        return false
    endif
    if ( not ( GetUnitAbilityLevelSwapped('A02N', GetSpellAbilityUnit()) > 2 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Burst_Secondary_Func005C takes nothing returns boolean
    if ( not ( GetUnitAbilityLevelSwapped('A02N', GetSpellAbilityUnit()) > 3 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Mana_Burst_Secondary_Actions takes nothing returns nothing
    set udg_TEMP_Pos_Hero = GetUnitLoc(GetSpellAbilityUnit())
    set udg_TEMP_Pos_Spell = GetSpellTargetLoc()
    if ( Trig_Mana_Burst_Secondary_Func003C() ) then
        call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(GetSpellAbilityUnit()), udg_TEMP_Pos_Hero, bj_UNIT_FACING )
        call UnitAddAbilityBJ( 'A02C', GetLastCreatedUnit() )
        call SetUnitAbilityLevelSwapped( 'A02C', GetLastCreatedUnit(), GetUnitAbilityLevelSwapped('A02B', GetSpellAbilityUnit()) )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "clusterrockets", udg_TEMP_Pos_Spell )
        call UnitApplyTimedLifeBJ( 1.00, 'BTLF', GetLastCreatedUnit() )
    else
    endif
    if ( Trig_Mana_Burst_Secondary_Func004C() ) then
        call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(GetSpellAbilityUnit()), udg_TEMP_Pos_Hero, bj_UNIT_FACING )
        call UnitAddAbilityBJ( 'A02C', GetLastCreatedUnit() )
        call SetUnitAbilityLevelSwapped( 'A02C', GetLastCreatedUnit(), GetUnitAbilityLevelSwapped('A02B', GetSpellAbilityUnit()) )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "clusterrockets", udg_TEMP_Pos_Spell )
        call UnitApplyTimedLifeBJ( 1.00, 'BTLF', GetLastCreatedUnit() )
    else
    endif
    if ( Trig_Mana_Burst_Secondary_Func005C() ) then
        call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(GetSpellAbilityUnit()), udg_TEMP_Pos_Hero, bj_UNIT_FACING )
        call UnitAddAbilityBJ( 'A02C', GetLastCreatedUnit() )
        call SetUnitAbilityLevelSwapped( 'A02C', GetLastCreatedUnit(), GetUnitAbilityLevelSwapped('A02B', GetSpellAbilityUnit()) )
        call IssuePointOrderLocBJ( GetLastCreatedUnit(), "clusterrockets", udg_TEMP_Pos_Spell )
        call UnitApplyTimedLifeBJ( 1.00, 'BTLF', GetLastCreatedUnit() )
    else
    endif
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos_Hero )
    //! endusercode
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos_Spell )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Mana_Burst_Secondary takes nothing returns nothing
    set gg_trg_Mana_Burst_Secondary = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Mana_Burst_Secondary, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Mana_Burst_Secondary, Condition( function Trig_Mana_Burst_Secondary_Conditions ) )
    call TriggerAddAction( gg_trg_Mana_Burst_Secondary, function Trig_Mana_Burst_Secondary_Actions )
endfunction

//===========================================================================
// Trigger: Paradox INIT
//===========================================================================
function Trig_Paradox_INIT_Actions takes nothing returns nothing
    call InitHashtableBJ(  )
    set udg_Paradox_HASH = GetLastCreatedHashtableBJ()
    set udg_Paradox_INTERVAL = 0.20
    call TriggerRegisterTimerEventPeriodic( gg_trg_Paradox_LOOP, udg_Paradox_INTERVAL )
endfunction

//===========================================================================
function InitTrig_Paradox_INIT takes nothing returns nothing
    set gg_trg_Paradox_INIT = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Paradox_INIT, function Trig_Paradox_INIT_Actions )
endfunction

//===========================================================================
// Trigger: Paradox CAST
//===========================================================================
function Trig_Paradox_CAST_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A04N' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Paradox_CAST_Func028C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_Paradox_GROUP) >= 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Paradox_CAST_Actions takes nothing returns nothing
    set udg_Spell_LOC_Cast = GetUnitLoc(GetSpellAbilityUnit())
    set udg_Spell_Caster = GetSpellAbilityUnit()
    set udg_Spell_Level = GetUnitAbilityLevelSwapped('A04N', GetSpellAbilityUnit())
    //  
    set udg_CALC_Base = 9.00
    set udg_CALC_Constant = 0.00
    set udg_CALC_Level_Factor = 1.00
    set udg_CALC_Previous_Value = 1.00
    set udg_CALC_ITERATIONS = udg_Spell_Level
    call ConditionalTriggerExecute( gg_trg_FUNC_Calculate_Level_Factor )
    set udg_Spell_Duration = udg_CALC_RESULT
    //  
    call GroupAddUnitSimple( GetSpellAbilityUnit(), udg_Paradox_GROUP )
    call SaveRealBJ( 0.00, 0, GetHandleIdBJ(GetSpellAbilityUnit()), udg_Paradox_HASH )
    call SaveLocationHandleBJ( udg_Spell_LOC_Cast, 1, GetHandleIdBJ(GetSpellAbilityUnit()), udg_Paradox_HASH )
    call SaveIntegerBJ( udg_Spell_Level, 3, GetHandleIdBJ(GetSpellAbilityUnit()), udg_Paradox_HASH )
    call SaveRealBJ( udg_Spell_Duration, 4, GetHandleIdBJ(GetSpellAbilityUnit()), udg_Paradox_HASH )
    //  
    call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(udg_Spell_Caster), udg_Spell_LOC_Cast, bj_UNIT_FACING )
    call SaveUnitHandleBJ( GetLastCreatedUnit(), 2, GetHandleIdBJ(GetTriggerUnit()), udg_Paradox_HASH )
    //  
    call UnitAddAbilityBJ( 'S002', GetLastCreatedUnit() )
    call SetUnitAbilityLevelSwapped( 'S002', GetLastCreatedUnit(), udg_Spell_Level )
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "deathanddecay", udg_Spell_LOC_Cast )
    call UnitApplyTimedLifeBJ( 20.00, 'BTLF', GetLastCreatedUnit() )
    if ( Trig_Paradox_CAST_Func028C() ) then
        call EnableTrigger( gg_trg_Paradox_LOOP )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Paradox_CAST takes nothing returns nothing
    set gg_trg_Paradox_CAST = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Paradox_CAST, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Paradox_CAST, Condition( function Trig_Paradox_CAST_Conditions ) )
    call TriggerAddAction( gg_trg_Paradox_CAST, function Trig_Paradox_CAST_Actions )
endfunction

//===========================================================================
// Trigger: Paradox LOOP
//===========================================================================
function Trig_Paradox_LOOP_Func001Func005Func003C takes nothing returns boolean
    if ( not ( ModuloReal(udg_Spell_Counter, 1.00) == 1.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Paradox_LOOP_Func001Func005Func007C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_Paradox_GROUP) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Paradox_LOOP_Func001Func005C takes nothing returns boolean
    if ( not ( udg_Spell_Counter <= udg_Spell_Duration ) ) then
        return false
    endif
    if ( not ( GetUnitCurrentOrder(GetEnumUnit()) == String2OrderIdBJ("tranquility") ) ) then
        return false
    endif
    return true
endfunction

function Trig_Paradox_LOOP_Func001A takes nothing returns nothing
    set udg_Spell_Counter = LoadRealBJ(0, GetHandleIdBJ(GetEnumUnit()), udg_Paradox_HASH)
    set udg_Spell_LOC_Cast = LoadLocationHandleBJ(1, GetHandleIdBJ(GetEnumUnit()), udg_Paradox_HASH)
    set udg_Spell_Level = LoadIntegerBJ(3, GetHandleIdBJ(GetEnumUnit()), udg_Paradox_HASH)
    set udg_Spell_Duration = LoadRealBJ(4, GetHandleIdBJ(GetEnumUnit()), udg_Paradox_HASH)
    if ( Trig_Paradox_LOOP_Func001Func005C() ) then
        if ( Trig_Paradox_LOOP_Func001Func005Func003C() ) then
            call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(GetEnumUnit()), udg_Spell_LOC_Cast, bj_UNIT_FACING )
            call UnitAddAbilityBJ( 'A04O', GetLastCreatedUnit() )
            call SetUnitAbilityLevelSwapped( 'A04O', GetLastCreatedUnit(), udg_Spell_Level )
            call IssueImmediateOrderBJ( GetLastCreatedUnit(), "resurrection" )
            call UnitApplyTimedLifeBJ( 2.00, 'BTLF', GetLastCreatedUnit() )
        else
        endif
        call SaveRealBJ( ( udg_Spell_Counter + udg_Paradox_INTERVAL ), 0, GetHandleIdBJ(GetEnumUnit()), udg_Paradox_HASH )
    else
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_Paradox_GROUP )
        call FlushChildHashtableBJ( GetHandleIdBJ(GetEnumUnit()), udg_Paradox_HASH )
        if ( Trig_Paradox_LOOP_Func001Func005Func007C() ) then
            call DisableTrigger( GetTriggeringTrigger() )
        else
        endif
    endif
endfunction

function Trig_Paradox_LOOP_Actions takes nothing returns nothing
    call ForGroupBJ( udg_Paradox_GROUP, function Trig_Paradox_LOOP_Func001A )
endfunction

//===========================================================================
function InitTrig_Paradox_LOOP takes nothing returns nothing
    set gg_trg_Paradox_LOOP = CreateTrigger(  )
    call DisableTrigger( gg_trg_Paradox_LOOP )
    call TriggerAddAction( gg_trg_Paradox_LOOP, function Trig_Paradox_LOOP_Actions )
endfunction

//===========================================================================
// Trigger: Chrono Atrophy CAST
//===========================================================================
function Trig_Chrono_Atrophy_CAST_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A04K' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Chrono_Atrophy_CAST_Actions takes nothing returns nothing
    set udg_Spell_Caster = GetSpellAbilityUnit()
    set udg_Spell_Level = GetUnitAbilityLevelSwapped('A04K', GetSpellAbilityUnit())
    set udg_TEMP_Pos_Hero = GetUnitLoc(GetSpellAbilityUnit())
    set udg_TEMP_Pos_Spell = GetSpellTargetLoc()
    //  
    set udg_CALC_Base = 10.00
    set udg_CALC_Constant = 0.00
    set udg_CALC_Level_Factor = 1.00
    set udg_CALC_Previous_Value = 1.00
    set udg_CALC_ITERATIONS = udg_Spell_Level
    call ConditionalTriggerExecute( gg_trg_FUNC_Calculate_Level_Factor )
    set udg_Spell_Duration = udg_CALC_RESULT
    //  
    call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(udg_Spell_Caster), udg_TEMP_Pos_Hero, bj_UNIT_FACING )
    call UnitAddAbilityBJ( 'A04J', GetLastCreatedUnit() )
    call SetUnitAbilityLevelSwapped( 'A04J', GetLastCreatedUnit(), udg_Spell_Level )
    call UnitApplyTimedLifeBJ( 30.00, 'BTLF', GetLastCreatedUnit() )
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "cloudoffog", udg_TEMP_Pos_Spell )
    //  
    call CreateNUnitsAtLoc( 1, 'h000', GetOwningPlayer(udg_Spell_Caster), udg_TEMP_Pos_Hero, bj_UNIT_FACING )
    call UnitAddAbilityBJ( 'A04M', GetLastCreatedUnit() )
    call SetUnitAbilityLevelSwapped( 'A04M', GetLastCreatedUnit(), udg_Spell_Level )
    call UnitApplyTimedLifeBJ( 30.00, 'BTLF', GetLastCreatedUnit() )
    call IssuePointOrderLocBJ( GetLastCreatedUnit(), "cloudoffog", udg_TEMP_Pos_Spell )
    //  
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos_Hero )
    //! endusercode
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos_Spell )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Chrono_Atrophy_CAST takes nothing returns nothing
    set gg_trg_Chrono_Atrophy_CAST = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Chrono_Atrophy_CAST, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Chrono_Atrophy_CAST, Condition( function Trig_Chrono_Atrophy_CAST_Conditions ) )
    call TriggerAddAction( gg_trg_Chrono_Atrophy_CAST, function Trig_Chrono_Atrophy_CAST_Actions )
endfunction

//===========================================================================
// Trigger: Time Travel INIT
//===========================================================================
function Trig_Time_Travel_INIT_Actions takes nothing returns nothing
    call InitHashtableBJ(  )
    set udg_TimeTravel_HASH = GetLastCreatedHashtableBJ()
    set udg_TimeTravel_INTERVAL = 0.50
    call TriggerRegisterTimerEventPeriodic( gg_trg_Time_Travel_LOOP, udg_TimeTravel_INTERVAL )
endfunction

//===========================================================================
function InitTrig_Time_Travel_INIT takes nothing returns nothing
    set gg_trg_Time_Travel_INIT = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Time_Travel_INIT, function Trig_Time_Travel_INIT_Actions )
endfunction

//===========================================================================
// Trigger: Time Travel CAST
//===========================================================================
function Trig_Time_Travel_CAST_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A04P' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Time_Travel_CAST_Func018Func001Func002C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_HERO) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Time_Travel_CAST_Func018Func001Func013C takes nothing returns boolean
    if ( not ( IsUnitAlly(GetEnumUnit(), udg_Spell_Player) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Time_Travel_CAST_Func018Func001C takes nothing returns boolean
    if ( not ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == false ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    if ( not ( GetEnumUnit() != udg_Spell_Caster ) ) then
        return false
    endif
    if ( not ( UnitHasBuffBJ(GetEnumUnit(), 'B00E') == false ) ) then
        return false
    endif
    if ( not ( UnitHasBuffBJ(GetEnumUnit(), 'B00D') == false ) ) then
        return false
    endif
    return true
endfunction

function Trig_Time_Travel_CAST_Func018A takes nothing returns nothing
    if ( Trig_Time_Travel_CAST_Func018Func001C() ) then
        call GroupAddUnitSimple( GetEnumUnit(), udg_TimeTravel_GROUP )
        if ( Trig_Time_Travel_CAST_Func018Func001Func002C() ) then
            set udg_Spell_Duration = 20.00
        else
            set udg_Spell_Duration = 30.00
        endif
        set udg_Spell_Damage = ( GetUnitStateSwap(UNIT_STATE_MAX_LIFE, GetEnumUnit()) * udg_TEMP_Real )
        set udg_TEMP_Real_2 = GetUnitLifePercent(GetEnumUnit())
        //  
        call SaveRealBJ( 0.00, 0, GetHandleIdBJ(GetEnumUnit()), udg_TimeTravel_HASH )
        call SaveRealBJ( udg_Spell_Damage, 2, GetHandleIdBJ(GetEnumUnit()), udg_TimeTravel_HASH )
        call SaveIntegerBJ( udg_Spell_Level, 3, GetHandleIdBJ(GetEnumUnit()), udg_TimeTravel_HASH )
        call SaveRealBJ( udg_Spell_Duration, 4, GetHandleIdBJ(GetEnumUnit()), udg_TimeTravel_HASH )
        call SavePlayerHandleBJ( udg_Spell_Player, 9, GetHandleIdBJ(GetEnumUnit()), udg_TimeTravel_HASH )
        //  
        call CreateNUnitsAtLoc( 1, 'h000', udg_Spell_Player, udg_TEMP_Pos_Spell, bj_UNIT_FACING )
        if ( Trig_Time_Travel_CAST_Func018Func001Func013C() ) then
            call UnitAddAbilityBJ( 'A04Q', GetLastCreatedUnit() )
            call SetUnitAbilityLevelSwapped( 'A04Q', GetLastCreatedUnit(), udg_Spell_Level )
            call BlzSetUnitMaxHP( GetEnumUnit(), ( BlzGetUnitMaxHP(GetEnumUnit()) + R2I(udg_Spell_Damage) ) )
        else
            call UnitAddAbilityBJ( 'A04R', GetLastCreatedUnit() )
            call SetUnitAbilityLevelSwapped( 'A04R', GetLastCreatedUnit(), udg_Spell_Level )
            call BlzSetUnitMaxHP( GetEnumUnit(), ( BlzGetUnitMaxHP(GetEnumUnit()) - R2I(udg_Spell_Damage) ) )
        endif
        call SetUnitLifePercentBJ( GetEnumUnit(), udg_TEMP_Real_2 )
        call IssueTargetOrderBJ( GetLastCreatedUnit(), "faeriefire", GetEnumUnit() )
        call UnitApplyTimedLifeBJ( 1.00, 'BTLF', GetLastCreatedUnit() )
    else
    endif
endfunction

function Trig_Time_Travel_CAST_Func023C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_TimeTravel_GROUP) >= 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Time_Travel_CAST_Actions takes nothing returns nothing
    set udg_TEMP_Pos_Spell = GetSpellTargetLoc()
    set udg_Spell_Caster = GetSpellAbilityUnit()
    set udg_Spell_Player = GetOwningPlayer(udg_Spell_Caster)
    set udg_Spell_Level = GetUnitAbilityLevelSwapped('A04P', udg_Spell_Caster)
    //  
    set udg_CALC_Base = 0.10
    set udg_CALC_Constant = 0.07
    set udg_CALC_Level_Factor = 0.00
    set udg_CALC_Previous_Value = 1.00
    set udg_CALC_ITERATIONS = udg_Spell_Level
    call ConditionalTriggerExecute( gg_trg_FUNC_Calculate_Level_Factor )
    //  
    set udg_TEMP_Real = udg_CALC_RESULT
    //  
    set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocAll(150.00, udg_TEMP_Pos_Spell)
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Time_Travel_CAST_Func018A )
    //  
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos_Spell )
    //! endusercode
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
    //  
    if ( Trig_Time_Travel_CAST_Func023C() ) then
        call EnableTrigger( gg_trg_Time_Travel_LOOP )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Time_Travel_CAST takes nothing returns nothing
    set gg_trg_Time_Travel_CAST = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Time_Travel_CAST, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Time_Travel_CAST, Condition( function Trig_Time_Travel_CAST_Conditions ) )
    call TriggerAddAction( gg_trg_Time_Travel_CAST, function Trig_Time_Travel_CAST_Actions )
endfunction

//===========================================================================
// Trigger: Time Travel LOOP
//===========================================================================
function Trig_Time_Travel_LOOP_Func001Func004Func005C takes nothing returns boolean
    if ( ( UnitHasBuffBJ(GetEnumUnit(), 'B00E') == true ) ) then
        return true
    endif
    if ( ( UnitHasBuffBJ(GetEnumUnit(), 'B00D') == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Time_Travel_LOOP_Func001Func004Func007C takes nothing returns boolean
    if ( not ( IsUnitAlly(GetEnumUnit(), udg_Spell_Player) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Time_Travel_LOOP_Func001Func004C takes nothing returns boolean
    if ( not ( udg_Spell_Counter <= udg_Spell_Duration ) ) then
        return false
    endif
    if ( not Trig_Time_Travel_LOOP_Func001Func004Func005C() ) then
        return false
    endif
    return true
endfunction

function Trig_Time_Travel_LOOP_Func001A takes nothing returns nothing
    set udg_Spell_Counter = LoadRealBJ(0, GetHandleIdBJ(GetEnumUnit()), udg_TimeTravel_HASH)
    set udg_Spell_Duration = LoadRealBJ(4, GetHandleIdBJ(GetEnumUnit()), udg_TimeTravel_HASH)
    //  
    if ( Trig_Time_Travel_LOOP_Func001Func004C() ) then
        call SaveRealBJ( ( udg_Spell_Counter + udg_TimeTravel_INTERVAL ), 0, GetHandleIdBJ(GetEnumUnit()), udg_TimeTravel_HASH )
    else
        set udg_Spell_Player = LoadPlayerHandleBJ(9, GetHandleIdBJ(GetEnumUnit()), udg_TimeTravel_HASH)
        set udg_Spell_Damage = LoadRealBJ(2, GetHandleIdBJ(GetEnumUnit()), udg_TimeTravel_HASH)
        //  
        if ( Trig_Time_Travel_LOOP_Func001Func004Func007C() ) then
            call BlzSetUnitMaxHP( GetEnumUnit(), ( BlzGetUnitMaxHP(GetEnumUnit()) - R2I(udg_Spell_Damage) ) )
        else
            call BlzSetUnitMaxHP( GetEnumUnit(), ( BlzGetUnitMaxHP(GetEnumUnit()) + R2I(udg_Spell_Damage) ) )
        endif
        //  
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_TimeTravel_GROUP )
        call FlushChildHashtableBJ( GetHandleIdBJ(GetEnumUnit()), udg_TimeTravel_HASH )
    endif
endfunction

function Trig_Time_Travel_LOOP_Func003C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_TimeTravel_GROUP) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Time_Travel_LOOP_Actions takes nothing returns nothing
    call ForGroupBJ( udg_TimeTravel_GROUP, function Trig_Time_Travel_LOOP_Func001A )
    //  
    if ( Trig_Time_Travel_LOOP_Func003C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Time_Travel_LOOP takes nothing returns nothing
    set gg_trg_Time_Travel_LOOP = CreateTrigger(  )
    call DisableTrigger( gg_trg_Time_Travel_LOOP )
    call TriggerAddAction( gg_trg_Time_Travel_LOOP, function Trig_Time_Travel_LOOP_Actions )
endfunction

//===========================================================================
// Trigger: Attack INIT
//===========================================================================
function Trig_Attack_INIT_Actions takes nothing returns nothing
    call InitHashtableBJ(  )
    set udg_Attack_Hash = GetLastCreatedHashtableBJ()
    set udg_Attack_Interval = 0.10
    call TriggerRegisterTimerEventPeriodic( gg_trg_Attack_LOOP, udg_Attack_Interval )
endfunction

//===========================================================================
function InitTrig_Attack_INIT takes nothing returns nothing
    set gg_trg_Attack_INIT = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Attack_INIT, function Trig_Attack_INIT_Actions )
endfunction

//===========================================================================
// Trigger: Attack CAST
//===========================================================================
function Trig_Attack_CAST_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A01B' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_CAST_Func007Func001Func002Func008C takes nothing returns boolean
    if ( not ( IsPlayerInForce(GetOwningPlayer(GetEnumUnit()), udg_PLAYERGRPallied) == false ) ) then
        return false
    endif
    if ( not ( IsPlayerInForce(GetOwningPlayer(GetEnumUnit()), udg_PLAYERGRPfederation) == false ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetEnumUnit()) != GetOwningPlayer(GetSpellAbilityUnit()) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_CAST_Func007Func001Func002C takes nothing returns boolean
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == true ) ) then
        return true
    endif
    if ( ( IsUnitIllusionBJ(GetEnumUnit()) == true ) ) then
        return true
    endif
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_HERO) == true ) ) then
        return true
    endif
    if ( ( GetUnitDefaultMoveSpeed(GetEnumUnit()) == 0.00 ) ) then
        return true
    endif
    if ( ( IsUnitAliveBJ(GetEnumUnit()) == false ) ) then
        return true
    endif
    if ( ( GetUnitLevel(GetEnumUnit()) > 9 ) ) then
        return true
    endif
    if ( ( IsUnitAlly(GetEnumUnit(), GetOwningPlayer(GetSpellAbilityUnit())) == false ) ) then
        return true
    endif
    if ( Trig_Attack_CAST_Func007Func001Func002Func008C() ) then
        return true
    endif
    return false
endfunction

function Trig_Attack_CAST_Func007Func001C takes nothing returns boolean
    if ( not Trig_Attack_CAST_Func007Func001Func002C() ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_CAST_Func007A takes nothing returns nothing
    if ( Trig_Attack_CAST_Func007Func001C() ) then
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_TEMP_UnitGroup )
    else
    endif
endfunction

function Trig_Attack_CAST_Func011C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_Attack_Unit_Group) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_CAST_Func013A takes nothing returns nothing
    call GroupAddUnitSimple( GetEnumUnit(), udg_Attack_Unit_Group )
    call SaveRealBJ( 0.00, 0, GetHandleIdBJ(GetEnumUnit()), udg_Attack_Hash )
    call SaveLocationHandleBJ( udg_Spell_LOC_Cast, 1, GetHandleIdBJ(GetEnumUnit()), udg_Attack_Hash )
    call SaveIntegerBJ( udg_Spell_Level, 3, GetHandleIdBJ(GetEnumUnit()), udg_Attack_Hash )
    call SaveRealBJ( udg_Spell_Duration, 4, GetHandleIdBJ(GetEnumUnit()), udg_Attack_Hash )
    call SaveUnitHandleBJ( udg_Spell_Unit_Target, 8, GetHandleIdBJ(GetEnumUnit()), udg_Attack_Hash )
    call SavePlayerHandleBJ( GetOwningPlayer(GetEnumUnit()), 9, GetHandleIdBJ(GetEnumUnit()), udg_Attack_Hash )
    //  
    call UnitAddAbilityBJ( 'A04L', GetEnumUnit() )
    call SetUnitAbilityLevelSwapped( 'A01E', GetEnumUnit(), udg_Spell_Level )
    call SetUnitAbilityLevelSwapped( 'A01Q', GetEnumUnit(), udg_Spell_Level )
    call SetUnitAbilityLevelSwapped( 'A01C', GetEnumUnit(), udg_Spell_Level )
    call SetUnitOwner( GetEnumUnit(), GetOwningPlayer(GetSpellAbilityUnit()), true )
    call IssueTargetOrderBJ( GetEnumUnit(), "attack", udg_Spell_Unit_Target )
endfunction

function Trig_Attack_CAST_Actions takes nothing returns nothing
    set udg_Spell_LOC_Cast = GetUnitLoc(GetSpellAbilityUnit())
    set udg_Spell_Unit_Target = GetSpellTargetUnit()
    set udg_Spell_Level = GetUnitAbilityLevelSwapped('A01B', GetSpellAbilityUnit())
    set udg_Spell_Duration = 8.00
    set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocAll(900.00, udg_Spell_LOC_Cast)
    //  
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Attack_CAST_Func007A )
    //  
    set udg_TEMP_UnitGroup2 = GetRandomSubGroup(5, udg_TEMP_UnitGroup)
    //  
    if ( Trig_Attack_CAST_Func011C() ) then
        call EnableTrigger( gg_trg_Attack_LOOP )
    else
    endif
    //  
    call ForGroupBJ( udg_TEMP_UnitGroup2, function Trig_Attack_CAST_Func013A )
    //  
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup2 )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Attack_CAST takes nothing returns nothing
    set gg_trg_Attack_CAST = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Attack_CAST, EVENT_PLAYER_UNIT_SPELL_CAST )
    call TriggerAddCondition( gg_trg_Attack_CAST, Condition( function Trig_Attack_CAST_Conditions ) )
    call TriggerAddAction( gg_trg_Attack_CAST, function Trig_Attack_CAST_Actions )
endfunction

//===========================================================================
// Trigger: Attack LOOP
//===========================================================================
function Trig_Attack_LOOP_Func001Func003Func001C takes nothing returns boolean
    if ( ( udg_Spell_Counter >= udg_Spell_Duration ) ) then
        return true
    endif
    if ( ( IsUnitAliveBJ(GetEnumUnit()) == false ) ) then
        return true
    endif
    return false
endfunction

function Trig_Attack_LOOP_Func001Func003Func010C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_Attack_Unit_Group) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_LOOP_Func001Func003C takes nothing returns boolean
    if ( not Trig_Attack_LOOP_Func001Func003Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_Attack_LOOP_Func001A takes nothing returns nothing
    set udg_Spell_Counter = LoadRealBJ(0, GetHandleIdBJ(GetEnumUnit()), udg_Attack_Hash)
    set udg_Spell_Duration = LoadRealBJ(4, GetHandleIdBJ(GetEnumUnit()), udg_Attack_Hash)
    if ( Trig_Attack_LOOP_Func001Func003C() ) then
        set udg_Spell_Player = LoadPlayerHandleBJ(9, GetHandleIdBJ(GetEnumUnit()), udg_Attack_Hash)
        call UnitRemoveAbilityBJ( 'A04L', GetEnumUnit() )
        call SetUnitOwner( GetEnumUnit(), udg_Spell_Player, true )
        set udg_TEMP_Unit = GetEnumUnit()
        call ConditionalTriggerExecute( gg_trg_FUNC_Move_Creeps )
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_Attack_Unit_Group )
        call FlushChildHashtableBJ( GetHandleIdBJ(GetEnumUnit()), udg_Attack_Hash )
        if ( Trig_Attack_LOOP_Func001Func003Func010C() ) then
            call DisableTrigger( GetTriggeringTrigger() )
        else
        endif
    else
        call SaveRealBJ( ( udg_Spell_Counter + udg_Attack_Interval ), 0, GetHandleIdBJ(GetEnumUnit()), udg_Attack_Hash )
    endif
endfunction

function Trig_Attack_LOOP_Actions takes nothing returns nothing
    call ForGroupBJ( udg_Attack_Unit_Group, function Trig_Attack_LOOP_Func001A )
endfunction

//===========================================================================
function InitTrig_Attack_LOOP takes nothing returns nothing
    set gg_trg_Attack_LOOP = CreateTrigger(  )
    call DisableTrigger( gg_trg_Attack_LOOP )
    call TriggerAddAction( gg_trg_Attack_LOOP, function Trig_Attack_LOOP_Actions )
endfunction

//===========================================================================
// Trigger: Hash INIT
//===========================================================================
function Trig_Hash_INIT_Actions takes nothing returns nothing
    call InitHashtableBJ(  )
    set udg_Inspired_Hash = GetLastCreatedHashtableBJ()
    set udg_Inspired_Interval = 1.00
    call TriggerRegisterTimerEventPeriodic( gg_trg_Inspire_LOOP, udg_Inspired_Interval )
endfunction

//===========================================================================
function InitTrig_Hash_INIT takes nothing returns nothing
    set gg_trg_Hash_INIT = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hash_INIT, function Trig_Hash_INIT_Actions )
endfunction

//===========================================================================
// Trigger: Inspire Start
//===========================================================================
function Trig_Inspire_Start_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A042' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Inspire_Start_Func007002003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Inspire_Start_Func007002003002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )
endfunction

function Trig_Inspire_Start_Func007002003002002001 takes nothing returns boolean
    return ( GetUnitLevel(GetFilterUnit()) < 10 )
endfunction

function Trig_Inspire_Start_Func007002003002002002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Inspire_Start_Func007002003002002002002 takes nothing returns boolean
    return ( IsUnitAlly(GetFilterUnit(), GetOwningPlayer(GetSpellAbilityUnit())) == true )
endfunction

function Trig_Inspire_Start_Func007002003002002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Inspire_Start_Func007002003002002002001(), Trig_Inspire_Start_Func007002003002002002002() )
endfunction

function Trig_Inspire_Start_Func007002003002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Inspire_Start_Func007002003002002001(), Trig_Inspire_Start_Func007002003002002002() )
endfunction

function Trig_Inspire_Start_Func007002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Inspire_Start_Func007002003002001(), Trig_Inspire_Start_Func007002003002002() )
endfunction

function Trig_Inspire_Start_Func007002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Inspire_Start_Func007002003001(), Trig_Inspire_Start_Func007002003002() )
endfunction

function Trig_Inspire_Start_Func010C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_Inspired_UnitGroup) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Inspire_Start_Func012A takes nothing returns nothing
    call UnitAddAbilityBJ( 'A01J', GetEnumUnit() )
    call SetUnitLifePercentBJ( GetEnumUnit(), 100 )
    call BlzSetUnitName( GetEnumUnit(), ( "Inspired " + GetUnitName(GetEnumUnit()) ) )
    call AddSpecialEffectTargetUnitBJ( "origin", GetEnumUnit(), "Abilities\\Spells\\Human\\Resurrect\\ResurrectTarget.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    //  
    call GroupAddUnitSimple( GetEnumUnit(), udg_Inspired_UnitGroup )
    //  
    call SaveRealBJ( 0.00, 0, GetHandleIdBJ(GetEnumUnit()), udg_Inspired_Hash )
    call SaveIntegerBJ( udg_Spell_Level, 3, GetHandleIdBJ(GetEnumUnit()), udg_Inspired_Hash )
    call SaveRealBJ( udg_Spell_Duration, 4, GetHandleIdBJ(GetEnumUnit()), udg_Inspired_Hash )
endfunction

function Trig_Inspire_Start_Actions takes nothing returns nothing
    set udg_TC_Player = GetOwningPlayer(GetSpellAbilityUnit())
    set udg_Spell_Level = GetUnitAbilityLevelSwapped(GetSpellAbilityId(), GetSpellAbilityUnit())
    set udg_Spell_Duration = 180.00
    //  
    //  
    set udg_TEMP_Pos2 = GetUnitLoc(GetSpellAbilityUnit())
    set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocMatching(( 200.00 + I2R(( udg_Spell_Level * 100 )) ), udg_TEMP_Pos2, Condition(function Trig_Inspire_Start_Func007002003))
    set udg_TEMP_UnitGroup2 = GetRandomSubGroup(( udg_Spell_Level * 4 ), udg_TEMP_UnitGroup)
    //  
    if ( Trig_Inspire_Start_Func010C() ) then
        call EnableTrigger( gg_trg_Inspire_LOOP )
        call EnableTrigger( gg_trg_Inspire_DIE )
    else
    endif
    //  
    call ForGroupBJ( udg_TEMP_UnitGroup2, function Trig_Inspire_Start_Func012A )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
    //! beginusercode
    DestroyGroup( udg_TEMP_UnitGroup )
    //! endusercode
    //! beginusercode
    DestroyGroup( udg_TEMP_UnitGroup2 )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Inspire_Start takes nothing returns nothing
    set gg_trg_Inspire_Start = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Inspire_Start, EVENT_PLAYER_UNIT_SPELL_CAST )
    call TriggerAddCondition( gg_trg_Inspire_Start, Condition( function Trig_Inspire_Start_Conditions ) )
    call TriggerAddAction( gg_trg_Inspire_Start, function Trig_Inspire_Start_Actions )
endfunction

//===========================================================================
// Trigger: Inspire LOOP
//===========================================================================
function Trig_Inspire_LOOP_Func001Func003Func001C takes nothing returns boolean
    if ( not ( udg_Spell_Counter >= udg_Spell_Duration ) ) then
        return false
    endif
    return true
endfunction

function Trig_Inspire_LOOP_Func001Func003C takes nothing returns boolean
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Inspire_LOOP_Func001A takes nothing returns nothing
    set udg_Spell_Counter = LoadRealBJ(0, GetHandleIdBJ(GetEnumUnit()), udg_Inspired_Hash)
    set udg_Spell_Duration = LoadRealBJ(4, GetHandleIdBJ(GetEnumUnit()), udg_Inspired_Hash)
    if ( Trig_Inspire_LOOP_Func001Func003C() ) then
        if ( Trig_Inspire_LOOP_Func001Func003Func001C() ) then
            call UnitRemoveAbilityBJ( 'A01J', GetEnumUnit() )
            call BlzSetUnitName( GetEnumUnit(), SubStringBJ(GetUnitName(GetEnumUnit()), 10, StringLength(GetUnitName(GetEnumUnit()))) )
            call GroupRemoveUnitSimple( GetEnumUnit(), udg_Inspired_UnitGroup )
            call FlushChildHashtableBJ( GetHandleIdBJ(GetEnumUnit()), udg_Inspired_Hash )
        else
            call SaveRealBJ( ( udg_Spell_Counter + udg_Inspired_Interval ), 0, GetHandleIdBJ(GetEnumUnit()), udg_Inspired_Hash )
        endif
    else
    endif
endfunction

function Trig_Inspire_LOOP_Func002C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(udg_Inspired_UnitGroup) == 0 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Inspire_LOOP_Actions takes nothing returns nothing
    call ForGroupBJ( udg_Inspired_UnitGroup, function Trig_Inspire_LOOP_Func001A )
    if ( Trig_Inspire_LOOP_Func002C() ) then
        call DisableTrigger( GetTriggeringTrigger() )
        call DisableTrigger( gg_trg_Inspire_DIE )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Inspire_LOOP takes nothing returns nothing
    set gg_trg_Inspire_LOOP = CreateTrigger(  )
    call DisableTrigger( gg_trg_Inspire_LOOP )
    call TriggerAddAction( gg_trg_Inspire_LOOP, function Trig_Inspire_LOOP_Actions )
endfunction

//===========================================================================
// Trigger: Inspire DIE
//===========================================================================
function Trig_Inspire_DIE_Conditions takes nothing returns boolean
    if ( not ( IsUnitInGroup(GetTriggerUnit(), udg_Inspired_UnitGroup) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Inspire_DIE_Func003002003001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_STRUCTURE) == false )
endfunction

function Trig_Inspire_DIE_Func003002003002001 takes nothing returns boolean
    return ( GetUnitLevel(GetFilterUnit()) <= 10 )
endfunction

function Trig_Inspire_DIE_Func003002003002002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == false )
endfunction

function Trig_Inspire_DIE_Func003002003002002002001 takes nothing returns boolean
    return ( IsUnitIllusionBJ(GetFilterUnit()) == false )
endfunction

function Trig_Inspire_DIE_Func003002003002002002002001 takes nothing returns boolean
    return ( IsUnitAliveBJ(GetFilterUnit()) == true )
endfunction

function Trig_Inspire_DIE_Func003002003002002002002002001 takes nothing returns boolean
    return ( IsUnitAlly(GetFilterUnit(), GetOwningPlayer(GetDyingUnit())) == true )
endfunction

function Trig_Inspire_DIE_Func003002003002002002002002002 takes nothing returns boolean
    return ( IsUnitInGroup(GetFilterUnit(), udg_Inspired_UnitGroup) == false )
endfunction

function Trig_Inspire_DIE_Func003002003002002002002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Inspire_DIE_Func003002003002002002002002001(), Trig_Inspire_DIE_Func003002003002002002002002002() )
endfunction

function Trig_Inspire_DIE_Func003002003002002002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Inspire_DIE_Func003002003002002002002001(), Trig_Inspire_DIE_Func003002003002002002002002() )
endfunction

function Trig_Inspire_DIE_Func003002003002002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Inspire_DIE_Func003002003002002002001(), Trig_Inspire_DIE_Func003002003002002002002() )
endfunction

function Trig_Inspire_DIE_Func003002003002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Inspire_DIE_Func003002003002002001(), Trig_Inspire_DIE_Func003002003002002002() )
endfunction

function Trig_Inspire_DIE_Func003002003002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Inspire_DIE_Func003002003002001(), Trig_Inspire_DIE_Func003002003002002() )
endfunction

function Trig_Inspire_DIE_Func003002003 takes nothing returns boolean
    return GetBooleanAnd( Trig_Inspire_DIE_Func003002003001(), Trig_Inspire_DIE_Func003002003002() )
endfunction

function Trig_Inspire_DIE_Func005A takes nothing returns nothing
    call UnitAddAbilityBJ( 'A01J', GetEnumUnit() )
    call SetUnitLifePercentBJ( GetEnumUnit(), 100 )
    call BlzSetUnitName( GetEnumUnit(), ( "Inspired " + GetUnitName(GetEnumUnit()) ) )
    call AddSpecialEffectTargetUnitBJ( "origin", GetEnumUnit(), "Abilities\\Spells\\Human\\Resurrect\\ResurrectTarget.mdl" )
    call DestroyEffectBJ( GetLastCreatedEffectBJ() )
    //  
    call GroupAddUnitSimple( GetEnumUnit(), udg_Inspired_UnitGroup )
    //  
    call SaveRealBJ( 0.00, 0, GetHandleIdBJ(GetEnumUnit()), udg_Inspired_Hash )
    call SaveIntegerBJ( udg_Spell_Level, 3, GetHandleIdBJ(GetEnumUnit()), udg_Inspired_Hash )
    call SaveRealBJ( udg_Spell_Duration, 4, GetHandleIdBJ(GetEnumUnit()), udg_Inspired_Hash )
endfunction

function Trig_Inspire_DIE_Actions takes nothing returns nothing
    set udg_TEMP_Pos2 = GetUnitLoc(GetDyingUnit())
    set udg_Spell_Level = LoadIntegerBJ(3, GetHandleIdBJ(GetDyingUnit()), udg_Inspired_Hash)
    set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocMatching(300.00, udg_TEMP_Pos2, Condition(function Trig_Inspire_DIE_Func003002003))
    set udg_TEMP_UnitGroup2 = GetRandomSubGroup(udg_Spell_Level, udg_TEMP_UnitGroup)
    call ForGroupBJ( udg_TEMP_UnitGroup2, function Trig_Inspire_DIE_Func005A )
    call GroupRemoveUnitSimple( GetDyingUnit(), udg_Inspired_UnitGroup )
    call FlushChildHashtableBJ( GetHandleIdBJ(GetDyingUnit()), udg_Inspired_Hash )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
    //! beginusercode
    DestroyGroup( udg_TEMP_UnitGroup )
    //! endusercode
    //! beginusercode
    DestroyGroup( udg_TEMP_UnitGroup2 )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Inspire_DIE takes nothing returns nothing
    set gg_trg_Inspire_DIE = CreateTrigger(  )
    call DisableTrigger( gg_trg_Inspire_DIE )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Inspire_DIE, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Inspire_DIE, Condition( function Trig_Inspire_DIE_Conditions ) )
    call TriggerAddAction( gg_trg_Inspire_DIE, function Trig_Inspire_DIE_Actions )
endfunction

//===========================================================================
// Trigger: Bolster
//===========================================================================
function Trig_Bolster_Conditions takes nothing returns boolean
    if ( not ( GetSpellAbilityId() == 'A01Z' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Bolster_Func004Func001Func001C takes nothing returns boolean
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_STRUCTURE) == true ) ) then
        return true
    endif
    if ( ( GetUnitDefaultMoveSpeed(GetEnumUnit()) == 0.00 ) ) then
        return true
    endif
    if ( ( IsUnitType(GetEnumUnit(), UNIT_TYPE_HERO) == true ) ) then
        return true
    endif
    if ( ( IsUnitIllusionBJ(GetEnumUnit()) == true ) ) then
        return true
    endif
    if ( ( IsUnitEnemy(GetEnumUnit(), GetOwningPlayer(GetSpellAbilityUnit())) == true ) ) then
        return true
    endif
    if ( ( GetUnitLevel(GetEnumUnit()) > ( 3 + R2I(( I2R(udg_TEMP_Int) * 0.50 )) ) ) ) then
        return true
    endif
    if ( ( IsUnitAliveBJ(GetEnumUnit()) == false ) ) then
        return true
    endif
    return false
endfunction

function Trig_Bolster_Func004Func001C takes nothing returns boolean
    if ( not Trig_Bolster_Func004Func001Func001C() ) then
        return false
    endif
    return true
endfunction

function Trig_Bolster_Func004A takes nothing returns nothing
    if ( Trig_Bolster_Func004Func001C() ) then
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_TEMP_UnitGroup )
    else
    endif
endfunction

function Trig_Bolster_Actions takes nothing returns nothing
    set udg_TEMP_Pos_Spell = GetUnitLoc(GetSpellAbilityUnit())
    set udg_TEMP_Int = GetUnitAbilityLevelSwapped('A01Z', GetSpellAbilityUnit())
    set udg_TEMP_UnitGroup = GetUnitsInRangeOfLocAll(500.00, udg_TEMP_Pos_Spell)
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Bolster_Func004A )
    set udg_TEMP_IntLoop1 = 1
    loop
        exitwhen udg_TEMP_IntLoop1 > R2I(( I2R(udg_TEMP_Int) * 1.00 ))
        set udg_TEMP_Pos2 = GetRandomLocInRect(RectFromCenterSizeBJ(udg_TEMP_Pos_Spell, 400.00, 400.00))
        call CreateNUnitsAtLoc( 1, GetUnitTypeId(GroupPickRandomUnit(udg_TEMP_UnitGroup)), GetOwningPlayer(GetSpellAbilityUnit()), udg_TEMP_Pos2, bj_UNIT_FACING )
        call UnitApplyTimedLifeBJ( 90.00, 'BHwe', GetLastCreatedUnit() )
        set udg_TEMP_Unit = GetLastCreatedUnit()
        call ConditionalTriggerExecute( gg_trg_FUNC_Move_Creeps )
        call AddSpecialEffectTargetUnitBJ( "origin", GetLastCreatedUnit(), "Abilities\\Spells\\Other\\Charm\\CharmTarget.mdl" )
        call DestroyEffectBJ( GetLastCreatedEffectBJ() )
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos2 )
        //! endusercode
        set udg_TEMP_IntLoop1 = udg_TEMP_IntLoop1 + 1
    endloop
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos_Spell )
    //! endusercode
    //! beginusercode
    DestroyGroup ( udg_TEMP_UnitGroup )
    //! endusercode
endfunction

//===========================================================================
function InitTrig_Bolster takes nothing returns nothing
    set gg_trg_Bolster = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Bolster, EVENT_PLAYER_UNIT_SPELL_EFFECT )
    call TriggerAddCondition( gg_trg_Bolster, Condition( function Trig_Bolster_Conditions ) )
    call TriggerAddAction( gg_trg_Bolster, function Trig_Bolster_Actions )
endfunction

//===========================================================================
// Trigger: Level Up Team
//===========================================================================
function Trig_Level_Up_Team_Func002C takes nothing returns boolean
    if ( not ( IsUnitAlly(GetLevelingUnit(), ForcePickRandomPlayer(udg_PLAYERGRPallied)) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Level_Up_Team_Func004002002001 takes nothing returns boolean
    return ( IsUnitType(GetFilterUnit(), UNIT_TYPE_HERO) == true )
endfunction

function Trig_Level_Up_Team_Func004002002002 takes nothing returns boolean
    return ( IsUnitAlly(GetFilterUnit(), GetOwningPlayer(GetLevelingUnit())) == true )
endfunction

function Trig_Level_Up_Team_Func004002002 takes nothing returns boolean
    return GetBooleanAnd( Trig_Level_Up_Team_Func004002002001(), Trig_Level_Up_Team_Func004002002002() )
endfunction

function Trig_Level_Up_Team_Func005Func001C takes nothing returns boolean
    if ( not ( GetEnumUnit() != GetLevelingUnit() ) ) then
        return false
    endif
    if ( not ( IsUnitAliveBJ(GetEnumUnit()) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Level_Up_Team_Func005A takes nothing returns nothing
    if ( Trig_Level_Up_Team_Func005Func001C() ) then
        call SetHeroLevelBJ( GetEnumUnit(), ( GetHeroLevel(GetEnumUnit()) + 1 ), true )
    else
    endif
endfunction

function Trig_Level_Up_Team_Actions takes nothing returns nothing
    call DisableTrigger( GetTriggeringTrigger() )
    if ( Trig_Level_Up_Team_Func002C() ) then
        set udg_TEMP_Int2 = 1
    else
        set udg_TEMP_Int2 = 2
    endif
    set udg_Hero_Levels[udg_TEMP_Int2] = GetHeroLevel(GetLevelingUnit())
    set udg_TEMP_UnitGroup = GetUnitsInRectMatching(GetPlayableMapRect(), Condition(function Trig_Level_Up_Team_Func004002002))
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Level_Up_Team_Func005A )
    call EnableTrigger( GetTriggeringTrigger() )
endfunction

//===========================================================================
function InitTrig_Level_Up_Team takes nothing returns nothing
    set gg_trg_Level_Up_Team = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Level_Up_Team, EVENT_PLAYER_HERO_LEVEL )
    call TriggerAddAction( gg_trg_Level_Up_Team, function Trig_Level_Up_Team_Actions )
endfunction

//===========================================================================
// Trigger: Revive Hero
//===========================================================================
function Trig_Revive_Hero_Conditions takes nothing returns boolean
    if ( not ( IsUnitType(GetDyingUnit(), UNIT_TYPE_HERO) == true ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetDyingUnit()) != Player(23) ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetDyingUnit()) != Player(22) ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetDyingUnit()) != Player(21) ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetDyingUnit()) != Player(20) ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetDyingUnit()) != Player(19) ) ) then
        return false
    endif
    if ( not ( GetOwningPlayer(GetDyingUnit()) != Player(18) ) ) then
        return false
    endif
    return true
endfunction

function Trig_Revive_Hero_Func003Func003C takes nothing returns boolean
    if ( ( IsPlayerInForce(GetOwningPlayer(GetDyingUnit()), udg_PLAYERGRPallied) == true ) ) then
        return true
    endif
    if ( ( IsPlayerInForce(GetOwningPlayer(GetDyingUnit()), udg_PLAYERGRPfederation) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Revive_Hero_Func003C takes nothing returns boolean
    if ( not Trig_Revive_Hero_Func003Func003C() ) then
        return false
    endif
    return true
endfunction

function Trig_Revive_Hero_Actions takes nothing returns nothing
    call DisplayTextToForce( GetPlayersAll(), ( ( GetPlayerName(GetOwningPlayer(GetKillingUnitBJ())) + ( " (" + ( GetUnitName(GetKillingUnitBJ()) + ") " ) ) ) + ( "killed " + ( GetPlayerName(GetOwningPlayer(GetDyingUnit())) + ( " (" + ( GetUnitName(GetDyingUnit()) + ")" ) ) ) ) ) )
    call GroupAddUnitSimple( GetDyingUnit(), udg_RevivableHeros )
    if ( Trig_Revive_Hero_Func003C() ) then
        set udg_TempReal = ( ( I2R(GetHeroLevel(GetDyingUnit())) * 3.00 ) + 70.00 )
    else
        set udg_TempReal = ( ( I2R(GetHeroLevel(GetDyingUnit())) * 1.50 ) + 8.00 )
    endif
    call StartTimerBJ( udg_ReviveTimers[GetConvertedPlayerId(GetOwningPlayer(GetDyingUnit()))], false, udg_TempReal )
    call CreateTimerDialogBJ( GetLastCreatedTimerBJ(), GetPlayerName(GetOwningPlayer(GetDyingUnit())) )
    set udg_ReviveTimerWindows[GetConvertedPlayerId(GetOwningPlayer(GetDyingUnit()))] = GetLastCreatedTimerDialogBJ()
endfunction

//===========================================================================
function InitTrig_Revive_Hero takes nothing returns nothing
    set gg_trg_Revive_Hero = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Revive_Hero, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddCondition( gg_trg_Revive_Hero, Condition( function Trig_Revive_Hero_Conditions ) )
    call TriggerAddAction( gg_trg_Revive_Hero, function Trig_Revive_Hero_Actions )
endfunction

//===========================================================================
// Trigger: Revive Hero Timer
//===========================================================================
function Trig_Revive_Hero_Timer_Func001Func001Func002Func001C takes nothing returns boolean
    if ( not ( IsPlayerAlly(GetOwningPlayer(GetEnumUnit()), ForcePickRandomPlayer(udg_PLAYERGRPallied)) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Revive_Hero_Timer_Func001Func001Func002Func003C takes nothing returns boolean
    if ( not ( IsPlayerInForce(GetOwningPlayer(GetEnumUnit()), udg_PLAYERGRPallied) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Revive_Hero_Timer_Func001Func001Func002Func004C takes nothing returns boolean
    if ( ( IsPlayerInForce(GetOwningPlayer(GetEnumUnit()), udg_PLAYERGRPallied) == true ) ) then
        return true
    endif
    if ( ( IsPlayerInForce(GetOwningPlayer(GetEnumUnit()), udg_PLAYERGRPfederation) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_Revive_Hero_Timer_Func001Func001Func002C takes nothing returns boolean
    if ( not Trig_Revive_Hero_Timer_Func001Func001Func002Func004C() ) then
        return false
    endif
    return true
endfunction

function Trig_Revive_Hero_Timer_Func001Func001C takes nothing returns boolean
    if ( not ( TimerGetRemaining(udg_ReviveTimers[GetConvertedPlayerId(GetOwningPlayer(GetEnumUnit()))]) < 1.00 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Revive_Hero_Timer_Func001A takes nothing returns nothing
    if ( Trig_Revive_Hero_Timer_Func001Func001C() ) then
        call DestroyTimerDialogBJ( udg_ReviveTimerWindows[GetConvertedPlayerId(GetOwningPlayer(GetEnumUnit()))] )
        if ( Trig_Revive_Hero_Timer_Func001Func001Func002C() ) then
            if ( Trig_Revive_Hero_Timer_Func001Func001Func002Func003C() ) then
                set udg_TEMP_Pos_Hero = GetRectCenter(gg_rct_Left_Forward_Camp)
                set udg_TEMP_Pos2 = GetRandomLocInRect(gg_rct_Right_Start)
            else
                set udg_TEMP_Pos_Hero = GetRectCenter(gg_rct_Right_Forward)
                set udg_TEMP_Pos2 = GetRandomLocInRect(gg_rct_Left_Start)
            endif
            call ReviveHeroLoc( GetEnumUnit(), udg_TEMP_Pos_Hero, true )
            call IssuePointOrderLocBJ( GetEnumUnit(), "attack", udg_TEMP_Pos2 )
        else
            if ( Trig_Revive_Hero_Timer_Func001Func001Func002Func001C() ) then
                set udg_TEMP_Pos_Hero = GetRectCenter(gg_rct_Left_Castle)
            else
                set udg_TEMP_Pos_Hero = GetRectCenter(gg_rct_Right_Castle)
            endif
            call ReviveHeroLoc( GetEnumUnit(), udg_TEMP_Pos_Hero, true )
        endif
        call GroupRemoveUnitSimple( GetEnumUnit(), udg_RevivableHeros )
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos_Hero )
        //! endusercode
        //! beginusercode
        RemoveLocation ( udg_TEMP_Pos2 )
        //! endusercode
    else
    endif
endfunction

function Trig_Revive_Hero_Timer_Actions takes nothing returns nothing
    call ForGroupBJ( udg_RevivableHeros, function Trig_Revive_Hero_Timer_Func001A )
endfunction

//===========================================================================
function InitTrig_Revive_Hero_Timer takes nothing returns nothing
    set gg_trg_Revive_Hero_Timer = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[1] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[2] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[3] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[4] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[5] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[6] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[7] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[8] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[9] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[10] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[11] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[12] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[21] )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Revive_Hero_Timer, udg_ReviveTimers[24] )
    call TriggerAddAction( gg_trg_Revive_Hero_Timer, function Trig_Revive_Hero_Timer_Actions )
endfunction

//===========================================================================
// Trigger: End Of Game Left
//===========================================================================
function Trig_End_Of_Game_Left_Actions takes nothing returns nothing
    call TriggerSleepAction( 10.00 )
    call CustomVictoryBJ( Player(2), true, true )
    call CustomVictoryBJ( Player(4), true, true )
    call CustomVictoryBJ( Player(5), true, true )
    call CustomDefeatBJ( Player(0), "TRIGSTR_3913" )
    call CustomDefeatBJ( Player(1), "TRIGSTR_3914" )
    call CustomDefeatBJ( Player(3), "TRIGSTR_3915" )
endfunction

//===========================================================================
function InitTrig_End_Of_Game_Left takes nothing returns nothing
    set gg_trg_End_Of_Game_Left = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_End_Of_Game_Left, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddAction( gg_trg_End_Of_Game_Left, function Trig_End_Of_Game_Left_Actions )
endfunction

//===========================================================================
// Trigger: End Of Game Right
//===========================================================================
function Trig_End_Of_Game_Right_Actions takes nothing returns nothing
    call TriggerSleepAction( 10.00 )
    call CustomVictoryBJ( Player(1), true, true )
    call CustomVictoryBJ( Player(3), true, true )
    call CustomVictoryBJ( Player(0), true, true )
    call CustomDefeatBJ( Player(1), "TRIGSTR_3916" )
    call CustomDefeatBJ( Player(2), "TRIGSTR_3917" )
    call CustomDefeatBJ( Player(5), "TRIGSTR_3918" )
endfunction

//===========================================================================
function InitTrig_End_Of_Game_Right takes nothing returns nothing
    set gg_trg_End_Of_Game_Right = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_End_Of_Game_Right, EVENT_PLAYER_UNIT_DEATH )
    call TriggerAddAction( gg_trg_End_Of_Game_Right, function Trig_End_Of_Game_Right_Actions )
endfunction

//===========================================================================
// Trigger: SPAWN Move All
//===========================================================================
function Trig_SPAWN_Move_All_Func002Func001Func005C takes nothing returns boolean
    if ( ( IsPlayerInForce(GetOwningPlayer(GetEnumUnit()), udg_PLAYERGRPallied) == true ) ) then
        return true
    endif
    if ( ( IsPlayerInForce(GetOwningPlayer(GetEnumUnit()), udg_PLAYERGRPfederation) == true ) ) then
        return true
    endif
    return false
endfunction

function Trig_SPAWN_Move_All_Func002Func001C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetEnumUnit()) != 'hhdl' ) ) then
        return false
    endif
    if ( not ( GetUnitTypeId(GetEnumUnit()) != 'hpea' ) ) then
        return false
    endif
    if ( not Trig_SPAWN_Move_All_Func002Func001Func005C() ) then
        return false
    endif
    return true
endfunction

function Trig_SPAWN_Move_All_Func002A takes nothing returns nothing
    if ( Trig_SPAWN_Move_All_Func002Func001C() ) then
        set udg_TEMP_Unit = GetEnumUnit()
        call ConditionalTriggerExecute( gg_trg_FUNC_Move_Creeps )
    else
    endif
endfunction

function Trig_SPAWN_Move_All_Actions takes nothing returns nothing
    set udg_TEMP_UnitGroup = GetUnitsInRectAll(GetPlayableMapRect())
    call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_SPAWN_Move_All_Func002A )
    //! beginusercode
    RemoveGroup(udg_TEMP_Un__itGroup)
    //! endusercode
endfunction

//===========================================================================
function InitTrig_SPAWN_Move_All takes nothing returns nothing
    set gg_trg_SPAWN_Move_All = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_SPAWN_Move_All, 1.00 )
    call TriggerAddAction( gg_trg_SPAWN_Move_All, function Trig_SPAWN_Move_All_Actions )
endfunction

//===========================================================================
// Trigger: Level Up Creeps
//===========================================================================
function Trig_Level_Up_Creeps_Func005C takes nothing returns boolean
    if ( not ( udg_INTcreepLevel >= 10 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Level_Up_Creeps_Actions takes nothing returns nothing
    set udg_INTcreepLevel = ( udg_INTcreepLevel + 1 )
    call StartTimerBJ( udg_CreepUpgrade, false, ( 90.00 + ( 30.00 * I2R(udg_INTcreepLevel) ) ) )
    call TimerDialogSetTitleBJ( udg_TIMEWINcreepLevelUpgrade, ( ( "Level " + I2S(udg_INTcreepLevel) ) + " - Upgrading in:" ) )
    if ( Trig_Level_Up_Creeps_Func005C() ) then
        call DestroyTimerDialogBJ( udg_TIMEWINcreepLevelUpgrade )
        call PauseTimerBJ( true, udg_CreepUpgrade )
        call DisableTrigger( GetTriggeringTrigger() )
    else
    endif
endfunction

//===========================================================================
function InitTrig_Level_Up_Creeps takes nothing returns nothing
    set gg_trg_Level_Up_Creeps = CreateTrigger(  )
    call TriggerRegisterTimerExpireEventBJ( gg_trg_Level_Up_Creeps, udg_CreepUpgrade )
    call TriggerAddAction( gg_trg_Level_Up_Creeps, function Trig_Level_Up_Creeps_Actions )
endfunction

//===========================================================================
// Trigger: Set up Creep Timer
//===========================================================================
function Trig_Set_up_Creep_Timer_Func005A takes nothing returns nothing
    call TimerDialogDisplayForPlayerBJ( true, udg_TIMEWINcreepLevelUpgrade, GetEnumPlayer() )
endfunction

function Trig_Set_up_Creep_Timer_Actions takes nothing returns nothing
    call StartTimerBJ( udg_CreepUpgrade, false, 90.00 )
    call CreateTimerDialogBJ( udg_CreepUpgrade, ( ( "Level " + ( I2S(udg_INTcreepLevel) + " - " ) ) + "Upgrading in:" ) )
    set udg_TIMEWINcreepLevelUpgrade = GetLastCreatedTimerDialogBJ()
    call ForForce( udg_ALL_PLAYERS, function Trig_Set_up_Creep_Timer_Func005A )
endfunction

//===========================================================================
function InitTrig_Set_up_Creep_Timer takes nothing returns nothing
    set gg_trg_Set_up_Creep_Timer = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Set_up_Creep_Timer, 5.00 )
    call TriggerAddAction( gg_trg_Set_up_Creep_Timer, function Trig_Set_up_Creep_Timer_Actions )
endfunction

//===========================================================================
// Trigger: Melee Initialization
//
// Default melee game initialization for all players
//===========================================================================
function Trig_Melee_Initialization_Func015A takes nothing returns nothing
    call SetPlayerFlagBJ( PLAYER_STATE_GIVES_BOUNTY, true, GetEnumPlayer() )
endfunction

function Trig_Melee_Initialization_Func045A takes nothing returns nothing
    call SetPlayerColorBJ( GetEnumPlayer(), PLAYER_COLOR_RED, true )
endfunction

function Trig_Melee_Initialization_Func046A takes nothing returns nothing
    call SetPlayerColorBJ( GetEnumPlayer(), PLAYER_COLOR_BLUE, true )
endfunction

function Trig_Melee_Initialization_Actions takes nothing returns nothing
    // generate custom frames and disable default ui:
    // Set up Lua Triggers
    //! beginusercode
    MapSetup()
    //! endusercode
    //  
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEOUT, 0.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0, 0, 0, 0 )
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_006, Player(0), 0 )
    call SetSkyModel( "Environment\\Sky\\BlizzardSky\\BlizzardSky.mdl" )
    call FogEnableOff(  )
    call FogMaskEnableOff(  )
    call TriggerExecute( gg_trg_Default_Unit_Groups_and_Regions )
    call MeleeStartingVisibility(  )
    set udg_UserPlayers = GetPlayersByMapControl(MAP_CONTROL_USER)
    set udg_ALL_PLAYERS = GetPlayersAll()
    call ForForce( udg_ALL_PLAYERS, function Trig_Melee_Initialization_Func015A )
    set udg_PLAYERcomputers[1] = Player(18)
    set udg_PLAYERcomputers[2] = Player(19)
    set udg_PLAYERcomputers[3] = Player(20)
    set udg_PLAYERcomputers[4] = Player(21)
    set udg_PLAYERcomputers[5] = Player(22)
    set udg_PLAYERcomputers[6] = Player(23)
    call ForceAddPlayerSimple( udg_PLAYERcomputers[1], udg_PLAYERGRPallied )
    call ForceAddPlayerSimple( udg_PLAYERcomputers[2], udg_PLAYERGRPallied )
    call ForceAddPlayerSimple( udg_PLAYERcomputers[3], udg_PLAYERGRPallied )
    call ForceAddPlayerSimple( udg_PLAYERcomputers[4], udg_PLAYERGRPfederation )
    call ForceAddPlayerSimple( udg_PLAYERcomputers[5], udg_PLAYERGRPfederation )
    call ForceAddPlayerSimple( udg_PLAYERcomputers[6], udg_PLAYERGRPfederation )
    //  
    call ForceAddPlayerSimple( Player(0), udg_PLAYERGRPalliedUsers )
    call ForceAddPlayerSimple( Player(1), udg_PLAYERGRPalliedUsers )
    call ForceAddPlayerSimple( Player(2), udg_PLAYERGRPalliedUsers )
    call ForceAddPlayerSimple( Player(3), udg_PLAYERGRPalliedUsers )
    call ForceAddPlayerSimple( Player(4), udg_PLAYERGRPalliedUsers )
    call ForceAddPlayerSimple( Player(5), udg_PLAYERGRPalliedUsers )
    //  
    call ForceAddPlayerSimple( Player(6), udg_PLAYERGRPfederationUsers )
    call ForceAddPlayerSimple( Player(7), udg_PLAYERGRPfederationUsers )
    call ForceAddPlayerSimple( Player(8), udg_PLAYERGRPfederationUsers )
    call ForceAddPlayerSimple( Player(9), udg_PLAYERGRPfederationUsers )
    call ForceAddPlayerSimple( Player(10), udg_PLAYERGRPfederationUsers )
    call ForceAddPlayerSimple( Player(11), udg_PLAYERGRPfederationUsers )
    //  
    call SetPlayerColorBJ( Player(0), PLAYER_COLOR_COAL, true )
    call SetPlayerColorBJ( Player(1), PLAYER_COLOR_EMERALD, true )
    call ForForce( udg_PLAYERGRPallied, function Trig_Melee_Initialization_Func045A )
    call ForForce( udg_PLAYERGRPfederation, function Trig_Melee_Initialization_Func046A )
endfunction

//===========================================================================
function InitTrig_Melee_Initialization takes nothing returns nothing
    set gg_trg_Melee_Initialization = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Melee_Initialization, function Trig_Melee_Initialization_Actions )
endfunction

//===========================================================================
// Trigger: Start Game
//===========================================================================
function Trig_Start_Game_Actions takes nothing returns nothing
    call CinematicFadeBJ( bj_CINEFADETYPE_FADEIN, 5.00, "ReplaceableTextures\\CameraMasks\\Black_mask.blp", 0, 0, 0, 100.00 )
    call CameraSetupApplyForPlayer( true, gg_cam_Camera_007, Player(0), 55.00 )
endfunction

//===========================================================================
function InitTrig_Start_Game takes nothing returns nothing
    set gg_trg_Start_Game = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Start_Game, 4.00 )
    call TriggerAddAction( gg_trg_Start_Game, function Trig_Start_Game_Actions )
endfunction

//===========================================================================
// Trigger: Enable Fog of War
//===========================================================================
function Trig_Enable_Fog_of_War_Actions takes nothing returns nothing
    call FogMaskEnableOn(  )
    call FogEnableOn(  )
endfunction

//===========================================================================
function InitTrig_Enable_Fog_of_War takes nothing returns nothing
    set gg_trg_Enable_Fog_of_War = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Enable_Fog_of_War, 15.00 )
    call TriggerAddAction( gg_trg_Enable_Fog_of_War, function Trig_Enable_Fog_of_War_Actions )
endfunction

//===========================================================================
// Trigger: Hero Picked
//===========================================================================
function Trig_Hero_Picked_Func002Func001C takes nothing returns boolean
    if ( not ( IsUnitAlly(GetBuyingUnit(), ForcePickRandomPlayer(udg_PLAYERGRPallied)) == true ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Picked_Func002Func013Func001C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == 'E001' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Picked_Func002Func013Func002C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == 'H00R' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Picked_Func002Func013Func003C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == 'H009' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Picked_Func002Func013Func004C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == 'H00J' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Picked_Func002Func013Func005C takes nothing returns boolean
    if ( not ( GetUnitTypeId(GetSoldUnit()) == 'E002' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Picked_Func002Func013A takes nothing returns nothing
    if ( Trig_Hero_Picked_Func002Func013Func001C() ) then
        call ReplaceUnitBJ( GetEnumUnit(), 'h00I', bj_UNIT_STATE_METHOD_RELATIVE )
    else
    endif
    if ( Trig_Hero_Picked_Func002Func013Func002C() ) then
        call ReplaceUnitBJ( GetEnumUnit(), 'h00B', bj_UNIT_STATE_METHOD_RELATIVE )
    else
    endif
    if ( Trig_Hero_Picked_Func002Func013Func003C() ) then
        call ReplaceUnitBJ( GetEnumUnit(), 'h00Y', bj_UNIT_STATE_METHOD_RELATIVE )
    else
    endif
    if ( Trig_Hero_Picked_Func002Func013Func004C() ) then
        call ReplaceUnitBJ( GetEnumUnit(), 'h00Z', bj_UNIT_STATE_METHOD_RELATIVE )
    else
    endif
    if ( Trig_Hero_Picked_Func002Func013Func005C() ) then
        call ReplaceUnitBJ( GetEnumUnit(), 'h00Q', bj_UNIT_STATE_METHOD_RELATIVE )
        //! beginusercode
        UnitMakeAbilityPermanent(udg_TEMP_Unit, true, FourCC("A031"))
        //! endusercode
        //! beginusercode
        UnitMakeAbilityPermanent(udg_TEMP_Unit, true, FourCC("A005"))
        //! endusercode
        //! beginusercode
        UnitMakeAbilityPermanent(udg_TEMP_Unit, true, FourCC("A037"))
        //! endusercode
    else
    endif
    set udg_Alters[GetConvertedPlayerId(GetOwningPlayer(udg_TEMP_Unit))] = GetLastReplacedUnitBJ()
endfunction

function Trig_Hero_Picked_Func002C takes nothing returns boolean
    if ( not ( CountUnitsInGroup(GetUnitsOfPlayerAndTypeId(GetOwningPlayer(GetSoldUnit()), 'h00H')) == 1 ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Picked_Actions takes nothing returns nothing
    if ( Trig_Hero_Picked_Func002C() ) then
        if ( Trig_Hero_Picked_Func002Func001C() ) then
            call SetUnitPositionLoc( GetSoldUnit(), GetRectCenter(gg_rct_Left_Castle) )
        else
            call SetUnitPositionLoc( GetSoldUnit(), GetRectCenter(gg_rct_Right_Castle) )
        endif
        set udg_UNIT_pickedHero[GetConvertedPlayerId(GetOwningPlayer(GetSoldUnit()))] = GetSoldUnit()
        set udg_TEMP_Unit = GetSoldUnit()
        call ConditionalTriggerExecute( gg_trg_Hero_Add_Starting_Abilities )
        call RemoveUnit( GetBuyingUnit() )
        call UnitAddItemByIdSwapped( 'I000', udg_TEMP_Unit )
        //  
        // Set Camera
        call ResetToGameCameraForPlayer( GetOwningPlayer(GetBuyingUnit()), 0 )
        call PanCameraToTimedLocForPlayer( GetOwningPlayer(GetBuyingUnit()), GetUnitLoc(GetSoldUnit()), 0 )
        call SelectUnitForPlayerSingle( GetSoldUnit(), GetOwningPlayer(GetSoldUnit()) )
        set udg_TEMP_UnitGroup = GetUnitsOfPlayerAndTypeId(GetOwningPlayer(udg_TEMP_Unit), 'halt')
        call ForGroupBJ( udg_TEMP_UnitGroup, function Trig_Hero_Picked_Func002Func013A )
        //! beginusercode
        DestroyGroup ( udg_TEMP_UnitGroup )
        //! endusercode
        //! beginusercode
        EnableTrigger(trg_Auto_Zoom)
        //! endusercode
    else
        call DisplayTextToForce( GetForceOfPlayer(GetOwningPlayer(GetBuyingUnit())), "TRIGSTR_3921" )
        call RemoveUnit( GetSoldUnit() )
    endif
endfunction

//===========================================================================
function InitTrig_Hero_Picked takes nothing returns nothing
    set gg_trg_Hero_Picked = CreateTrigger(  )
    call TriggerRegisterAnyUnitEventBJ( gg_trg_Hero_Picked, EVENT_PLAYER_UNIT_SELL )
    call TriggerAddAction( gg_trg_Hero_Picked, function Trig_Hero_Picked_Actions )
endfunction

//===========================================================================
// Trigger: Hero Add Starting Abilities
//===========================================================================
function Trig_Hero_Add_Starting_Abilities_Func001C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_TEMP_Unit) == 'H00R' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Add_Starting_Abilities_Func002C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_TEMP_Unit) == 'E002' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Add_Starting_Abilities_Func003C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_TEMP_Unit) == 'H009' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Add_Starting_Abilities_Func004C takes nothing returns boolean
    if ( not ( GetUnitTypeId(udg_TEMP_Unit) == 'H00J' ) ) then
        return false
    endif
    return true
endfunction

function Trig_Hero_Add_Starting_Abilities_Actions takes nothing returns nothing
    if ( Trig_Hero_Add_Starting_Abilities_Func001C() ) then
        call SelectHeroSkill( udg_TEMP_Unit, 'A001' )
    else
    endif
    if ( Trig_Hero_Add_Starting_Abilities_Func002C() ) then
        call SelectHeroSkill( udg_TEMP_Unit, 'A02Y' )
    else
    endif
    if ( Trig_Hero_Add_Starting_Abilities_Func003C() ) then
        call SelectHeroSkill( udg_TEMP_Unit, 'A01I' )
    else
    endif
    if ( Trig_Hero_Add_Starting_Abilities_Func004C() ) then
        call SelectHeroSkill( udg_TEMP_Unit, 'A04I' )
    else
    endif
    call ModifyHeroSkillPoints( udg_TEMP_Unit, bj_MODIFYMETHOD_ADD, 1 )
endfunction

//===========================================================================
function InitTrig_Hero_Add_Starting_Abilities takes nothing returns nothing
    set gg_trg_Hero_Add_Starting_Abilities = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Hero_Add_Starting_Abilities, function Trig_Hero_Add_Starting_Abilities_Actions )
endfunction

//===========================================================================
// Trigger: Select Tavern Create Units
//===========================================================================
function Trig_Select_Tavern_Create_Units_Func001A takes nothing returns nothing
    call CreateNUnitsAtLoc( 1, 'h00H', GetEnumPlayer(), udg_TEMP_Pos2, bj_UNIT_FACING )
    //! beginusercode
    RemoveLocation ( udg_TEMP_Pos2 )
    //! endusercode
endfunction

function Trig_Select_Tavern_Create_Units_Actions takes nothing returns nothing
    call ForForce( udg_UserPlayers, function Trig_Select_Tavern_Create_Units_Func001A )
endfunction

//===========================================================================
function InitTrig_Select_Tavern_Create_Units takes nothing returns nothing
    set gg_trg_Select_Tavern_Create_Units = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Select_Tavern_Create_Units, 1.00 )
    call TriggerAddAction( gg_trg_Select_Tavern_Create_Units, function Trig_Select_Tavern_Create_Units_Actions )
endfunction

//===========================================================================
// Trigger: Select Tavern
//===========================================================================
function Trig_Select_Tavern_Func001A takes nothing returns nothing
endfunction

function Trig_Select_Tavern_Actions takes nothing returns nothing
    call ForForce( udg_UserPlayers, function Trig_Select_Tavern_Func001A )
endfunction

//===========================================================================
function InitTrig_Select_Tavern takes nothing returns nothing
    set gg_trg_Select_Tavern = CreateTrigger(  )
    call TriggerRegisterTimerEventSingle( gg_trg_Select_Tavern, 2.00 )
    call TriggerAddAction( gg_trg_Select_Tavern, function Trig_Select_Tavern_Actions )
endfunction

//===========================================================================
// Trigger: Default Unit Groups and Regions
//===========================================================================
function Trig_Default_Unit_Groups_and_Regions_Actions takes nothing returns nothing
    // BASE LEFT TARGETS
    // BASE RIGHT TARGETS
    //  
    //  
    call GroupAddGroup( udg_UNIT_Bases[1], udg_UNIT_Bases_Teleport[1] )
    call GroupAddGroup( udg_UNIT_Bases[2], udg_UNIT_Bases_Teleport[2] )
    //  
    //  
    // HEAL LEFT
    // HEAL RIGHT
    //  
    //  
    // End Regions
    set udg_EndRegionsSpawn[1] = gg_rct_Right_Start_Top
    set udg_EndRegionsSpawn[2] = gg_rct_Right_Start
    set udg_EndRegionsSpawn[3] = gg_rct_Right_Start_Bottom
    set udg_EndRegionsSpawn[4] = gg_rct_Right_Hero
    set udg_EndRegionsSpawn[5] = gg_rct_Shipyard_End_Left
    set udg_EndRegionsSpawn[6] = gg_rct_Right_Shipyard
    set udg_EndRegionsSpawn[7] = gg_rct_Left_Elemental_Start
    set udg_EndRegionsSpawn[8] = gg_rct_Murloc_Left
    set udg_EndRegionsSpawn[9] = gg_rct_Aspect_of_Forest_Left
    set udg_EndRegionsSpawn[10] = gg_rct_Zombie_End_Left
    set udg_EndRegionsSpawn[11] = gg_rct_Elf_Base_Right
    //  
    set udg_EndRegionsSpawn[21] = gg_rct_Left_Start_Bottom
    set udg_EndRegionsSpawn[22] = gg_rct_Left_Start
    set udg_EndRegionsSpawn[23] = gg_rct_Left_Start_Top
    set udg_EndRegionsSpawn[24] = gg_rct_Left_Hero
    set udg_EndRegionsSpawn[25] = gg_rct_Shipyard_End_Right
    set udg_EndRegionsSpawn[26] = gg_rct_Left_Shipyard
    set udg_EndRegionsSpawn[27] = gg_rct_Right_Elemental_Start
    set udg_EndRegionsSpawn[28] = gg_rct_Murloc_Right
    set udg_EndRegionsSpawn[29] = gg_rct_Aspect_of_Forest_Right
    set udg_EndRegionsSpawn[30] = gg_rct_Zombie_End_Right
    set udg_EndRegionsSpawn[31] = gg_rct_Elf_Base_Left
endfunction

//===========================================================================
function InitTrig_Default_Unit_Groups_and_Regions takes nothing returns nothing
    set gg_trg_Default_Unit_Groups_and_Regions = CreateTrigger(  )
    call TriggerAddAction( gg_trg_Default_Unit_Groups_and_Regions, function Trig_Default_Unit_Groups_and_Regions_Actions )
endfunction

//===========================================================================
// Trigger: DEFAULT Villiger Unit Types
//===========================================================================
function Trig_DEFAULT_Villiger_Unit_Types_Actions takes nothing returns nothing
    //  
    //  
    // Villiger Unit Types
    set udg_Villiger_UnitTypes[1] = 'n00R'
    set udg_Villiger_UnitTypes[2] = 'n00R'
    set udg_Villiger_UnitTypes[3] = 'n00S'
    set udg_Villiger_UnitTypes[4] = 'n00Q'
    set udg_Villiger_UnitTypes[5] = 'n00Q'
    set udg_Villiger_UnitTypes[6] = 'n00P'
    set udg_Villiger_UnitTypes[7] = 'n00O'
endfunction

//===========================================================================
function InitTrig_DEFAULT_Villiger_Unit_Types takes nothing returns nothing
    set gg_trg_DEFAULT_Villiger_Unit_Types = CreateTrigger(  )
    call TriggerAddAction( gg_trg_DEFAULT_Villiger_Unit_Types, function Trig_DEFAULT_Villiger_Unit_Types_Actions )
endfunction

//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_FUNC_Calculate_Level_Factor(  )
    call InitTrig_testing(  )
    call InitTrig_Open_Gate_Right_Murloc(  )
    call InitTrig_Open_Gate_Left_Murloc(  )
    call InitTrig_Open_Gate_Right_Aspect_of_Death(  )
    call InitTrig_Open_Gate_Left_Aspect_of_Death(  )
    call InitTrig_Open_Gate_Right_Aspect_of_Air(  )
    call InitTrig_Open_Gate_Left_Aspect_of_Forest(  )
    call InitTrig_Open_Gate_Right_Aspect_of_Forest(  )
    call InitTrig_Creep_Dies_Init(  )
    call InitTrig_Creep_Revive_Count(  )
    call InitTrig_Shade_Strength_Copy(  )
    call InitTrig_Mana_Overload_Research(  )
    call InitTrig_Frost_Attack_Research(  )
    call InitTrig_Feedback(  )
    call InitTrig_Shade_Strength(  )
    call InitTrig_Swift_Moves(  )
    call InitTrig_Attribute_Upgrade(  )
    call InitTrig_INIT_Gates(  )
    call InitTrig_Toggle_Gate(  )
    call InitTrig_Gate_Dies(  )
    call InitTrig_Start_Event(  )
    call InitTrig_Event_Count(  )
    call InitTrig_DW_Ancient_Chaos(  )
    call InitTrig_DW_Fire_Hounds(  )
    call InitTrig_Doom_Warden_End(  )
    call InitTrig_testing_LUA(  )
    call InitTrig_AI_INIT_Brawler(  )
    call InitTrig_AI_INIT_Tactition(  )
    call InitTrig_AI_INIT_Mana_Addict(  )
    call InitTrig_AI_INIT_Time_Mage(  )
    call InitTrig_AI_INIT_Shifter(  )
    call InitTrig_AI_Hero_STATES(  )
    call InitTrig_AI_MAIN_Snapshot(  )
    call InitTrig_AI_MAIN_END(  )
    call InitTrig_STATE_Attack_Hero(  )
    call InitTrig_STATE_Stop_Following_Hero(  )
    call InitTrig_STATE_High_Health(  )
    call InitTrig_STATE_Update_Destination(  )
    call InitTrig_STATE_Spell_Finished_Casting(  )
    call InitTrig_STATE_Revives(  )
    call InitTrig_STATE_Upgrade_Hero(  )
    call InitTrig_STATE_Dead(  )
    call InitTrig_STATE_Low_Health(  )
    call InitTrig_STATE_Recieving_Heavy_Damage(  )
    call InitTrig_STATE_Stopped_Recieving_Heavy_Damage(  )
    call InitTrig_AI_MAIN_Tactition(  )
    call InitTrig_STATE_CAST_Iron_Defense(  )
    call InitTrig_STATE_CAST_Inspire(  )
    call InitTrig_STATE_CAST_Attack(  )
    call InitTrig_AI_MAIN_Mana_Addict(  )
    call InitTrig_STATE_CAST_Mana_Shield(  )
    call InitTrig_STATE_CAST_Frost_Nova(  )
    call InitTrig_AI_MAIN_Shifter(  )
    call InitTrig_STATE_CAST_Shift_Back(  )
    call InitTrig_STATE_CAST_Shift_Forward(  )
    call InitTrig_STATE_CAST_Bladestorm(  )
    call InitTrig_AI_MAIN_Brawler(  )
    call InitTrig_STATE_CAST_Drain(  )
    call InitTrig_STATE_CAST_Unleash_Rage(  )
    call InitTrig_AI_MAIN_Time_Mage(  )
    call InitTrig_STATE_CAST_Time_Travel(  )
    call InitTrig_STATE_CAST_Chrono_Atrophy(  )
    call InitTrig_EVENT_Casts_a_Spell(  )
    call InitTrig_EVENT_Base_Dies(  )
    call InitTrig_AI_Attack_a_Base(  )
    call InitTrig_AI_Go_To_Closest_Heal(  )
    call InitTrig_AI_Continue_to_Destination(  )
    call InitTrig_Camera_Reset(  )
    call InitTrig_Zombie_Infect(  )
    call InitTrig_Base_Heal_Spell(  )
    call InitTrig_Upgrade_to_Footman(  )
    call InitTrig_Upgrade_to_Fel_Orc(  )
    call InitTrig_Upgrade_to_Captian(  )
    call InitTrig_Upgrade_to_Scarlet_Captian(  )
    call InitTrig_Upgrade_to_Commander(  )
    call InitTrig_Automation_Dies(  )
    call InitTrig_Boat_Dies(  )
    call InitTrig_Knight_Dies(  )
    call InitTrig_Tree_Treants(  )
    call InitTrig_Chain_Lightning(  )
    call InitTrig_Summon_Rogues(  )
    call InitTrig_Energy_Tower(  )
    call InitTrig_Watch_Tower_Mana_Shield(  )
    call InitTrig_Regrow_Trees(  )
    call InitTrig_Pathing_INIT(  )
    call InitTrig_Set_Creeps_to_Attack_Base_Left(  )
    call InitTrig_Set_Creeps_to_Attack_Elf_Base_Right(  )
    call InitTrig_Set_Creeps_to_Attack_Base_Right(  )
    call InitTrig_Set_Creeps_to_Attack_Elf_Base_Left(  )
    call InitTrig_Set_Creeps_to_Attack_Castle_from_Elf_Left(  )
    call InitTrig_Set_Creeps_to_Attack_Castle_from_Elf_Right(  )
    call InitTrig_Aspect_of_Tides_End(  )
    call InitTrig_Aspect_of_Death_End(  )
    call InitTrig_Aspect_of_Forest_End(  )
    call InitTrig_Aspect_of_Air_End(  )
    call InitTrig_Shipyard_Left_End(  )
    call InitTrig_Shipyard_Right_End(  )
    call InitTrig_Creeps_keep_going_after_Order(  )
    call InitTrig_Creeps_keep_going_after_Spell(  )
    call InitTrig_Order_Units_LOOP(  )
    call InitTrig_FUNC_Move_Creeps(  )
    call InitTrig_FUNC_Shipyard(  )
    call InitTrig_Brawler_No_Mana(  )
    call InitTrig_Brawler_Rage_GUI(  )
    call InitTrig_Drain_Start(  )
    call InitTrig_Drain_Loop(  )
    call InitTrig_Unleash_Rage_Start(  )
    call InitTrig_Unleash_Rage(  )
    call InitTrig_Falling_Strike_CAST(  )
    call InitTrig_Jump_System_1(  )
    call InitTrig_Jump_System_2(  )
    call InitTrig_FA_Start(  )
    call InitTrig_FA_Loop(  )
    call InitTrig_Shifter_Bladestorm_START(  )
    call InitTrig_Mana_Overload_START(  )
    call InitTrig_Mana_Overload_LOOP(  )
    call InitTrig_Frost_INIT(  )
    call InitTrig_Frost_CAST(  )
    call InitTrig_Frost_LOOP(  )
    call InitTrig_Mana_Burst_Secondary(  )
    call InitTrig_Paradox_INIT(  )
    call InitTrig_Paradox_CAST(  )
    call InitTrig_Paradox_LOOP(  )
    call InitTrig_Chrono_Atrophy_CAST(  )
    call InitTrig_Time_Travel_INIT(  )
    call InitTrig_Time_Travel_CAST(  )
    call InitTrig_Time_Travel_LOOP(  )
    call InitTrig_Attack_INIT(  )
    call InitTrig_Attack_CAST(  )
    call InitTrig_Attack_LOOP(  )
    call InitTrig_Hash_INIT(  )
    call InitTrig_Inspire_Start(  )
    call InitTrig_Inspire_LOOP(  )
    call InitTrig_Inspire_DIE(  )
    call InitTrig_Bolster(  )
    call InitTrig_Level_Up_Team(  )
    call InitTrig_Revive_Hero(  )
    call InitTrig_Revive_Hero_Timer(  )
    call InitTrig_End_Of_Game_Left(  )
    call InitTrig_End_Of_Game_Right(  )
    call InitTrig_SPAWN_Move_All(  )
    call InitTrig_Level_Up_Creeps(  )
    call InitTrig_Set_up_Creep_Timer(  )
    call InitTrig_Melee_Initialization(  )
    call InitTrig_Start_Game(  )
    call InitTrig_Enable_Fog_of_War(  )
    call InitTrig_Hero_Picked(  )
    call InitTrig_Hero_Add_Starting_Abilities(  )
    call InitTrig_Select_Tavern_Create_Units(  )
    call InitTrig_Select_Tavern(  )
    call InitTrig_Default_Unit_Groups_and_Regions(  )
    call InitTrig_DEFAULT_Villiger_Unit_Types(  )
endfunction

//===========================================================================
function RunInitializationTriggers takes nothing returns nothing
    call ConditionalTriggerExecute( gg_trg_INIT_Gates )
    call ConditionalTriggerExecute( gg_trg_Pathing_INIT )
    call ConditionalTriggerExecute( gg_trg_Frost_INIT )
    call ConditionalTriggerExecute( gg_trg_Paradox_INIT )
    call ConditionalTriggerExecute( gg_trg_Time_Travel_INIT )
    call ConditionalTriggerExecute( gg_trg_Attack_INIT )
    call ConditionalTriggerExecute( gg_trg_Hash_INIT )
    call ConditionalTriggerExecute( gg_trg_Melee_Initialization )
endfunction

//***************************************************************************
//*
//*  Players
//*
//***************************************************************************

function InitCustomPlayerSlots takes nothing returns nothing

    // Player 0
    call SetPlayerStartLocation( Player(0), 0 )
    call ForcePlayerStartLocation( Player(0), 0 )
    call SetPlayerColor( Player(0), ConvertPlayerColor(0) )
    call SetPlayerRacePreference( Player(0), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(0), false )
    call SetPlayerController( Player(0), MAP_CONTROL_USER )

    // Player 1
    call SetPlayerStartLocation( Player(1), 1 )
    call ForcePlayerStartLocation( Player(1), 1 )
    call SetPlayerColor( Player(1), ConvertPlayerColor(1) )
    call SetPlayerRacePreference( Player(1), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(1), false )
    call SetPlayerController( Player(1), MAP_CONTROL_USER )

    // Player 2
    call SetPlayerStartLocation( Player(2), 2 )
    call ForcePlayerStartLocation( Player(2), 2 )
    call SetPlayerColor( Player(2), ConvertPlayerColor(2) )
    call SetPlayerRacePreference( Player(2), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(2), false )
    call SetPlayerController( Player(2), MAP_CONTROL_USER )

    // Player 3
    call SetPlayerStartLocation( Player(3), 3 )
    call ForcePlayerStartLocation( Player(3), 3 )
    call SetPlayerColor( Player(3), ConvertPlayerColor(3) )
    call SetPlayerRacePreference( Player(3), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(3), false )
    call SetPlayerController( Player(3), MAP_CONTROL_USER )

    // Player 4
    call SetPlayerStartLocation( Player(4), 4 )
    call SetPlayerColor( Player(4), ConvertPlayerColor(4) )
    call SetPlayerRacePreference( Player(4), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(4), false )
    call SetPlayerController( Player(4), MAP_CONTROL_USER )

    // Player 5
    call SetPlayerStartLocation( Player(5), 5 )
    call SetPlayerColor( Player(5), ConvertPlayerColor(5) )
    call SetPlayerRacePreference( Player(5), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(5), false )
    call SetPlayerController( Player(5), MAP_CONTROL_USER )

    // Player 6
    call SetPlayerStartLocation( Player(6), 6 )
    call SetPlayerColor( Player(6), ConvertPlayerColor(6) )
    call SetPlayerRacePreference( Player(6), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(6), false )
    call SetPlayerController( Player(6), MAP_CONTROL_USER )

    // Player 7
    call SetPlayerStartLocation( Player(7), 7 )
    call SetPlayerColor( Player(7), ConvertPlayerColor(7) )
    call SetPlayerRacePreference( Player(7), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(7), false )
    call SetPlayerController( Player(7), MAP_CONTROL_USER )

    // Player 8
    call SetPlayerStartLocation( Player(8), 8 )
    call SetPlayerColor( Player(8), ConvertPlayerColor(8) )
    call SetPlayerRacePreference( Player(8), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(8), false )
    call SetPlayerController( Player(8), MAP_CONTROL_USER )

    // Player 9
    call SetPlayerStartLocation( Player(9), 9 )
    call SetPlayerColor( Player(9), ConvertPlayerColor(9) )
    call SetPlayerRacePreference( Player(9), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(9), false )
    call SetPlayerController( Player(9), MAP_CONTROL_USER )

    // Player 10
    call SetPlayerStartLocation( Player(10), 10 )
    call SetPlayerColor( Player(10), ConvertPlayerColor(10) )
    call SetPlayerRacePreference( Player(10), RACE_PREF_UNDEAD )
    call SetPlayerRaceSelectable( Player(10), false )
    call SetPlayerController( Player(10), MAP_CONTROL_USER )

    // Player 11
    call SetPlayerStartLocation( Player(11), 11 )
    call SetPlayerColor( Player(11), ConvertPlayerColor(11) )
    call SetPlayerRacePreference( Player(11), RACE_PREF_NIGHTELF )
    call SetPlayerRaceSelectable( Player(11), false )
    call SetPlayerController( Player(11), MAP_CONTROL_USER )

    // Player 18
    call SetPlayerStartLocation( Player(18), 12 )
    call SetPlayerColor( Player(18), ConvertPlayerColor(18) )
    call SetPlayerRacePreference( Player(18), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(18), false )
    call SetPlayerController( Player(18), MAP_CONTROL_COMPUTER )

    // Player 19
    call SetPlayerStartLocation( Player(19), 13 )
    call SetPlayerColor( Player(19), ConvertPlayerColor(19) )
    call SetPlayerRacePreference( Player(19), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(19), false )
    call SetPlayerController( Player(19), MAP_CONTROL_COMPUTER )

    // Player 20
    call SetPlayerStartLocation( Player(20), 14 )
    call SetPlayerColor( Player(20), ConvertPlayerColor(20) )
    call SetPlayerRacePreference( Player(20), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(20), false )
    call SetPlayerController( Player(20), MAP_CONTROL_COMPUTER )

    // Player 21
    call SetPlayerStartLocation( Player(21), 15 )
    call SetPlayerColor( Player(21), ConvertPlayerColor(21) )
    call SetPlayerRacePreference( Player(21), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(21), false )
    call SetPlayerController( Player(21), MAP_CONTROL_COMPUTER )

    // Player 22
    call SetPlayerStartLocation( Player(22), 16 )
    call SetPlayerColor( Player(22), ConvertPlayerColor(22) )
    call SetPlayerRacePreference( Player(22), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(22), false )
    call SetPlayerController( Player(22), MAP_CONTROL_COMPUTER )

    // Player 23
    call SetPlayerStartLocation( Player(23), 17 )
    call SetPlayerColor( Player(23), ConvertPlayerColor(23) )
    call SetPlayerRacePreference( Player(23), RACE_PREF_HUMAN )
    call SetPlayerRaceSelectable( Player(23), false )
    call SetPlayerController( Player(23), MAP_CONTROL_COMPUTER )

endfunction

function InitCustomTeams takes nothing returns nothing
    // Force: TRIGSTR_474
    call SetPlayerTeam( Player(0), 0 )
    call SetPlayerState( Player(0), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(1), 0 )
    call SetPlayerState( Player(1), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(2), 0 )
    call SetPlayerState( Player(2), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(3), 0 )
    call SetPlayerState( Player(3), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(4), 0 )
    call SetPlayerState( Player(4), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(5), 0 )
    call SetPlayerState( Player(5), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(18), 0 )
    call SetPlayerState( Player(18), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(19), 0 )
    call SetPlayerState( Player(19), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(20), 0 )
    call SetPlayerState( Player(20), PLAYER_STATE_ALLIED_VICTORY, 1 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(0), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(1), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(2), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(3), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(4), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(5), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(19), true )
    call SetPlayerAllianceStateAllyBJ( Player(18), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(19), Player(20), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(0), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(1), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(2), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(3), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(4), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(5), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(18), true )
    call SetPlayerAllianceStateAllyBJ( Player(20), Player(19), true )

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(18), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(19), true )
    call SetPlayerAllianceStateVisionBJ( Player(0), Player(20), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(18), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(19), true )
    call SetPlayerAllianceStateVisionBJ( Player(1), Player(20), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(18), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(19), true )
    call SetPlayerAllianceStateVisionBJ( Player(2), Player(20), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(18), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(19), true )
    call SetPlayerAllianceStateVisionBJ( Player(3), Player(20), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(18), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(19), true )
    call SetPlayerAllianceStateVisionBJ( Player(4), Player(20), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(18), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(19), true )
    call SetPlayerAllianceStateVisionBJ( Player(5), Player(20), true )
    call SetPlayerAllianceStateVisionBJ( Player(18), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(18), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(18), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(18), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(18), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(18), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(18), Player(19), true )
    call SetPlayerAllianceStateVisionBJ( Player(18), Player(20), true )
    call SetPlayerAllianceStateVisionBJ( Player(19), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(19), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(19), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(19), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(19), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(19), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(19), Player(18), true )
    call SetPlayerAllianceStateVisionBJ( Player(19), Player(20), true )
    call SetPlayerAllianceStateVisionBJ( Player(20), Player(0), true )
    call SetPlayerAllianceStateVisionBJ( Player(20), Player(1), true )
    call SetPlayerAllianceStateVisionBJ( Player(20), Player(2), true )
    call SetPlayerAllianceStateVisionBJ( Player(20), Player(3), true )
    call SetPlayerAllianceStateVisionBJ( Player(20), Player(4), true )
    call SetPlayerAllianceStateVisionBJ( Player(20), Player(5), true )
    call SetPlayerAllianceStateVisionBJ( Player(20), Player(18), true )
    call SetPlayerAllianceStateVisionBJ( Player(20), Player(19), true )

    // Force: TRIGSTR_477
    call SetPlayerTeam( Player(6), 1 )
    call SetPlayerState( Player(6), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(7), 1 )
    call SetPlayerState( Player(7), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(8), 1 )
    call SetPlayerState( Player(8), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(9), 1 )
    call SetPlayerState( Player(9), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(10), 1 )
    call SetPlayerState( Player(10), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(11), 1 )
    call SetPlayerState( Player(11), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(21), 1 )
    call SetPlayerState( Player(21), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(22), 1 )
    call SetPlayerState( Player(22), PLAYER_STATE_ALLIED_VICTORY, 1 )
    call SetPlayerTeam( Player(23), 1 )
    call SetPlayerState( Player(23), PLAYER_STATE_ALLIED_VICTORY, 1 )

    //   Allied
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(6), Player(23), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(7), Player(23), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(8), Player(23), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(9), Player(23), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(10), Player(23), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(11), Player(23), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(22), true )
    call SetPlayerAllianceStateAllyBJ( Player(21), Player(23), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(22), Player(23), true )
    call SetPlayerAllianceStateAllyBJ( Player(23), Player(6), true )
    call SetPlayerAllianceStateAllyBJ( Player(23), Player(7), true )
    call SetPlayerAllianceStateAllyBJ( Player(23), Player(8), true )
    call SetPlayerAllianceStateAllyBJ( Player(23), Player(9), true )
    call SetPlayerAllianceStateAllyBJ( Player(23), Player(10), true )
    call SetPlayerAllianceStateAllyBJ( Player(23), Player(11), true )
    call SetPlayerAllianceStateAllyBJ( Player(23), Player(21), true )
    call SetPlayerAllianceStateAllyBJ( Player(23), Player(22), true )

    //   Shared Vision
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(21), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(22), true )
    call SetPlayerAllianceStateVisionBJ( Player(6), Player(23), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(21), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(22), true )
    call SetPlayerAllianceStateVisionBJ( Player(7), Player(23), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(21), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(22), true )
    call SetPlayerAllianceStateVisionBJ( Player(8), Player(23), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(21), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(22), true )
    call SetPlayerAllianceStateVisionBJ( Player(9), Player(23), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(21), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(22), true )
    call SetPlayerAllianceStateVisionBJ( Player(10), Player(23), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(21), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(22), true )
    call SetPlayerAllianceStateVisionBJ( Player(11), Player(23), true )
    call SetPlayerAllianceStateVisionBJ( Player(21), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(21), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(21), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(21), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(21), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(21), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(21), Player(22), true )
    call SetPlayerAllianceStateVisionBJ( Player(21), Player(23), true )
    call SetPlayerAllianceStateVisionBJ( Player(22), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(22), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(22), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(22), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(22), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(22), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(22), Player(21), true )
    call SetPlayerAllianceStateVisionBJ( Player(22), Player(23), true )
    call SetPlayerAllianceStateVisionBJ( Player(23), Player(6), true )
    call SetPlayerAllianceStateVisionBJ( Player(23), Player(7), true )
    call SetPlayerAllianceStateVisionBJ( Player(23), Player(8), true )
    call SetPlayerAllianceStateVisionBJ( Player(23), Player(9), true )
    call SetPlayerAllianceStateVisionBJ( Player(23), Player(10), true )
    call SetPlayerAllianceStateVisionBJ( Player(23), Player(11), true )
    call SetPlayerAllianceStateVisionBJ( Player(23), Player(21), true )
    call SetPlayerAllianceStateVisionBJ( Player(23), Player(22), true )

endfunction

function InitAllyPriorities takes nothing returns nothing

    call SetStartLocPrioCount( 0, 11 )
    call SetStartLocPrio( 0, 0, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 1, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 2, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 3, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 4, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 5, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 6, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 7, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 8, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 9, 10, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 0, 10, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 1, 11 )
    call SetStartLocPrio( 1, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 1, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 2, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 3, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 4, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 5, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 6, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 7, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 8, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 9, 10, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 1, 10, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 2, 11 )
    call SetStartLocPrio( 2, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 1, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 2, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 3, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 4, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 5, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 6, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 7, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 8, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 9, 10, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 2, 10, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 3, 11 )
    call SetStartLocPrio( 3, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 1, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 2, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 3, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 4, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 5, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 6, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 7, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 8, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 9, 10, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 3, 10, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 4, 11 )
    call SetStartLocPrio( 4, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 1, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 2, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 3, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 4, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 5, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 6, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 7, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 8, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 9, 10, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 4, 10, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 5, 11 )
    call SetStartLocPrio( 5, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 1, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 2, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 3, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 4, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 5, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 6, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 7, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 8, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 9, 10, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 5, 10, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 6, 11 )
    call SetStartLocPrio( 6, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 1, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 2, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 3, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 4, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 5, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 6, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 7, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 8, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 9, 10, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 6, 10, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 7, 11 )
    call SetStartLocPrio( 7, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 1, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 2, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 3, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 4, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 5, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 6, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 7, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 8, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 9, 10, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 7, 10, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 8, 11 )
    call SetStartLocPrio( 8, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 1, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 2, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 3, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 4, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 5, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 6, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 7, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 8, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 9, 10, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 8, 10, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 9, 11 )
    call SetStartLocPrio( 9, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 1, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 2, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 3, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 4, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 5, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 6, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 7, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 8, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 9, 10, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 9, 10, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 10, 11 )
    call SetStartLocPrio( 10, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 1, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 2, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 3, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 4, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 5, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 6, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 7, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 8, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 9, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 10, 10, 11, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 11, 11 )
    call SetStartLocPrio( 11, 0, 0, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 1, 1, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 2, 2, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 3, 3, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 4, 4, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 5, 5, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 6, 6, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 7, 7, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 8, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 9, 9, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 11, 10, 10, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 12, 2 )
    call SetStartLocPrio( 12, 0, 5, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 12, 1, 17, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 12, 13 )
    call SetEnemyStartLocPrio( 12, 0, 0, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 1, 1, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 2, 5, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 3, 6, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 4, 7, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 5, 8, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 6, 9, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 7, 10, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 12, 8, 11, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 12, 9, 13, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 10, 15, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 12, 11, 16, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 13, 10 )
    call SetStartLocPrio( 13, 0, 0, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 1, 1, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 2, 2, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 3, 3, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 4, 12, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 5, 14, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 6, 15, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 7, 16, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 13, 8, 17, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 13, 8 )
    call SetEnemyStartLocPrio( 13, 0, 6, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 13, 1, 7, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 13, 2, 8, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 13, 3, 9, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 13, 4, 12, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 13, 5, 14, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 13, 6, 16, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 13, 7, 17, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 14, 3 )
    call SetEnemyStartLocPrio( 14, 0, 6, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 14, 1, 7, MAP_LOC_PRIO_HIGH )
    call SetEnemyStartLocPrio( 14, 2, 8, MAP_LOC_PRIO_HIGH )

    call SetStartLocPrioCount( 15, 4 )
    call SetStartLocPrio( 15, 0, 2, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 15, 1, 12, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 15, 2, 17, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 15, 5 )
    call SetEnemyStartLocPrio( 15, 0, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 15, 1, 6, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 15, 2, 12, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 15, 3, 17, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 16, 4 )
    call SetStartLocPrio( 16, 0, 2, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 16, 1, 12, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 16, 2, 15, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 16, 3, 17, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 16, 4 )
    call SetEnemyStartLocPrio( 16, 0, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 16, 1, 12, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 16, 2, 15, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 16, 3, 17, MAP_LOC_PRIO_LOW )

    call SetStartLocPrioCount( 17, 7 )
    call SetStartLocPrio( 17, 0, 2, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 17, 1, 6, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 17, 2, 7, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 17, 3, 8, MAP_LOC_PRIO_HIGH )
    call SetStartLocPrio( 17, 4, 12, MAP_LOC_PRIO_LOW )
    call SetStartLocPrio( 17, 5, 15, MAP_LOC_PRIO_LOW )

    call SetEnemyStartLocPrioCount( 17, 4 )
    call SetEnemyStartLocPrio( 17, 0, 2, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 1, 12, MAP_LOC_PRIO_LOW )
    call SetEnemyStartLocPrio( 17, 2, 15, MAP_LOC_PRIO_LOW )
endfunction

//***************************************************************************
//*
//*  Main Initialization
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call SetCameraBounds( -29184.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -14208.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 6144.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 4864.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -29184.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 4864.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 6144.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -14208.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM) )
    call SetDayNightModels( "Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl" )
    call SetTerrainFogEx( 0, 2000.0, 7600.0, 0.500, 0.373, 0.471, 0.588 )
    call NewSoundEnvironment( "Default" )
    call SetAmbientDaySound( "CityScapeDay" )
    call SetAmbientNightSound( "CityScapeNight" )
    call SetMapMusic( "Music", true, 0 )
    call InitSounds(  )
    call CreateRegions(  )
    call CreateCameras(  )
    call CreateAllUnits(  )
    call InitBlizzard(  )
    call InitGlobals(  )
    call InitCustomTriggers(  )
    call RunInitializationTriggers(  )

endfunction

//***************************************************************************
//*
//*  Map Configuration
//*
//***************************************************************************

function config takes nothing returns nothing
    call SetMapName( "TRIGSTR_003" )
    call SetMapDescription( "TRIGSTR_005" )
    call SetPlayers( 18 )
    call SetTeams( 18 )
    call SetGamePlacement( MAP_PLACEMENT_TEAMS_TOGETHER )

    call DefineStartLocation( 0, -11584.0, -4544.0 )
    call DefineStartLocation( 1, -11584.0, -4544.0 )
    call DefineStartLocation( 2, -11584.0, -4544.0 )
    call DefineStartLocation( 3, -11584.0, -4544.0 )
    call DefineStartLocation( 4, -11584.0, -4544.0 )
    call DefineStartLocation( 5, -11584.0, -4544.0 )
    call DefineStartLocation( 6, -11584.0, -4544.0 )
    call DefineStartLocation( 7, -11584.0, -4544.0 )
    call DefineStartLocation( 8, -11584.0, -4544.0 )
    call DefineStartLocation( 9, -11584.0, -4544.0 )
    call DefineStartLocation( 10, -11584.0, -4544.0 )
    call DefineStartLocation( 11, -11584.0, -4544.0 )
    call DefineStartLocation( 12, -11584.0, -4544.0 )
    call DefineStartLocation( 13, -11584.0, -4544.0 )
    call DefineStartLocation( 14, -11584.0, -4544.0 )
    call DefineStartLocation( 15, -11584.0, -4544.0 )
    call DefineStartLocation( 16, -11584.0, -4544.0 )
    call DefineStartLocation( 17, -11584.0, -4544.0 )

    // Player setup
    call InitCustomPlayerSlots(  )
    call InitCustomTeams(  )
    call InitAllyPriorities(  )
endfunction

